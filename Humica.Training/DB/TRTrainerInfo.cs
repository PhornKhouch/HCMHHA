//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Humica.Training
{
    using System;
    using System.Collections.Generic;
    using System.ComponentModel.DataAnnotations;
    using System.ComponentModel.DataAnnotations.Schema;
    using System.Linq;
    using Humica.Core.DB;
    public partial class TRTrainerInfo
    {
        private HumicaDBContext _db = new HumicaDBContext();
        public int TrainNo { get; set; }
        public string TrainerTypeID { get; set; }
        [Required]
        public string TrainerCode { get; set; }
        public string TrainerName { get; set; }
        public string Position { get; set; }
        public string Department { get; set; }
        public string Email { get; set; }
        public DateTime? StartDate { get; set; }
        public System.DateTime? CreatedOn { get; set; }
        public string CreatedBy { get; set; }
        public Nullable<System.DateTime> ChangedOn { get; set; }
        public string ChangedBy { get; set; }
        public string EmpName => _db.HRStaffProfiles.Where(w=>w.EmpCode==TrainerCode).Select(w => w.AllName).FirstOrDefault()??"";
        public string InternalEmail => _db.HRStaffProfiles.Where(w => w.EmpCode == TrainerCode).Select(w => w.Email).FirstOrDefault()??"";
        public string GetInternalPosition
        {
            get
            {
                HRStaffProfile staffProfile= _db.HRStaffProfiles.Where(w => w.EmpCode == TrainerCode).FirstOrDefault();
                if (staffProfile == null) return string.Empty;
                HRPosition position = _db.HRPositions.Where(w => w.Code == staffProfile.JobCode).FirstOrDefault();
                if (position == null) return string.Empty;
                return position.Description;
            }
        }
        public string GetInternalDept
        {
            get
            {
                HRStaffProfile staffProfile = _db.HRStaffProfiles.Where(w => w.EmpCode == TrainerCode).FirstOrDefault();
                if (staffProfile == null) return string.Empty;
                HRDepartment department = _db.HRDepartments.Where(w => w.Code == staffProfile.DEPT).FirstOrDefault();
                if (department == null) return string.Empty;
                return department.Description;
            }
        }
    }
}
