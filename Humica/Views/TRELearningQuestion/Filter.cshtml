@model Humica.Training.Setup.ClsELearningQuestion

@Html.DevExpress().FormLayout(settings =>
{


    settings.Name = "FTGernalAccounting";
    settings.AlignItemCaptionsInAllGroups = true;

  

    settings.Items.AddGroupItem(m => Model.Header, g =>
    {
        g.ColCount = 6;
        g.GroupBoxDecoration = GroupBoxDecoration.None;
        g.SettingsItemCaptions.HorizontalAlign = FormLayoutHorizontalAlign.Right;

        g.Items
    .Add(m =>
    {
        m.Caption = Humica.EF.Models.SY.SYSettings.getLabel((List<Humica.EF.MD.CFForm>
)ViewData[Humica.EF.SYSConstant.LIST_CONF_FORM], "Question Code");

    })
        .SetNestedContent(() =>
        {
            g.Items.Add(m =>
            {
                m.Caption = Humica.EF.Models.SY.SYSettings.getLabel((List<Humica.EF.MD.CFForm>)
                    ViewData[Humica.EF.SYSConstant.LIST_CONF_FORM], "Branch * ");
                m.ColumnSpan = 2;
            })
                          .SetNestedContent(() =>
                          {
                              Html.DevExpress().ComboBoxFor(i => i.Header.Branch, s =>
                              {

                                  s.Properties.ClientInstanceName = "txtBranch";
                                  s.Properties.NullText = ViewData[Humica.EF.SYSConstant.DATE_FORMAT].ToString();
                                  s.Properties.ValidationSettings.ErrorDisplayMode = ErrorDisplayMode.ImageWithTooltip;
                                  s.Width = Unit.Percentage(100);
                                  s.Properties.ValidationSettings.SetFocusOnError = true;
                                  s.Properties.ValidationSettings.ErrorText = "*";
                                  s.Properties.ValueField = "Branch";
                                  s.Properties.TextField = "Description";
                                  s.Properties.TextFormatString = "{1}";
                                  s.Properties.DropDownStyle = DropDownStyle.DropDownList;
                                  s.Properties.Columns.Add("Description", Humica.EF.Models.SY.SYSettings.getLabel("Description"));
                                  s.Properties.Columns.Add("Branch", Humica.EF.Models.SY.SYSettings.getLabel("Branch"));
                                  s.SelectedIndex = 0;
                              }).BindList(ViewData["BRANCH_SELECT"]).Render();
                          });
        });


        g.Items
.Add(m =>
{
    m.Caption = "";

})
  .SetNestedContent(() =>
  {

      Html.DevExpress().Button(
          s =>
          {
              s.Name = "_btnRunReport";
              s.ToolTip = "Go";
              s.RenderMode = ButtonRenderMode.Button;
              s.Text = "Go";
              s.UseSubmitBehavior = true;
              s.Images.Image.IconID = IconID.ActionsApply16x16;
          }).GetHtml();
  });

    });

}).Bind(Model).GetHtml()