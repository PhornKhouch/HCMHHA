@model Humica.Logic.LM.GenerateLeaveObject
<script type="text/javascript">

    $(document).ready(function () {
        $('#_btnBackAction').click(function () {
            window.location = "@Humica.EF.Models.SY.SYUrl.getBaseUrl()" + "@ViewData[Humica.EF.Models.SY.SYConstant.CURRENT_URL]";
        });
        $('#_btnSaveActionGrid').click(function () {
            $("form").submit();
        });
        $('#_btnReject').click(function () {
            window.location = "@Humica.EF.Models.SY.SYUrl.getBaseUrl()" + "@ViewData[Humica.EF.Models.SY.SYConstant.CURRENT_URL]" + "RequestForCancel?id=@ViewData[Humica.EF.Models.SY.SYConstant.PARAM_ID].ToString()";
        });
        $('#_btRequestAction').click(function () {
            window.location = "@Humica.EF.Models.SY.SYUrl.getBaseUrl()" + "@ViewData[Humica.EF.Models.SY.SYConstant.CURRENT_URL]" + "RequestForApproval?id=@ViewData[Humica.EF.Models.SY.SYConstant.PARAM_ID].ToString()";
        });
         @{

             if (Model.HeaderEmpLeave.Status == Humica.EF.SYDocumentStatus.REJECTED.ToString() || Model.HeaderEmpLeave.Status == Humica.EF.SYDocumentStatus.APPROVED.ToString() || Model.ApprovalWorkFlow == null)
             {
                 ViewContext.Writer.Write("$('#_btnReject').hide();$('#_btRequestAction').hide()");
             }
        }
    });
    function convert(str) {
        var date = new Date(str),
          mnth = ("0" + (date.getMonth() + 1)).slice(-2),
          day = ("0" + date.getDate()).slice(-2),
          Minutes = ("0" + date.getMinutes()).slice(-2);
        return [date.getFullYear(), mnth, day].join("-");
    }
    function ShowData() {
        var total = 0;
        $.ajax({
            type: 'post',
            url: _baseUrl + '/SelfService/LeaveBalance/LeaveRequest/ShowData',
            data: {
                'id': txtLeave.GetValue(), 'FromDate': convert(txtFromDate.GetDate()), 'ToDate': convert(txtToDate.GetDate()),
                'Units': txtUnits.GetValue(), 'Action': 'Details'
            },
            success: function (data) {
                if (data.MS == "OK") {
                    GridItemViewDetails.Refresh();
                }
                else {
                    AlertMessage(data.MS);
                    GridItemViewDetails.Refresh();
                }
            },
            error: function (XMLHttpRequest, textStatus, errorThrown) {
                AlertMessage(XMLHttpRequest.responseText);

            }
        });
    }
    function initData(s, e) {
        $.ajax({
            type: 'post',
            url: _baseUrl + '/SelfService/LeaveBalance/LeaveRequest/ShowUNITS',
            data: { 'id': txtUnits.GetValue(), 'Action': 'Details' },
            success: function (data) {
                if (data.MS == "OK") {
                    GridItemViewDetails.Refresh();
                    if (txtLeave.GetValue() != null) {
                     //   ShowData();
                    }
                }
                else {
                    AlertMessage(data.MS);
                }
            },
            error: function (XMLHttpRequest, textStatus, errorThrown) {
                AlertMessage(XMLHttpRequest.responseText);

            }
        });
    }
</script>
<style>
</style>

@{

    Html.DevExpress().FormLayout(settings =>
    {

        settings.Name = "LeaveRequest";
        settings.AlignItemCaptionsInAllGroups = true;
        settings.Items.AddGroupItem(m => Model.HeaderEmpLeave, g =>
        {
            g.ColCount = 1;
            g.GroupBoxDecoration = GroupBoxDecoration.None;
            g.SettingsItemCaptions.HorizontalAlign = FormLayoutHorizontalAlign.Left;
            Html.DevExpress().CheckBoxFor(i => i.HeaderEmpLeave.Urgent, s =>
            {
                s.Text = "Urgent";
                s.ClientVisible = false;
                s.ControlStyle.ForeColor = System.Drawing.Color.Red;
                s.ControlStyle.Font.Bold = true;
                s.Properties.ValidationSettings.ErrorDisplayMode = ErrorDisplayMode.ImageWithTooltip;
                s.Properties.ValidationSettings.SetFocusOnError = true;
                s.Properties.ValidationSettings.ErrorText = "*";
            }).Render();
        });

        settings.Items.AddGroupItem(m => Model.HeaderEmpLeave, g =>
        {
            g.ColCount = 2;
            g.GroupBoxDecoration = GroupBoxDecoration.None;
            g.SettingsItemCaptions.HorizontalAlign = FormLayoutHorizontalAlign.Left;
            g.Items.Add(m =>
            {
                m.Caption = Humica.EF.Models.SY.SYSettings.getLabel("Units");
            })
            .SetNestedContent(() =>
            {
                Html.DevExpress().ComboBoxFor(i => i.HeaderEmpLeave.Units, s =>
                {
                    s.ReadOnly = true;
                    s.Properties.ClientInstanceName = "txtUnits";
                    s.ShowModelErrors = true;
                    s.Properties.ValidationSettings.ErrorDisplayMode = ErrorDisplayMode.ImageWithTooltip;
                    s.Properties.ValidationSettings.SetFocusOnError = true;
                    s.Properties.ValidationSettings.ErrorText = "*";
                    s.Properties.TextFormatString = "{0}";
                    s.Properties.ValueField = "Description";
                    s.Properties.TextField = "Description";
                    s.Properties.NullText = Humica.EF.Models.SY.SYSettings.getLabel("_SELECT");
                    s.Properties.ClientSideEvents.Init = "initData";
                }).BindList(ViewData["UNITS_SELECT"]).Render();
            });
            g.Items.Add(m =>
            {
                m.Caption = Humica.EF.Models.SY.SYSettings.getLabel("Task Hand Over");
            }).SetNestedContent(() =>
            {
                Html.DevExpress().ComboBoxFor(i => i.HeaderEmpLeave.TaskHand_Over, s =>
                {
                    s.Width = Unit.Percentage(87);
                    s.ReadOnly = true;
                    s.ShowModelErrors = true;
                    s.Properties.AllowNull = true;
                    s.Properties.ValidationSettings.ErrorDisplayMode = ErrorDisplayMode.ImageWithTooltip;
                    s.Properties.ValidationSettings.SetFocusOnError = true;
                    s.Properties.ValidationSettings.ErrorText = "*";
                    s.Properties.TextFormatString = "{0}:{1}";
                    s.Properties.ValueField = "EmpCode";
                    s.Properties.TextField = "AllName";
                    s.Properties.Columns.Add("EmpCode", Humica.EF.Models.SY.SYSettings.getLabel("EmpCode"), 90);
                    s.Properties.Columns.Add("AllName", Humica.EF.Models.SY.SYSettings.getLabel("AllName"), 250);
                    s.Properties.Columns.Add("OthAllName", Humica.EF.Models.SY.SYSettings.getLabel("OthAllName"), 120);
                    s.Properties.NullText = Humica.EF.Models.SY.SYSettings.getLabel("_SELECT");
                }).BindList(ViewData["STAFF_SELECT"]).Render();
            });
            //g.Items.AddEmptyItem();
            g.Items.Add(m =>
            {
                m.Caption = Humica.EF.Models.SY.SYSettings.getLabel("LeaveType")+'*';
                m.CaptionStyle.ForeColor = System.Drawing.Color.Red;
            })
           .SetNestedContent(() =>
           {
               Html.DevExpress().ComboBoxFor(i => i.HeaderEmpLeave.LeaveCode, s =>
               {
                   s.Width = Unit.Percentage(87);
                   s.ReadOnly = true;
                   s.Properties.ClientInstanceName = "txtLeave";
                   s.ShowModelErrors = true;
                   s.Properties.ValidationSettings.ErrorDisplayMode = ErrorDisplayMode.ImageWithTooltip;
                   s.Properties.ValidationSettings.SetFocusOnError = true;
                   s.Properties.ValidationSettings.ErrorText = "*";
                   s.Properties.TextFormatString = "{0}";
                   s.Properties.ValueField = "Code";
                   s.Properties.TextField = "Description";
                   s.Properties.NullText = Humica.EF.Models.SY.SYSettings.getLabel("_SELECT");
               }).BindList(ViewData["LeaveTypes_SELECT"]).Render();
           });
            g.Items.Add(m =>
            {
                m.Caption = Humica.EF.Models.SY.SYSettings.getLabel("Status");
            })
               .SetNestedContent(() =>
               {
                   Html.DevExpress().TextBoxFor(i => i.HeaderEmpLeave.Status, s =>
                   {
                       s.ReadOnly = true;
                       s.ShowModelErrors = true;
                       s.Properties.ValidationSettings.ErrorDisplayMode = ErrorDisplayMode.ImageWithTooltip;
                       s.Properties.ValidationSettings.SetFocusOnError = true;
                       s.Properties.ValidationSettings.ErrorText = "*";
                   }).Render();
               });
            g.Items.Add(m =>
            {
                m.Caption = Humica.EF.Models.SY.SYSettings.getLabel("FromDate")+"*";
                m.CaptionStyle.ForeColor = System.Drawing.Color.Red;
            })
              .SetNestedContent(() =>
              {
                  Html.DevExpress().DateEditFor(i => i.HeaderEmpLeave.FromDate, s =>
                  {
                      s.ReadOnly = true;
                      s.Properties.ClientInstanceName = "txtFromDate";
                      s.ShowModelErrors = true;
                      s.Properties.ValidationSettings.ErrorDisplayMode = ErrorDisplayMode.ImageWithTooltip;
                      s.Properties.ValidationSettings.SetFocusOnError = true;
                      s.Properties.NullText = ViewData[Humica.EF.SYSConstant.DATE_FORMAT].ToString();
                      s.Properties.EditFormatString = ViewData[Humica.EF.SYSConstant.DATE_FORMAT].ToString();
                      s.Properties.DisplayFormatString = ViewData[Humica.EF.SYSConstant.DATE_FORMAT].ToString();
                      s.Properties.ValidationSettings.ErrorText = "*";
                  }).Render();
              });
            g.Items.Add(m =>
            {
                m.Caption = Humica.EF.Models.SY.SYSettings.getLabel("ToDate")+"*";
                m.CaptionStyle.ForeColor = System.Drawing.Color.Red;
            })
             .SetNestedContent(() =>
             {
                 Html.DevExpress().DateEditFor(i => i.HeaderEmpLeave.ToDate, s =>
                 {
                     s.ReadOnly = true;
                     s.Properties.ClientInstanceName = "txtToDate";
                     s.ShowModelErrors = true;
                     s.Properties.ValidationSettings.ErrorDisplayMode = ErrorDisplayMode.ImageWithTooltip;
                     s.Properties.ValidationSettings.SetFocusOnError = true;
                     s.Properties.NullText = ViewData[Humica.EF.SYSConstant.DATE_FORMAT].ToString();
                     s.Properties.EditFormatString = ViewData[Humica.EF.SYSConstant.DATE_FORMAT].ToString();
                     s.Properties.DisplayFormatString = ViewData[Humica.EF.SYSConstant.DATE_FORMAT].ToString();
                     s.Properties.ValidationSettings.ErrorText = "*";
                 }).Render();
             });

            //g.Items.Add(m =>
            //{
            //    m.Caption = Humica.EF.Models.SY.SYSettings.getLabel("NoDay");
            //})
            // .SetNestedContent(() =>
            // {
            //     Html.DevExpress().TextBoxFor(i => i.HeaderEmpLeave.NoDay, s =>
            //     {
            //         s.Properties.ClientInstanceName = "txtNoDay";
            //         s.ReadOnly = true;
            //         s.ShowModelErrors = true;
            //         s.Properties.ValidationSettings.ErrorDisplayMode = ErrorDisplayMode.ImageWithTooltip;
            //         s.Properties.ValidationSettings.SetFocusOnError = true;
            //         s.Properties.ValidationSettings.ErrorText = "*";
            //     }).Render();
            // });
            //g.Items.Add(m =>
            //{
            //    m.Caption = Humica.EF.Models.SY.SYSettings.getLabel("NoPH");
            //})
            // .SetNestedContent(() =>
            // {
            //     Html.DevExpress().TextBoxFor(i => i.HeaderEmpLeave.NoPH, s =>
            //     {

            //         s.Properties.ClientInstanceName = "txtNoPH";
            //         s.ReadOnly = true;
            //         s.ShowModelErrors = true;
            //         s.Properties.ValidationSettings.ErrorDisplayMode = ErrorDisplayMode.ImageWithTooltip;
            //         s.Properties.ValidationSettings.SetFocusOnError = true;
            //         s.Properties.ValidationSettings.ErrorText = "*";
            //     }).Render();
            // });
            //g.Items.Add(m =>
            //{
            //    m.Caption = Humica.EF.Models.SY.SYSettings.getLabel("NoRest");
            //})
            //.SetNestedContent(() =>
            //{
            //    Html.DevExpress().TextBoxFor(i => i.HeaderEmpLeave.NoRest, s =>
            //    {
            //        s.Properties.ClientInstanceName = "txtNoRest";
            //        s.ReadOnly = true;
            //        s.ShowModelErrors = true;
            //        s.Properties.ValidationSettings.ErrorDisplayMode = ErrorDisplayMode.ImageWithTooltip;
            //        s.Properties.ValidationSettings.SetFocusOnError = true;
            //        s.Properties.ValidationSettings.ErrorText = "*";
            //    }).Render();
            //});
            g.Items.Add(m =>
            {
                m.Caption = Humica.EF.Models.SY.SYSettings.getLabel("Reason")+ "*";
                m.CaptionStyle.ForeColor = System.Drawing.Color.Red;
                m.ColSpan = 2;
            })
                      .SetNestedContent(() =>
                      {
                          Html.DevExpress().TextBoxFor(i => i.HeaderEmpLeave.Reason, s =>
                          {
                              s.ReadOnly = true;
                              s.Width = Unit.Percentage(100);
                              s.ShowModelErrors = true;
                              s.Properties.ValidationSettings.ErrorDisplayMode = ErrorDisplayMode.ImageWithTooltip;
                              s.Properties.ValidationSettings.SetFocusOnError = true;
                              s.Properties.ValidationSettings.ErrorText = "*";
                          }).Render();
                      });
            g.Items.Add(m =>
            {
                m.Caption = Humica.EF.Models.SY.SYSettings.getLabel("Attachment");
            })
             .SetNestedContent(() =>
             {
                 Html.DevExpress().HyperLinkFor(
                   s1 => s1.HeaderEmpLeave.Attachment, s =>
                   {
                       s.Name = "file_uploaded";
                       s.ToolTip = "File";
                       s.ClientVisible = true;
                       s.NavigateUrl = Model.HeaderEmpLeave.Attachment;
                       s.Properties.Target = "_BLANK";
                       s.Properties.Text = Humica.EF.Models.SY.SYSettings.getLabel("View");

                   }).GetHtml();
             });
        });
    }).GetHtml();
    @*@Html.Partial("GridItemViewDetails", Model.ListEmpLeaveD)*@
    }

@Html.DevExpress().PageControl(
    settings =>
    {
        settings.Name = "pcScrollingAssetClass";
        settings.Width = Unit.Percentage(100);

        settings.TabPages.Add(Humica.EF.Models.SY.SYSettings.getLabel("GENERAL")).SetContent(() =>
        {
            Html.RenderPartial("GridItemViewDetails", Model);

        });

        settings.TabPages.Add(Humica.EF.Models.SY.SYSettings.getLabel("APPROVER")).SetContent(() =>
        {
            Html.RenderPartial("GridItemApprover", Model.ListApproval);

        });

    }).GetHtml()
