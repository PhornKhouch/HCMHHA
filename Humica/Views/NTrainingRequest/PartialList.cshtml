@{
    var grid = Html.DevExpress().GridView(
    settings =>
    {

        settings.Name = "PartialList";
        settings.KeyFieldName = "TrainNo";
        settings.EnableTheming = true;
        settings.EnableRowsCache = true;
        settings.Width = Unit.Percentage(100);
        settings.SettingsEditing.Mode = GridViewEditingMode.Inline;
        settings.SettingsEditing.NewItemRowPosition = GridViewNewItemRowPosition.Bottom;
        settings.SettingsBehavior.AllowSort = true;
        settings.SettingsSearchPanel.Visible = true;
        settings.CallbackRouteValues = new
        {
            Controller = "NTrainingRequest",
            Action = "PartialList" };


        settings.CommandColumn.Visible = true;
        settings.CommandColumn.ShowDeleteButton = false;

        settings.CommandColumn.ShowNewButtonInHeader = false;
        settings.CommandColumn.ShowCancelButton = false;
        settings.CommandColumn.ShowEditButton = false;
        settings.CommandColumn.ShowUpdateButton = false;
        settings.SettingsBehavior.AllowFocusedRow = true;

        settings.CommandColumn.SelectAllCheckboxMode = GridViewSelectAllCheckBoxMode.AllPages;
        settings.CommandColumn.ShowSelectCheckbox = true;
        settings.CommandColumn.FixedStyle = GridViewColumnFixedStyle.Left;

        //settings.Columns.Add(column =>
        //{
        //    column.Caption = Humica.EF.Models.SY.SYSettings.getLabel("Request Code");
        //    column.Width = 150;
        //    column.FieldName = "RequestCode";
        //    column.ColumnType = MVCxGridViewColumnType.TextBox;
        //    var txtEditProperties = column.PropertiesEdit as TextEditProperties;
        //    //txtEditProperties.ClientInstanceName = "txtStaffName";

        //});

        settings.Columns.Add(column =>
        {
            column.Caption = Humica.EF.Models.SY.SYSettings.getLabel("Course");
            column.Width = 250;
            column.FieldName = "CourseID";
            column.ColumnType = MVCxGridViewColumnType.ComboBox;
            var txtEditProperties = column.PropertiesEdit as ComboBoxProperties;
            txtEditProperties.DataSource = ViewData["Course_SELECT"];
            txtEditProperties.TextFormatString = "{0}:{1}";
            txtEditProperties.ValueField = "Code";
            txtEditProperties.ValueType = typeof(string);
            txtEditProperties.Columns.Add("Code", "Code", 80);
            txtEditProperties.Columns.Add("Description", "Name", 120);
        });
        settings.Columns.Add(column =>
        {
            column.Caption = Humica.EF.Models.SY.SYSettings.getLabel("TrainingType");
            column.Width = 250;
            column.FieldName = "TrainingType";
            column.ColumnType = MVCxGridViewColumnType.ComboBox;
            var txtEditProperties = column.PropertiesEdit as ComboBoxProperties;
            txtEditProperties.DataSource = ViewData["TRAINING_TYPE"];
            txtEditProperties.TextFormatString = "{0}:{1}";
            txtEditProperties.ValueField = "Code";
            txtEditProperties.ValueType = typeof(string);
            txtEditProperties.Columns.Add("Code", "Code", 80);
            txtEditProperties.Columns.Add("Description", "Name", 120);
        });


        settings.Columns.Add(column =>
        {
            column.Width = 150;
            column.FieldName = "RequestDate";
            column.Caption = Humica.EF.Models.SY.SYSettings.getLabel("RequestDate");
            column.ColumnType = MVCxGridViewColumnType.DateEdit;
            column.PropertiesEdit.DisplayFormatString = ViewData[Humica.EF.SYSConstant.DATE_FORMAT].ToString();
            var txtEditProperties = column.PropertiesEdit as DateEditProperties;
        });


        //settings.Columns.Add(column =>
        //{
        //    column.Caption = Humica.EF.Models.SY.SYSettings.getLabel("Description");
        //    column.Width = 250;
        //    //column.PropertiesEdit.ClientInstanceName = "txtPhoneNo";
        //    column.FieldName = "Description";
        //    column.ColumnType = MVCxGridViewColumnType.TextBox;
        //    var txtEditProperties = column.PropertiesEdit as TextEditProperties;
        //    //txtEditProperties.ClientInstanceName = "txtPhoneNo";

        //});

        settings.Columns.Add(column =>
        {
            column.Caption = Humica.EF.Models.SY.SYSettings.getLabel("Status");
            column.Width = 150;
            column.FieldName = "Status";
        });

        //settings.Columns.Add(column =>
        //{
        //    column.Caption = Humica.EF.Models.SY.SYSettings.getLabel("Reason");
        //    column.Width = 100;
        //    //column.PropertiesEdit.ClientInstanceName = "txtPhoneNo";
        //    column.FieldName = "Reason";
        //    column.ColumnType = MVCxGridViewColumnType.TextBox;
        //    var txtEditProperties = column.PropertiesEdit as TextEditProperties;
        //    //txtEditProperties.ClientInstanceName = "txtPhoneNo";

        //});

        //settings.Columns.Add(column =>
        //{
        //    column.Caption = Humica.EF.Models.SY.SYSettings.getLabel("Comment");
        //    column.Width = 250;
        //    //column.PropertiesEdit.ClientInstanceName = "txtPhoneNo";
        //    column.FieldName = "Comment";
        //    column.ColumnType = MVCxGridViewColumnType.TextBox;
        //    var txtEditProperties = column.PropertiesEdit as TextEditProperties;
        //    //txtEditProperties.ClientInstanceName = "txtPhoneNo";

        //});

        settings.SettingsBehavior.EnableCustomizationWindow = true;

        settings.CellEditorInitialize = (s, e) =>
        {
            ASPxEdit editor = (ASPxEdit)e.Editor;
            editor.ValidationSettings.Display = Display.None;
        };

        //settings.ClientSideEvents.BatchEditStartEditing = "gridView_BatchEditStartEditing";
        //settings.ClientSideEvents.BatchEditEndEditing = "gridView_BatchEditEndEditing";
        //settings.ClientSideEvents.BatchEditRowValidating = "gridView_BatchEditRowValidating";

        settings.ClientSideEvents.RowDblClick = "DbRowClick";
        settings.ClientSideEvents.SelectionChanged = "OnSelectionChanged";
        settings.Settings.HorizontalScrollBarMode = ScrollBarMode.Visible;
        settings.Settings.VerticalScrollBarMode = ScrollBarMode.Visible;
        settings.Settings.VerticalScrollableHeight = Humica.EF.MD.SYSession.PageHieigh;
        settings.SettingsPager.PageSize = 250;
        settings.SettingsBehavior.AllowFocusedRow = true;
        settings.SettingsDataSecurity.AllowReadUnlistedFieldsFromClientApi = DefaultBoolean.True;

        settings.FormatConditions.AddHighlight("Status", "[Status] = 'OPEN'", GridConditionHighlightFormat.BoldText);
        settings.FormatConditions.AddHighlight("Status", "[Status] = 'COMPLETED'", GridConditionHighlightFormat.GreenFillWithDarkGreenText);
        settings.FormatConditions.AddHighlight("Status", "[Status] = 'RELEASED'", GridConditionHighlightFormat.Custom);
        settings.FormatConditions.AddHighlight("Status", "[Status] = 'APPROVED'", GridConditionHighlightFormat.GreenFillWithDarkGreenText);
        //column.CellStyle.BackColor = System.Drawing.Color.LightCyan;
        //column.CellStyle.ForeColor = System.Drawing.Color.DarkCyan;
        settings.FormatConditions.AddHighlight("Status", "[Status] = 'PENDING'", GridConditionHighlightFormat.YellowFillWithDarkYellowText);
        settings.FormatConditions.AddHighlight("Status", "[Status] = 'CANCELLED'", GridConditionHighlightFormat.LightRedFillWithDarkRedText);
        settings.FormatConditions.AddHighlight("Status", "[Status] = 'REJECTED'", GridConditionHighlightFormat.LightRedFillWithDarkRedText);

        settings.SettingsBehavior.AllowFocusedRow = true;
        settings.Settings.ShowHeaderFilterButton = true;
        settings.SettingsPopup.HeaderFilter.Height = 200;
        settings.SettingsBehavior.AllowEllipsisInText = true;
        settings.SettingsContextMenu.Enabled = true;


        settings.CellEditorInitialize = (s, e) =>
        {
            ASPxEdit editor = (ASPxEdit)e.Editor;
            editor.ValidationSettings.Display = Display.Dynamic;
            if (e.KeyValue != null)
            {
                if (e.Column.FieldName != "LeadTime")
                {
                    e.Editor.ReadOnly = true;
                }
            }
        };

        settings.CustomJSProperties = (s, e) =>
        {
            ASPxGridView grid1 = (ASPxGridView)s;
            var result = new System.Collections.Hashtable();
            foreach (var col in grid1.AllColumns)
            {
                var dataCol = col as GridViewDataColumn;
                if (dataCol != null)
                {
                    var visible = "T";
                    if (dataCol.Visible == false)
                    {
                        visible = "F";
                    }
                    result[dataCol.FieldName] = new Dictionary<string, object>
    () {
    {"fieldName",dataCol.FieldName},
    {"caption",dataCol.Caption},
    { "sortIndex", dataCol.SortIndex },
    { "sortOrder", dataCol.SortOrder },
    { "groupIndex", dataCol.GroupIndex },
    { "width", dataCol.Width },
    { "visibleIndex", dataCol.VisibleIndex },
    { "visible", visible },
    { "fitler", dataCol.FilterExpression},
    };
                }
            }

            e.Properties["cpColumnsProp"] = result;
        };

        settings.PreRender = (s, e) =>
        {

        };
        settings.SettingsBehavior.ColumnResizeMode = ColumnResizeMode.Control;

    });

    if (ViewData["EditError"] != null)
    {
        grid.SetEditErrorText((string)ViewData["EditError"]);
    }
    }
    @grid.Bind(Model).GetHtml()










