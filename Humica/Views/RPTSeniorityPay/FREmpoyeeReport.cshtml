@model Humica.Core.FT.FTFilterEmployee

@Html.DevExpress().FormLayout(settings =>
{


    settings.Name = "FTGernalAccounting";
    settings.AlignItemCaptionsInAllGroups = true;
    int width = 180;
    settings.Items.AddGroupItem(m => Model, g =>
    {
        g.ColCount = 2;
        g.GroupBoxDecoration = GroupBoxDecoration.None;
        g.SettingsItemCaptions.HorizontalAlign = FormLayoutHorizontalAlign.Left;
        g.Items.AddGroupItem(m => Model, g1 =>
        {
            g1.ColCount = 2;
            g1.GroupBoxDecoration = GroupBoxDecoration.None;
            g1.SettingsItemCaptions.HorizontalAlign = FormLayoutHorizontalAlign.Left;
            g1.Caption = "";
            g1.Items.Add(m =>
            {
                m.Caption = Humica.EF.Models.SY.SYSettings.getLabel("Branch");
            }).SetNestedContent(() =>
            {
                Html.DevExpress().DropDownEditFor(i => Model.Branch, s =>
                {
                    s.Width = width;
                    s.Properties.ClientInstanceName = "checkComboBoxBranch";
                    s.SkinID = "CheckComboBox";
                    s.ReadOnly = true;
                    s.SetDropDownWindowTemplateContent(c =>
                    {
                        Html.RenderPartial(Humica.Models.SY.SYListFilter.ListFilterViewBranch);

                        ViewContext.Writer.Write("<div style=\"padding: 6px; height: 24px;\">");
                        @Html.DevExpress().Button(buttonSettings =>
                        {
                            buttonSettings.Name = "buttonCloseBranch";
                            buttonSettings.Text = Humica.EF.Models.SY.SYSettings.getLabel("Ok");
                            buttonSettings.Style.Add("float", "right");
                            buttonSettings.Style.Add("padding", "0px 2px");
                            buttonSettings.ClientSideEvents.Click = "function(s, e){ checkComboBoxBranch.HideDropDown(); }";
                            buttonSettings.Height = 26;
                        }).Render();

                        @Html.DevExpress().Button(buttonSettings =>
                        {
                            buttonSettings.Name = "buttonClearBranch";
                            buttonSettings.Text = Humica.EF.Models.SY.SYSettings.getLabel("Clear");
                            buttonSettings.Style.Add("float", "right");
                            buttonSettings.Style.Add("margin", "0px 3px");
                            buttonSettings.ClientSideEvents.Click = "clearSelectedBranch";
                            buttonSettings.Height = 26;
                        }).Render();
                        ViewContext.Writer.Write("</div>");

                    });
                    s.Properties.AnimationType = AnimationType.None;
                }).Render();
            });
            g1.Items.AddEmptyItem();
            g1.Items.Add(m =>
            {
                m.Caption = Humica.EF.Models.SY.SYSettings.getLabel("Division");
            }).SetNestedContent(() =>
            {
                Html.DevExpress().ComboBoxFor(i => Model.Division, s =>
                {
                    s.ShowModelErrors = true;
                    s.Properties.ValidationSettings.ErrorDisplayMode = ErrorDisplayMode.ImageWithTooltip;
                    s.Properties.ValidationSettings.SetFocusOnError = true;
                    s.Properties.ValidationSettings.ErrorText = "*";
                    s.Properties.TextFormatString = "{0}";
                    s.Properties.ValueField = "Code";
                    s.Properties.TextField = "Description";
                    s.Properties.NullText = Humica.EF.Models.SY.SYSettings.getLabel("_SELECT");
                }).BindList(ViewData["DIVISION_SELECT"]).Render();
            });
            g1.Items.Add(m =>
            {
                m.Caption = Humica.EF.Models.SY.SYSettings.getLabel("Department");
            }).SetNestedContent(() =>
            {
                Html.DevExpress().ComboBoxFor(i => Model.Department, s =>
                {
                    s.ShowModelErrors = true;
                    s.Properties.ValidationSettings.ErrorDisplayMode = ErrorDisplayMode.ImageWithTooltip;
                    s.Properties.ValidationSettings.SetFocusOnError = true;
                    s.Properties.ValidationSettings.ErrorText = "*";
                    s.Properties.TextFormatString = "{0}";
                    s.Properties.ValueField = "Code";
                    s.Properties.TextField = "Description";
                    s.Properties.NullText = Humica.EF.Models.SY.SYSettings.getLabel("_SELECT");
                }).BindList(ViewData["DEPARTMENT_SELECT"]).Render();
            });
            g1.Items.Add(m =>
            {
                m.Caption = Humica.EF.Models.SY.SYSettings.getLabel("Section");
            }).SetNestedContent(() =>
            {
                Html.DevExpress().ComboBoxFor(i => Model.Section, s =>
                {
                    s.ShowModelErrors = true;
                    s.Properties.ValidationSettings.ErrorDisplayMode = ErrorDisplayMode.ImageWithTooltip;
                    s.Properties.ValidationSettings.SetFocusOnError = true;
                    s.Properties.ValidationSettings.ErrorText = "*";
                    s.Properties.TextFormatString = "{0}";
                    s.Properties.ValueField = "Code";
                    s.Properties.TextField = "Description";
                    s.Properties.NullText = Humica.EF.Models.SY.SYSettings.getLabel("_SELECT");
                }).BindList(ViewData["SECTION_SELECT"]).Render();
            });
            g1.Items.Add(m =>
            {
                m.Caption = Humica.EF.Models.SY.SYSettings.getLabel("Position");
            }).SetNestedContent(() =>
            {
                Html.DevExpress().ComboBoxFor(i => Model.Position, s =>
                {
                    s.ShowModelErrors = true;
                    s.Properties.ValidationSettings.ErrorDisplayMode = ErrorDisplayMode.ImageWithTooltip;
                    s.Properties.ValidationSettings.SetFocusOnError = true;
                    s.Properties.ValidationSettings.ErrorText = "*";
                    s.Properties.TextFormatString = "{0}";
                    s.Properties.ValueField = "Code";
                    s.Properties.TextField = "Description";
                    s.Properties.NullText = Humica.EF.Models.SY.SYSettings.getLabel("_SELECT");
                }).BindList(ViewData["POSITION_SELECT"]).Render();
            });
            g1.Items.Add(m =>
            {
                m.Caption = Humica.EF.Models.SY.SYSettings.getLabel("LevelCode");
            }).SetNestedContent(() =>
            {
                Html.DevExpress().ComboBoxFor(i => Model.Level, s =>
                {
                    s.ShowModelErrors = true;
                    s.Properties.ValidationSettings.ErrorDisplayMode = ErrorDisplayMode.ImageWithTooltip;
                    s.Properties.ValidationSettings.SetFocusOnError = true;
                    s.Properties.ValidationSettings.ErrorText = "*";
                    s.Properties.TextFormatString = "{0}";
                    s.Properties.ValueField = "Code";
                    s.Properties.TextField = "Description";
                    s.Properties.NullText = Humica.EF.Models.SY.SYSettings.getLabel("_SELECT");
                }).BindList(ViewData["LEVEL_SELECT"]).Render();
            });
            g1.Items.Add(m =>
            {
                m.Caption = Humica.EF.Models.SY.SYSettings.getLabel("InMonth");
            }).SetNestedContent(() =>
            {
                Html.DevExpress().DateEditFor(i => Model.InMonth, s =>
                {
                    s.ShowModelErrors = true;
                    s.Properties.ValidationSettings.ErrorDisplayMode = ErrorDisplayMode.ImageWithTooltip;
                    s.Properties.ValidationSettings.SetFocusOnError = true;
                    s.Properties.ValidationSettings.ErrorText = "*";
                    s.Properties.NullText = ViewData[Humica.EF.SYSConstant.DATE_FORMAT_PERIOD].ToString();
                    s.Properties.EditFormatString = ViewData[Humica.EF.SYSConstant.DATE_FORMAT_PERIOD].ToString();
                    s.Properties.DisplayFormatString = ViewData[Humica.EF.SYSConstant.DATE_FORMAT_PERIOD].ToString();
                }).Render();
            });
        });

    });


}).Bind(Model).GetHtml()