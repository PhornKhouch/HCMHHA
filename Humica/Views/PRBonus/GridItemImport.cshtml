@model Humica.Logic.PR.PRBonusObject
@{
    var grid = Html.DevExpress().GridView(
     settings =>
     {
         settings.Name = "gridItemEmpInfor";
         settings.KeyFieldName = "EmpCode";
         settings.EnableTheming = true;
         settings.EnableRowsCache = true;
         settings.Width = Unit.Percentage(100);
         settings.SettingsEditing.Mode = GridViewEditingMode.Inline;
         settings.SettingsEditing.NewItemRowPosition = GridViewNewItemRowPosition.Bottom;
         settings.SettingsBehavior.AllowSort = false;

         settings.CallbackRouteValues = new { Controller = "PRBonus", Action = "GridItemImport" };

         settings.SettingsDataSecurity.AllowReadUnlistedFieldsFromClientApi = DefaultBoolean.True;
         settings.CommandColumn.ShowDeleteButton = true;
         settings.CommandColumn.ShowNewButtonInHeader = true;
         settings.CommandColumn.ShowCancelButton = true;
         settings.CommandColumn.ShowEditButton = true;
         settings.CommandColumn.ShowUpdateButton = true;
         settings.SettingsBehavior.AllowFocusedRow = true;
         settings.CommandColumn.Width = 80;

         settings.Columns.Add(column =>
         {
             column.Width = 100;
             column.Caption = Humica.EF.Models.SY.SYSettings.getLabel("EmpCode");
             column.FieldName = "EmpCode";
         });
         settings.Columns.Add(column =>
         {
             column.Width = 150;
             column.Caption = Humica.EF.Models.SY.SYSettings.getLabel("BonCode");
             column.FieldName = "BonCode";
             column.ReadOnly = true;
             var textProperties = column.PropertiesEdit as TextBoxProperties;
             textProperties.ValidationSettings.Display = Display.None;
         });
         settings.Columns.Add(column =>
         {
             column.Width = 150;
             column.Caption = Humica.EF.Models.SY.SYSettings.getLabel("FromDate");
             column.FieldName = "FromDate";
             column.ReadOnly = true;
             var textProperties = column.PropertiesEdit as TextBoxProperties;
             textProperties.ValidationSettings.Display = Display.None;
         });
         settings.Columns.Add(column =>
         {
             column.Width = 150;
             column.Caption = Humica.EF.Models.SY.SYSettings.getLabel("ToDate");
             column.FieldName = "ToDate";
             column.ReadOnly = true;
             var textProperties = column.PropertiesEdit as TextBoxProperties;
             textProperties.ValidationSettings.Display = Display.None;
         });
         settings.Columns.Add(column =>
         {
             column.Width = 130;
             column.Caption = Humica.EF.Models.SY.SYSettings.getLabel("Amount");
             column.FieldName = "Amount";
             column.ReadOnly = true;
             var textProperties = column.PropertiesEdit as TextBoxProperties;
             textProperties.ValidationSettings.Display = Display.None;
         });
         settings.Columns.Add(column =>
         {
             column.Width = 130;
             column.Caption = Humica.EF.Models.SY.SYSettings.getLabel("Remark");
             column.FieldName = "Remark";
             column.ReadOnly = true;
             var textProperties = column.PropertiesEdit as TextBoxProperties;
             textProperties.ValidationSettings.Display = Display.None;

         });
         settings.SettingsEditing.BatchEditSettings.EditMode = GridViewBatchEditMode.Cell;
         settings.Settings.ShowHeaderFilterButton = true;
         settings.CommandColumn.FixedStyle = GridViewColumnFixedStyle.Left;
         settings.Settings.HorizontalScrollBarMode = ScrollBarMode.Visible;
         settings.Settings.VerticalScrollBarMode = ScrollBarMode.Visible;
         settings.Settings.VerticalScrollableHeight = Humica.EF.MD.SYSession.PageHieigh;
         settings.SettingsPager.PageSize = 200;
         settings.SettingsBehavior.AllowFocusedRow = true;
         settings.SettingsBehavior.ColumnResizeMode = ColumnResizeMode.Control;
         settings.CellEditorInitialize = (s, e) =>
         {
             if (e.Column.FieldName == "EmpCode")
             {
                 ASPxEdit editor = (ASPxEdit)e.Editor;
                 editor.ValidationSettings.Display = Display.None;
                 editor.ReadOnly = false;
             }
         };
     });
    if (ViewData["EditError"] != null)
    {
        grid.SetEditErrorText((string)ViewData["EditError"]);
    }
}
@grid.Bind(Model.ListHeader).GetHtml()



