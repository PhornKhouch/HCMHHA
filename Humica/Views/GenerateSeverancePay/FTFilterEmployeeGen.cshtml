@model Humica.Logic.PR.PRGenerateSeverance

@Html.DevExpress().FormLayout(settings =>
{
    settings.Name = "FTFilterEmployee";
    settings.AlignItemCaptionsInAllGroups = true;

    int width = 150;

    settings.Items.AddGroupItem(m => Model.Filter, g =>
    {
        g.ColCount = 3;
        g.GroupBoxDecoration = GroupBoxDecoration.None;
        g.SettingsItemCaptions.HorizontalAlign = FormLayoutHorizontalAlign.Left;
        g.Items.Add(m =>
        {
            m.Caption = Humica.EF.Models.SY.SYSettings.getLabel("Branch");
        }).SetNestedContent(() =>
        {
            Html.DevExpress().ComboBoxFor(i => Model.Filter.Branch, s =>
            {
                s.ShowModelErrors = true;
                s.Properties.ValidationSettings.ErrorDisplayMode = ErrorDisplayMode.ImageWithTooltip;
                s.Properties.ValidationSettings.SetFocusOnError = true;
                s.Properties.ValidationSettings.ErrorText = "*";
                s.Properties.TextFormatString = "{0}";
                s.Properties.ValueField = "Code";
                s.Properties.TextField = "Description";
                s.Properties.NullText = Humica.EF.Models.SY.SYSettings.getLabel("_SELECT");
            }).BindList(ViewData["BRANCHES_SELECT"]).Render();
        });
        g.Items.Add(m =>
        {
            m.Caption = Humica.EF.Models.SY.SYSettings.getLabel("Division");
        }).SetNestedContent(() =>
        {
            Html.DevExpress().ComboBoxFor(i => Model.Filter.Division, s =>
            {
                s.ShowModelErrors = true;
                s.Properties.ValidationSettings.ErrorDisplayMode = ErrorDisplayMode.ImageWithTooltip;
                s.Properties.ValidationSettings.SetFocusOnError = true;
                s.Properties.ValidationSettings.ErrorText = "*";
                s.Properties.TextFormatString = "{0}";
                s.Properties.ValueField = "Code";
                s.Properties.TextField = "Description";
                s.Properties.NullText = Humica.EF.Models.SY.SYSettings.getLabel("_SELECT");
            }).BindList(ViewData["DIVISION_SELECT"]).Render();
        });
        g.Items.Add(m =>
        {
            m.Caption = Humica.EF.Models.SY.SYSettings.getLabel("Department");
        }).SetNestedContent(() =>
        {
            Html.DevExpress().ComboBoxFor(i => Model.Filter.Department, s =>
            {
                s.ShowModelErrors = true;
                s.Properties.ValidationSettings.ErrorDisplayMode = ErrorDisplayMode.ImageWithTooltip;
                s.Properties.ValidationSettings.SetFocusOnError = true;
                s.Properties.ValidationSettings.ErrorText = "*";
                s.Properties.TextFormatString = "{0}";
                s.Properties.ValueField = "Code";
                s.Properties.TextField = "Description";
                s.Properties.NullText = Humica.EF.Models.SY.SYSettings.getLabel("_SELECT");
            }).BindList(ViewData["DEPARTMENT_SELECT"]).Render();
        });
        g.Items.Add(m =>
        {
            m.Caption = Humica.EF.Models.SY.SYSettings.getLabel("Section");
        }).SetNestedContent(() =>
        {
            Html.DevExpress().ComboBoxFor(i => Model.Filter.Section, s =>
            {
                s.ShowModelErrors = true;
                s.Properties.ValidationSettings.ErrorDisplayMode = ErrorDisplayMode.ImageWithTooltip;
                s.Properties.ValidationSettings.SetFocusOnError = true;
                s.Properties.ValidationSettings.ErrorText = "*";
                s.Properties.TextFormatString = "{0}";
                s.Properties.ValueField = "Code";
                s.Properties.TextField = "Description";
                s.Properties.NullText = Humica.EF.Models.SY.SYSettings.getLabel("_SELECT");
            }).BindList(ViewData["SECTION_SELECT"]).Render();
        });
        g.Items.Add(m =>
        {
            m.Caption = Humica.EF.Models.SY.SYSettings.getLabel("Position");
        }).SetNestedContent(() =>
        {
            Html.DevExpress().ComboBoxFor(i => Model.Filter.Position, s =>
            {
                s.ShowModelErrors = true;
                s.Properties.ValidationSettings.ErrorDisplayMode = ErrorDisplayMode.ImageWithTooltip;
                s.Properties.ValidationSettings.SetFocusOnError = true;
                s.Properties.ValidationSettings.ErrorText = "*";
                s.Properties.TextFormatString = "{0}";
                s.Properties.ValueField = "Code";
                s.Properties.TextField = "Description";
                s.Properties.NullText = Humica.EF.Models.SY.SYSettings.getLabel("_SELECT");
            }).BindList(ViewData["POSITION_SELECT"]).Render();
        });
        g.Items.Add(m =>
        {
            m.Caption = Humica.EF.Models.SY.SYSettings.getLabel("Level");
        }).SetNestedContent(() =>
        {
            Html.DevExpress().ComboBoxFor(i => Model.Filter.Level, s =>
            {
                s.ShowModelErrors = true;
                s.Properties.ValidationSettings.ErrorDisplayMode = ErrorDisplayMode.ImageWithTooltip;
                s.Properties.ValidationSettings.SetFocusOnError = true;
                s.Properties.ValidationSettings.ErrorText = "*";
                s.Properties.TextFormatString = "{0}";
                s.Properties.ValueField = "Code";
                s.Properties.TextField = "Description";
                s.Properties.NullText = Humica.EF.Models.SY.SYSettings.getLabel("_SELECT");
            }).BindList(ViewData["LEVEL_SELECT"]).Render();
        });
        g.Items.Add(m =>
        {
            m.Caption = Humica.EF.Models.SY.SYSettings.getLabel("ContractType");
        }).SetNestedContent(() =>
        {
            Html.DevExpress().ComboBoxFor(i => Model.Filter.ContractType, s =>
            {
                s.ShowModelErrors = true;
                s.Properties.ValidationSettings.ErrorDisplayMode = ErrorDisplayMode.ImageWithTooltip;
                s.Properties.ValidationSettings.SetFocusOnError = true;
                s.Properties.ValidationSettings.ErrorText = "*";
                s.Properties.TextFormatString = "{0}";
                s.Properties.ValueField = "Code";
                s.Properties.TextField = "Description";
                s.Properties.NullText = Humica.EF.Models.SY.SYSettings.getLabel("_SELECT");
            }).BindList(ViewData["CONTRACT_SELECT"]).Render();
        });
        g.Items.Add(m =>
        {
            m.Caption = Humica.EF.Models.SY.SYSettings.getLabel("InMonth");
        }).SetNestedContent(() =>
        {
            Html.DevExpress().DateEditFor(i => Model.Filter.InMonth, s =>
            {
                s.ShowModelErrors = true;
                s.Properties.ValidationSettings.ErrorDisplayMode = ErrorDisplayMode.ImageWithTooltip;
                s.Properties.ValidationSettings.SetFocusOnError = true;
                s.Properties.ValidationSettings.ErrorText = "*";
                s.Properties.PickerType = DatePickerType.Months;
                s.Properties.NullText = ViewData[Humica.EF.SYSConstant.DATE_FORMAT_PERIOD].ToString();
                s.Properties.EditFormatString = ViewData[Humica.EF.SYSConstant.DATE_FORMAT_PERIOD].ToString();
                s.Properties.DisplayFormatString = ViewData[Humica.EF.SYSConstant.DATE_FORMAT_PERIOD].ToString();
            }).Render();
        });
        g.Items.Add(m =>
        {
            m.Caption = Humica.EF.Models.SY.SYSettings.getLabel("Rate");
        })
          .SetNestedContent(() =>
          {
              Html.DevExpress().SpinEditFor(i => Model.Filter.Rate, s =>
              {
                  s.Properties.ClientInstanceName = "txtRate";
                  s.Properties.ValidationSettings.ErrorDisplayMode = ErrorDisplayMode.ImageWithTooltip;
                  s.Properties.ValidationSettings.SetFocusOnError = true;
                  s.Properties.ValidationSettings.ErrorText = "*";
                  s.Properties.DisplayFormatString = "N2";
                  s.ControlStyle.HorizontalAlign = HorizontalAlign.Right;
              }).Render();
          });
        //g.Items.Add(m =>
        //{
        //    m.Caption = Humica.EF.Models.SY.SYSettings.getLabel("SalaryType");
        //})
        //    .SetNestedContent(() =>
        //    {
        //        Html.DevExpress().ComboBoxFor(i => Model.Filter.SalaryType, s =>
        //        {
        //            s.ShowModelErrors = true;
        //            s.Properties.ValidationSettings.ErrorDisplayMode = ErrorDisplayMode.ImageWithTooltip;
        //            s.Properties.ValidationSettings.SetFocusOnError = true;
        //            s.Properties.ValidationSettings.ErrorText = "*";
        //            s.Properties.TextFormatString = "{0}";
        //            s.Properties.ValueField = "Code";
        //            s.Properties.TextField = "Description";
        //        }).BindList(ViewData["SALARTYPE_SELECT"]).Render();
        //    });
        g.Items.Add(m =>
        {
            m.Caption = "";
        }).SetNestedContent(() =>
        {
            Html.DevExpress().Button(s =>
            {
                s.Name = "_btnRunReport";
                s.ToolTip = Humica.EF.Models.SY.SYSettings.getLabel("Go");
                s.RenderMode = ButtonRenderMode.Button;
                s.Text = Humica.EF.Models.SY.SYSettings.getLabel("Go");
                s.UseSubmitBehavior = true;
                s.Images.Image.IconID = IconID.ActionsApply16x16;
            }).GetHtml();
        });
    });
    //settings.Items.AddGroupItem(m => Model.Filter, g =>
    //{
    //    g.ColCount = 2;
    //    g.GroupBoxDecoration = GroupBoxDecoration.HeadingLine;
    //    g.Caption = Humica.EF.Models.SY.SYSettings.getLabel("Transfer");
    //    g.SettingsItemCaptions.HorizontalAlign = FormLayoutHorizontalAlign.Left;
    //    g.Items.Add(m =>
    //    {
    //        m.Caption = Humica.EF.Models.SY.SYSettings.getLabel("Type of Seniority");
    //    })
    //     .SetNestedContent(() =>
    //     {
    //         Html.DevExpress().ComboBoxFor(i => Model.Filter.RewardsType, s =>
    //         {
    //             s.Properties.ClientInstanceName = "txtRewardsType";
    //             s.ShowModelErrors = true;
    //             s.Properties.ValidationSettings.ErrorDisplayMode = ErrorDisplayMode.ImageWithTooltip;
    //             s.Properties.AllowNull = true;
    //             s.Properties.ValidationSettings.SetFocusOnError = true;
    //             s.Properties.ValidationSettings.ErrorText = "*";
    //             s.Properties.TextFormatString = "{0}";
    //             s.Properties.ValueField = "Code";
    //             s.Properties.TextField = "Description";
    //             s.Properties.NullText = Humica.EF.Models.SY.SYSettings.getLabel("_SELECT");
    //         }).BindList(ViewData["ALLW_SELECT"]).Render();
    //     });
    //    g.Items.Add(m =>
    //    {
    //        m.Caption = Humica.EF.Models.SY.SYSettings.getLabel("Transfer Seniority to");
    //    })
    //     .SetNestedContent(() =>
    //     {
    //         Html.DevExpress().DateEditFor(i => Model.Filter.InMonth, s =>
    //         {
    //             s.Properties.ClientInstanceName = "txtInMonth";
    //             s.ShowModelErrors = true;
    //             s.Properties.ValidationSettings.ErrorDisplayMode = ErrorDisplayMode.ImageWithTooltip;
    //             s.Properties.ValidationSettings.SetFocusOnError = true;
    //             s.Properties.ValidationSettings.ErrorText = "*";
    //             s.Properties.NullText = "MMMM-yyyy";
    //             s.Properties.EditFormatString = "MMMM-yyyy";
    //             s.Properties.DisplayFormatString = "MMMM-yyyy";
    //         }).Render();
    //     });
    //});

}).Bind(Model).GetHtml()