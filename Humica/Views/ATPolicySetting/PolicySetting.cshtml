@model Humica.Attendance.IClsATPolicyObject

@Html.DevExpress().FormLayout(settings =>
{
    settings.Name = "Create";
    settings.AlignItemCaptionsInAllGroups = true;

    settings.Items.AddGroupItem(m => Model.Header, g =>
    {
        g.ColCount = 2;
        g.GroupBoxDecoration = GroupBoxDecoration.None;
        g.SettingsItemCaptions.HorizontalAlign = FormLayoutHorizontalAlign.Left;

        g.Items.Add(m =>
        {
            m.Caption = Humica.EF.Models.SY.SYSettings.getLabel("From Hour(Night Bonus)");
        })
        .SetNestedContent(() =>
        {
            Html.DevExpress().DateEditFor(i => i.Header.NWFROM, s =>
            {
                s.Properties.ClientInstanceName = "stNWFROM";
                s.Properties.EditFormat = EditFormat.Time;
                s.Properties.EditFormatString = "hh:mm tt";
                s.Properties.TimeSectionProperties.Visible = true;
                s.Properties.TimeSectionProperties.Adaptive = true;
                s.Properties.TimeSectionProperties.TimeEditProperties.EditFormat = EditFormat.Time;
                s.Properties.TimeSectionProperties.TimeEditProperties.EditFormatString = "hh:mm tt";
                s.Properties.CalendarProperties.FastNavProperties.DisplayMode = FastNavigationDisplayMode.Inline;
            }).Render();
        });
        g.Items.Add(m =>
        {
            m.Caption = Humica.EF.Models.SY.SYSettings.getLabel("To Hour(Night Bonus)");
        })
        .SetNestedContent(() =>
        {
            Html.DevExpress().DateEditFor(i => i.Header.NWTO, s =>
            {
                s.Properties.ClientInstanceName = "spNWFROM";
                //s.ShowModelErrors = true;
                //s.Properties.ValidationSettings.ErrorDisplayMode = ErrorDisplayMode.ImageWithTooltip;
                //s.Properties.ValidationSettings.SetFocusOnError = true;
                //s.Properties.NullText = "h:mm tt";
                //s.Properties.EditFormatString = "h:mm tt";
                //s.Properties.DisplayFormatString = "h:mm tt";
                //s.Properties.ValidationSettings.ErrorText = "*";
                s.Properties.EditFormat = EditFormat.Time;
                s.Properties.EditFormatString = "hh:mm tt";
                s.Properties.TimeSectionProperties.Visible = true;
                s.Properties.TimeSectionProperties.Adaptive = true;
                s.Properties.TimeSectionProperties.TimeEditProperties.EditFormat = EditFormat.Time;
                s.Properties.TimeSectionProperties.TimeEditProperties.EditFormatString = "hh:mm tt";
                s.Properties.CalendarProperties.FastNavProperties.DisplayMode = FastNavigationDisplayMode.Inline;
            }).Render();
        });

        g.Items.Add(m =>
        {
            m.Caption = Humica.EF.Models.SY.SYSettings.getLabel("BaseOnScan");
        })
        .SetNestedContent(() =>
        {
            Html.DevExpress().CheckBoxFor(i => i.Header.BaseOnScan, s =>
            {
                s.Properties.ClientInstanceName = "txtBaseOnScan";
                s.Properties.ValidationSettings.ErrorDisplayMode = ErrorDisplayMode.ImageWithTooltip;
                s.Properties.ValidationSettings.SetFocusOnError = true;
                s.Properties.ValidationSettings.ErrorText = "*";
                s.Properties.ClientSideEvents.CheckedChanged = "OnClientValueChanged";
            }).Render();
        });
        g.Items.Add(m =>
        {
            m.Caption = Humica.EF.Models.SY.SYSettings.getLabel("AfterScan (min)");
        })
        .SetNestedContent(() =>
        {
            Html.DevExpress().SpinEditFor(i => i.Header.AfterScan, s =>
            {
                s.Properties.ClientInstanceName = "txtAfterScan";
                s.Properties.ValidationSettings.ErrorDisplayMode = ErrorDisplayMode.ImageWithTooltip;
                s.Properties.ValidationSettings.SetFocusOnError = true;
                s.Properties.ValidationSettings.ErrorText = "*";
                s.ControlStyle.HorizontalAlign = HorizontalAlign.Right;
            }).Render();
        });
        g.Items.Add(m =>
        {
            m.Caption = Humica.EF.Models.SY.SYSettings.getLabel("Get OT if Check Out");
        })
       .SetNestedContent(() =>
       {
           Html.DevExpress().SpinEditFor(i => i.Header.OTMN, s =>
           {
               s.Properties.ClientInstanceName = "spOTMN";
               s.Properties.ValidationSettings.ErrorDisplayMode = ErrorDisplayMode.ImageWithTooltip;
               s.Properties.ValidationSettings.SetFocusOnError = true;
               s.Properties.ValidationSettings.ErrorText = "*";
               s.ControlStyle.HorizontalAlign = HorizontalAlign.Right;
           }).Render();
       });
        g.Items.Add(m =>
        {
            m.Caption = Humica.EF.Models.SY.SYSettings.getLabel("Req. Late/Early");
        })
        .SetNestedContent(() =>
        {
            Html.DevExpress().SpinEditFor(i => i.Header.IsLate_Early, s =>
            {
                s.Properties.ValidationSettings.ErrorDisplayMode = ErrorDisplayMode.ImageWithTooltip;
                s.Properties.ValidationSettings.SetFocusOnError = true;
                s.Properties.ValidationSettings.ErrorText = "*";
                s.ControlStyle.HorizontalAlign = HorizontalAlign.Right;
            }).Render();
        });
        g.Items.Add(m =>
        {
            m.Caption = Humica.EF.Models.SY.SYSettings.getLabel("Count Miss Scan");
        })
        .SetNestedContent(() =>
        {
            Html.DevExpress().SpinEditFor(i => i.Header.MissScan, s =>
            {
                s.Properties.ClientInstanceName = "spMissScan";
                s.Properties.ValidationSettings.ErrorDisplayMode = ErrorDisplayMode.ImageWithTooltip;
                s.Properties.ValidationSettings.SetFocusOnError = true;
                s.Properties.ValidationSettings.ErrorText = "*";
                s.ControlStyle.HorizontalAlign = HorizontalAlign.Right;
            }).Render();
        });
    });

}).GetHtml()