@model Humica.Employee.IClsEmployee
<script type="text/javascript">
    var _L = "@Model.Header.JobGrade";
    var _d = "@Model.Header.District";
    var _c = "@Model.Header.Commune";
    var _v = "@Model.Header.Village";
    var _Div = "@Model.Header.Division";
    var _GDept = "@Model.Header.GroupDept";
    var _Dept = "@Model.Header.DEPT";
    var _JC = "@Model.Header.JobCode";
    var _SECT = "@Model.Header.SECT";
    var _LC = "@Model.Header.LevelCode";
    var _JG = "@Model.Header.JobGrade";
    $(document).ready(function () {
        $('#_btnBackAction').click(function () {
            window.location = "@Humica.EF.Models.SY.SYUrl.getBaseUrl()" + "@ViewData[Humica.EF.Models.SY.SYConstant.CURRENT_URL]";
        });
        $('#_bthEditAction').click(function () {
            PopTheLoading.Show();
            window.location = "@Humica.EF.Models.SY.SYUrl.getBaseUrl()" + "@ViewData[Humica.EF.Models.SY.SYConstant.CURRENT_URL]" + "Edit?Empcode=@ViewData[Humica.EF.Models.SY.SYConstant.PARAM_ID].ToString()";
        });
        $('#_btnDeleteAction').click(function () {
            ss = 4;
            ConfirmMessage("@Humica.EF.Models.SY.SYMessages.getMessage("DELETE_C", Humica.EF.MD.SYSession.getSessionUser().Lang)");
        });
        txtSalary.SetEnabled(false);
    });
    function _clickConfirm(s, e) {
        if (s.GetText() == "@Humica.EF.Models.SY.SYConstant.OK") {
            if (ss == 4) {
                PopTheLoading.Show();
                window.location = "@Humica.EF.Models.SY.SYUrl.getBaseUrl()" + "@ViewData[Humica.EF.Models.SY.SYConstant.CURRENT_URL]" + "Delete?id=@ViewData[Humica.EF.Models.SY.SYConstant.PARAM_ID].ToString()";
            }
        }
    }
    function OnClientValueChanged(s, e) {
        ShowData();
    }
    function ShowData() {
        $.ajax({
            type: 'post',
            url: _baseUrl + "@ViewData[Humica.EF.Models.SY.SYConstant.CURRENT_URL]" + '/ShowData',
            data: { 'StartDate': convert(txtStartDate.GetDate()), 'ProType': txtProbationType.GetValue() },
            success: function (data) {
                if (data.MS == "@Humica.EF.SYSConstant.OK") {
                    var Probat = data.Probation;
                    ProDate = new Date(parseInt(Probat.substr(6)));
                    var Leave = data.LeaveCof;
                    LeaveDate = new Date(parseInt(Leave.substr(6)));
                    txtProbation.SetValue(ProDate);
                    txtLeaveConf.SetValue(LeaveDate);
                }
                else {
                    AlertMessage(data.MS);
                }
            },
            error: function (XMLHttpRequest, textStatus, errorThrown) {
                AlertMessage(XMLHttpRequest.responseText);

            }
        })
    }
    function select_Level(s, e) {
        $.ajax({
            type: 'post',
            url: _baseUrl + "@ViewData[Humica.EF.Models.SY.SYConstant.CURRENT_URL]" + '/FilterLevel',
            data: { 'Level': s.GetValue() },
            success: function (data) {
                txtSalary.SetEnabled(data.IsSalary);
                if (data.IsSalary == true) {
                    txtSalary.SetValue(0);
                }
                else {
                    txtSalary.SetValue("#####");
                }
            }
        });
    }
</script>

<script type="text/javascript" src="~/Content/Staff3.js"></script>
<link rel="stylesheet" href="~/Content/Staff.css">

@Html.DevExpress().FormLayout(settings =>
{
    settings.Name = "MaterialCreate";
    settings.AlignItemCaptionsInAllGroups = true;

    settings.Items.AddGroupItem(m => Model.Header, g =>
    {
        g.ColCount = 3;
        g.GroupBoxDecoration = GroupBoxDecoration.None;
        g.SettingsItemCaptions.HorizontalAlign = FormLayoutHorizontalAlign.Left;

        g.Items.Add(m =>
        {
            m.Caption = Humica.EF.Models.SY.SYSettings.getLabel("EmpCode");
        })
        .SetNestedContent(() =>
        {
            Html.DevExpress().TextBoxFor(i => i.Header.EmpCode, s =>
            {
                s.ReadOnly = true;
                s.ShowModelErrors = true;
                s.Properties.ValidationSettings.ErrorDisplayMode = ErrorDisplayMode.ImageWithTooltip;
                s.Properties.ValidationSettings.SetFocusOnError = true;
                s.Properties.ValidationSettings.ErrorText = "*";
            }).Render();
        });
        g.Items.Add(m =>
        {
            m.Caption = Humica.EF.Models.SY.SYSettings.getLabel("CareerCode");

        })
            .SetNestedContent(() =>
            {
                Html.DevExpress().ComboBoxFor(i => i.Header.CareerDesc, s =>
                {
                    s.ReadOnly = true;
                    s.ShowModelErrors = true;
                    s.Properties.ValidationSettings.ErrorDisplayMode = ErrorDisplayMode.ImageWithTooltip;
                    s.Properties.ValidationSettings.SetFocusOnError = true;
                    s.Properties.ValidationSettings.ErrorText = "*";
                    s.Properties.TextFormatString = "{0}";
                    s.Properties.ValueField = "Code";
                    s.Properties.TextField = "Description";
                    s.Properties.NullText = Humica.EF.Models.SY.SYSettings.getLabel("_SELECT");
                }).BindList(ViewData["CareerHistories_SELECT"]).Render();
            });
        g.Items.AddEmptyItem();
        g.Items.Add(m =>
        {
            m.Caption = Humica.EF.Models.SY.SYSettings.getLabel("FirstName");
        })
        .SetNestedContent(() =>
        {
            Html.DevExpress().TextBoxFor(i => i.Header.FirstName, s =>
            {
                s.ShowModelErrors = true;
                s.ReadOnly = true;
                s.Properties.ValidationSettings.ErrorDisplayMode = ErrorDisplayMode.ImageWithTooltip;
                s.Properties.ValidationSettings.SetFocusOnError = true;
                s.Properties.ValidationSettings.ErrorText = "*";
            }).Render();
        });
        g.Items.Add(m =>
        {
            m.Caption = Humica.EF.Models.SY.SYSettings.getLabel("LastName");
        })
        .SetNestedContent(() =>
        {
            Html.DevExpress().TextBoxFor(i => i.Header.LastName, s =>
            {
                s.ShowModelErrors = true;
                s.ReadOnly = true;
                s.Properties.ValidationSettings.ErrorDisplayMode = ErrorDisplayMode.ImageWithTooltip;
                s.Properties.ValidationSettings.SetFocusOnError = true;
                s.Properties.ValidationSettings.ErrorText = "*";
            }).Render();
        });
        g.Items.Add(m =>
        {
            m.Caption = Humica.EF.Models.SY.SYSettings.getLabel("FullName");
        })
        .SetNestedContent(() =>
        {
            Html.DevExpress().TextBoxFor(i => i.Header.AllName, s =>
            {
                s.Properties.ClientInstanceName = "txtAllName";
                s.ReadOnly = true;
                s.ShowModelErrors = true;
                s.Properties.ValidationSettings.ErrorDisplayMode = ErrorDisplayMode.ImageWithTooltip;
                s.Properties.ValidationSettings.SetFocusOnError = true;
                s.Properties.ValidationSettings.ErrorText = "*";
            }).Render();
        });
        g.Items.Add(m =>
        {
            m.Caption = Humica.EF.Models.SY.SYSettings.getLabel("OthFirstName");
        })
        .SetNestedContent(() =>
        {
            Html.DevExpress().TextBoxFor(i => i.Header.OthFirstName, s =>
            {
                s.ShowModelErrors = true;
                s.ReadOnly = true;
                s.Properties.ValidationSettings.ErrorDisplayMode = ErrorDisplayMode.ImageWithTooltip;
                s.Properties.ValidationSettings.SetFocusOnError = true;
                s.Properties.ValidationSettings.ErrorText = "*";
            }).Render();
        });
        g.Items.Add(m =>
        {
            m.Caption = Humica.EF.Models.SY.SYSettings.getLabel("OthLastName");
        })
        .SetNestedContent(() =>
        {
            Html.DevExpress().TextBoxFor(i => i.Header.OthLastName, s =>
            {
                s.ShowModelErrors = true;
                s.ReadOnly = true;
                s.Properties.ValidationSettings.ErrorDisplayMode = ErrorDisplayMode.ImageWithTooltip;
                s.Properties.ValidationSettings.SetFocusOnError = true;
                s.Properties.ValidationSettings.ErrorText = "*";
            }).Render();
        });
        g.Items.Add(m =>
        {
            m.Caption = Humica.EF.Models.SY.SYSettings.getLabel("OthFullName");
        })
        .SetNestedContent(() =>
        {
            Html.DevExpress().TextBoxFor(i => i.Header.OthAllName, s =>
            {
                s.Properties.ClientInstanceName = "txtOthAllName";
                s.ReadOnly = true;
                s.ShowModelErrors = true;
                s.Properties.ValidationSettings.ErrorDisplayMode = ErrorDisplayMode.ImageWithTooltip;
                s.Properties.ValidationSettings.SetFocusOnError = true;
                s.Properties.ValidationSettings.ErrorText = "*";
            }).Render();
        });
    });

}).GetHtml()

@Html.DevExpress().PageControl(settings =>
{
    settings.Name = "pcScrollingMaterial1";
    settings.Width = Unit.Percentage(100);

    settings.EnableTabScrolling = true;
    settings.TabAlign = TabAlign.Justify;

    settings.Styles.Tab.CssClass = "scrolling_Tab";

    settings.TabPages.Add(Humica.EF.Models.SY.SYSettings.getLabel("Personal Information")).SetContent(() =>
    {
        Html.RenderPartial("TapPersonalInfor", Model);
    });
    settings.TabPages.Add(Humica.EF.Models.SY.SYSettings.getLabel("Job Information")).SetContent(() =>
    {
        Html.RenderPartial("TapJob", Model);
    });
    settings.TabPages.Add(Humica.EF.Models.SY.SYSettings.getLabel("Manager & Approver")).SetContent(() =>
    {
        Html.RenderPartial("TapManApprover", Model);
    });
    settings.TabPages.Add(Humica.EF.Models.SY.SYSettings.getLabel("Bank Information")).SetContent(() =>
    {
        Html.RenderPartial("TapBankInfo", Model);
    });
    settings.TabPages.Add(Humica.EF.Models.SY.SYSettings.getLabel("Personal Documents")).SetContent(() =>
    {
        Html.RenderPartial("_IdentityDetail", Model.ListEmpIdentity);
    });
    settings.TabPages.Add(Humica.EF.Models.SY.SYSettings.getLabel("Family")).SetContent(() =>
    {
        Html.RenderPartial("GridFamilyDetail", Model.ListEmpFamily);
    });
    settings.TabPages.Add(Humica.EF.Models.SY.SYSettings.getLabel("Education")).SetContent(() =>
    {
        Html.RenderPartial("GridEducationDetail", Model.ListEducation);
    });
    settings.TabPages.Add(Humica.EF.Models.SY.SYSettings.getLabel("Contract")).SetContent(() =>
    {
        Html.RenderPartial("GridContractDetail", Model.ListContract);
    });
    settings.TabPages.Add(Humica.EF.Models.SY.SYSettings.getLabel("Probation Extension")).SetContent(() =>
    {
        Html.RenderPartial("GridProbationDetail", Model.ListDelayProbation);
    });
    settings.TabPages.Add(Humica.EF.Models.SY.SYSettings.getLabel("Disciplinary")).SetContent(() =>
    {
        Html.RenderPartial("GridItemDiscipDetail", Model.ListEmpDisciplinary);
    });
    settings.TabPages.Add(Humica.EF.Models.SY.SYSettings.getLabel("Certified Letter")).SetContent(() =>
    {
        Html.RenderPartial("GridItemCertificateDetail", Model.ListEmpCertificate);
    });
    settings.TabPages.Add(Humica.EF.Models.SY.SYSettings.getLabel("Medical Check")).SetContent(() =>
    {
        Html.RenderPartial("GridItemMedicalDetail", Model.ListEmpMedical);
    });
    settings.TabPages.Add(Humica.EF.Models.SY.SYSettings.getLabel("Job Description")).SetContent(() =>
    {
        Html.RenderPartial("GridJobDescriptionDetail", Model.ListEmpJobDescription);
    });
    settings.TabPages.Add(Humica.EF.Models.SY.SYSettings.getLabel("Employee Address")).SetContent(() =>
    {
        Html.RenderPartial("TapContactAddress", Model);
    });
    settings.TabPages.Add(Humica.EF.Models.SY.SYSettings.getLabel((List<Humica.EF.MD.CFForm>
    )ViewData[Humica.EF.SYSConstant.LIST_CONF_FORM], "Photo & Signature")).SetContent(() =>
    {
        @Html.RenderPartial("TapPicture", Model);
    });
}).GetHtml()