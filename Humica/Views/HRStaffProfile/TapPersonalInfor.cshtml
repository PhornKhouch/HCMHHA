@model Humica.Employee.IClsEmployee

@Html.DevExpress().FormLayout(s1 =>
{
    s1.Name = "CreateStaff";

    s1.Width = Unit.Percentage(100);
    s1.AlignItemCaptionsInAllGroups = true;
    var isReadOnly = false;
    var isReadOnly1 = false;
    if (ViewData[Humica.Models.SY.ClsConstant.IS_READ_ONLY] != null)
    {
        isReadOnly = true;
    }
    if (ViewData[Humica.Models.SY.ClsConstant.IS_READ_ONLY1] != null)
    {
        isReadOnly1 = true;
    }
    s1.Items.AddGroupItem(m => Model.Header, g =>
    {
        g.ColCount = 3;
        g.GroupBoxDecoration = GroupBoxDecoration.Default;
        g.SettingsItemCaptions.HorizontalAlign = FormLayoutHorizontalAlign.Left;
        g.Caption = "";
        g.Items.Add(m =>
        {
            m.Caption = Humica.EF.Models.SY.SYSettings.getLabel("Sex") + "*";
            m.CaptionStyle.ForeColor = System.Drawing.Color.Red;
        }).SetNestedContent(() =>
        {
            Html.DevExpress().ComboBoxFor(i => i.Header.Sex, s =>
            {
                s.ReadOnly = isReadOnly1;
                s.ShowModelErrors = true;
                s.Properties.ValidationSettings.ErrorDisplayMode = ErrorDisplayMode.ImageWithTooltip;
                s.Properties.ValidationSettings.SetFocusOnError = true;
                s.Properties.ValidationSettings.ErrorText = "*";

                s.Properties.TextFormatString = "{0}";
                s.Properties.ValueField = "SelectValue";
                s.Properties.TextField = "SelectText";
                s.Properties.NullText = Humica.EF.Models.SY.SYSettings.getLabel("_SELECT");
            }).BindList(ViewData["GENDER_SELECT"]).Render();
        });
        g.Items.Add(m =>
        {
            m.Caption = Humica.EF.Models.SY.SYSettings.getLabel("Title");
        }).SetNestedContent(() =>
        {
            Html.DevExpress().ComboBoxFor(i => i.Header.Title, s =>
            {
                s.ReadOnly = isReadOnly1;
                s.ShowModelErrors = true;
                s.Properties.ValidationSettings.ErrorDisplayMode = ErrorDisplayMode.ImageWithTooltip;
                s.Properties.ValidationSettings.SetFocusOnError = true;
                s.Properties.ValidationSettings.ErrorText = "*";
                s.Properties.TextFormatString = "{0}";
                s.Properties.ValueField = "SelectValue";
                s.Properties.TextField = "SelectText";
                s.Properties.NullText = Humica.EF.Models.SY.SYSettings.getLabel("_SELECT");
            }).BindList(ViewData["INITIAL_SELECT"]).Render();
        });
        g.Items.Add(m =>
        {
            m.Caption = Humica.EF.Models.SY.SYSettings.getLabel("CardNo");
        }).SetNestedContent(() =>
        {
            Html.DevExpress().TextBoxFor(i => i.Header.CardNo, s =>
            {
                s.Properties.ClientInstanceName = "txtFingerPrint";
                s.ReadOnly = isReadOnly1;
                s.ShowModelErrors = true;
                s.Properties.ValidationSettings.ErrorDisplayMode = ErrorDisplayMode.ImageWithTooltip;
                s.Properties.ValidationSettings.SetFocusOnError = true;
                s.Properties.ValidationSettings.ErrorText = "*";
            }).Render();
        });
        g.Items.Add(m =>
        {
            m.Caption = Humica.EF.Models.SY.SYSettings.getLabel("DOB");
        }).SetNestedContent(() =>
        {
            Html.DevExpress().DateEditFor(i => i.Header.DOB, s =>
            {
                s.ReadOnly = isReadOnly1;
                s.ShowModelErrors = true;
                s.Properties.ValidationSettings.ErrorDisplayMode = ErrorDisplayMode.ImageWithTooltip;
                s.Properties.ValidationSettings.SetFocusOnError = true;
                s.Properties.NullText = ViewData[Humica.EF.SYSConstant.DATE_FORMAT].ToString();
                s.Properties.EditFormatString = ViewData[Humica.EF.SYSConstant.DATE_FORMAT].ToString();
                s.Properties.DisplayFormatString = ViewData[Humica.EF.SYSConstant.DATE_FORMAT].ToString();
                s.Properties.ValidationSettings.ErrorText = "*";
            }).Render();
        });
        g.Items.Add(m =>
        {
            m.Caption = Humica.EF.Models.SY.SYSettings.getLabel("Marital");
        }).SetNestedContent(() =>
        {
            Html.DevExpress().ComboBoxFor(i => i.Header.Marital, s =>
            {
                s.ReadOnly = isReadOnly1;
                s.ShowModelErrors = true;
                s.Properties.ValidationSettings.ErrorDisplayMode = ErrorDisplayMode.ImageWithTooltip;
                s.Properties.ValidationSettings.SetFocusOnError = true;
                s.Properties.ValidationSettings.ErrorText = "*";
                s.Properties.TextFormatString = "{0}";
                s.Properties.ValueField = "SelectValue";
                s.Properties.TextField = "SelectText";
                s.Properties.NullText = Humica.EF.Models.SY.SYSettings.getLabel("_SELECT");
            }).BindList(ViewData["MARITAL_SELECT"]).Render();
        });

        g.Items.Add(m =>
        {
            m.Caption = Humica.EF.Models.SY.SYSettings.getLabel("Country");
        }).SetNestedContent(() =>
        {
            Html.DevExpress().ComboBoxFor(i => i.Header.Country, s =>
            {
                s.ReadOnly = isReadOnly1;
                s.ShowModelErrors = true;
                s.Properties.AllowNull = true;
                s.Properties.ValidationSettings.ErrorDisplayMode = ErrorDisplayMode.ImageWithTooltip;
                s.Properties.ValidationSettings.SetFocusOnError = true;
                s.Properties.ValidationSettings.ErrorText = "*";
                s.Properties.TextFormatString = "{0}";
                s.Properties.ValueField = "Code";
                s.Properties.TextField = "Description";
                s.Properties.NullText = Humica.EF.Models.SY.SYSettings.getLabel("_SELECT");
            }).BindList(ViewData["COUNTRY_SELECT"]).Render();
        });
        g.Items.Add(m =>
        {
            m.Caption = Humica.EF.Models.SY.SYSettings.getLabel("Nation") + "*";
            m.CaptionStyle.ForeColor = System.Drawing.Color.Red;
        }).SetNestedContent(() =>
        {
            Html.DevExpress().ComboBoxFor(i => i.Header.Nation, s =>
            {
                s.ReadOnly = isReadOnly1;
                s.ShowModelErrors = true;
                s.Properties.ValidationSettings.ErrorDisplayMode = ErrorDisplayMode.ImageWithTooltip;
                s.Properties.ValidationSettings.SetFocusOnError = true;
                s.Properties.ValidationSettings.ErrorText = "*";
                s.Properties.TextFormatString = "{0}";
                s.Properties.ValueField = "Code";
                s.Properties.TextField = "Description";
                s.Properties.NullText = Humica.EF.Models.SY.SYSettings.getLabel("_SELECT");
            }).BindList(ViewData["NATION_SELECT"]).Render();
        });

        g.Items.Add(m =>
        {
            m.Caption = Humica.EF.Models.SY.SYSettings.getLabel("State");
        }).SetNestedContent(() =>
        {
            Html.DevExpress().ComboBoxFor(i => i.Header.State, s =>
            {
                s.ReadOnly = isReadOnly1;
                s.ShowModelErrors = true;
                s.Properties.AllowNull = true;
                s.Properties.ValidationSettings.ErrorDisplayMode = ErrorDisplayMode.ImageWithTooltip;
                s.Properties.ValidationSettings.SetFocusOnError = true;
                s.Properties.ValidationSettings.ErrorText = "*";
                s.Properties.TextFormatString = "{0}";
                s.Properties.ValueField = "Code";
                s.Properties.TextField = "Description";
                s.Properties.NullText = Humica.EF.Models.SY.SYSettings.getLabel("_SELECT");
            }).BindList(ViewData["PROVICES_SELECT"]).Render();
        });

        g.Items.Add(m =>
        {
            m.Caption = Humica.EF.Models.SY.SYSettings.getLabel("Mobile Phone");
        }).SetNestedContent(() =>
        {
            Html.DevExpress().TextBoxFor(i => i.Header.Phone1, s =>
            {
                s.ReadOnly = isReadOnly1;
                s.ShowModelErrors = true;
                s.Properties.ValidationSettings.ErrorDisplayMode = ErrorDisplayMode.ImageWithTooltip;
                s.Properties.ValidationSettings.SetFocusOnError = true;
                s.Properties.ValidationSettings.ErrorText = "*";
            }).Render();
        });
        g.Items.Add(m =>
        {
            m.Caption = Humica.EF.Models.SY.SYSettings.getLabel("Cost Center");
        }).SetNestedContent(() =>
        {
            Html.DevExpress().ComboBoxFor(i => i.Header.Costcent, s =>
            {
                s.ReadOnly = isReadOnly1;
                s.ShowModelErrors = true;
                s.Properties.ValidationSettings.ErrorDisplayMode = ErrorDisplayMode.ImageWithTooltip;
                s.Properties.ValidationSettings.SetFocusOnError = true;
                s.Properties.ValidationSettings.ErrorText = "*";
                s.Properties.TextFormatString = "{1}";
                s.Properties.ValueField = "Code";
                s.Properties.TextField = "Description";
                s.Properties.Columns.Add("Code", Humica.EF.Models.SY.SYSettings.getLabel("Code"), 70);
                s.Properties.Columns.Add("Description", Humica.EF.Models.SY.SYSettings.getLabel("Description"), 200);
                s.Properties.NullText = Humica.EF.Models.SY.SYSettings.getLabel("_SELECT");
                s.Properties.AllowNull = true;
            }).BindList(ViewData["COSTCENT_LIST"]).Render();
        });
        g.Items.Add(m =>
        {
            m.Caption = Humica.EF.Models.SY.SYSettings.getLabel("Emergency Contact");
        }).SetNestedContent(() =>
        {
            Html.DevExpress().TextBoxFor(i => i.Header.Phone2, s =>
            {
                s.ReadOnly = isReadOnly1;
                s.ShowModelErrors = true;
                s.Properties.ValidationSettings.ErrorDisplayMode = ErrorDisplayMode.ImageWithTooltip;
                s.Properties.ValidationSettings.SetFocusOnError = true;
                s.Properties.ValidationSettings.ErrorText = "*";
            }).Render();
        });
        g.Items.Add(m =>
        {
            m.Caption = Humica.EF.Models.SY.SYSettings.getLabel("Email");
        }).SetNestedContent(() =>
        {
            Html.DevExpress().TextBoxFor(i => i.Header.Email, s =>
            {
                s.ReadOnly = isReadOnly1;
                s.ShowModelErrors = true;
                s.Properties.ValidationSettings.ErrorDisplayMode = ErrorDisplayMode.ImageWithTooltip;
                s.Properties.ValidationSettings.SetFocusOnError = true;
                s.Properties.ValidationSettings.ErrorText = "*";
            }).Render();
        });
        g.Items.Add(m =>
        {
            m.Caption = Humica.EF.Models.SY.SYSettings.getLabel("Email2");
        }).SetNestedContent(() =>
        {
            Html.DevExpress().TextBoxFor(i => i.Header.Email2, s =>
            {
                s.ReadOnly = isReadOnly1;
                s.ShowModelErrors = true;
                s.Properties.ValidationSettings.ErrorDisplayMode = ErrorDisplayMode.ImageWithTooltip;
                s.Properties.ValidationSettings.SetFocusOnError = true;
                s.Properties.ValidationSettings.ErrorText = "*";
            }).Render();
        });

        //g.Items.Add(m =>
        //{
        //    m.Caption = Humica.EF.Models.SY.SYSettings.getLabel("OT Approval");
        //}).SetNestedContent(() =>
        //{
        //    Html.DevExpress().CheckBoxFor(i => i.Header.IsOTApproval, s =>
        //    {
        //        s.ReadOnly = isReadOnly1;
        //        s.Properties.ValidationSettings.ErrorDisplayMode = ErrorDisplayMode.ImageWithTooltip;
        //        s.Properties.ValidationSettings.SetFocusOnError = true;
        //        s.Properties.ValidationSettings.ErrorText = "*";
        //    }).Render();
        //});
        g.Items.Add(m =>
        {
            m.Caption = Humica.EF.Models.SY.SYSettings.getLabel("TID");
        }).SetNestedContent(() =>
        {
            Html.DevExpress().TextBoxFor(i => i.Header.TID, s =>
            {
                s.ReadOnly = isReadOnly1;
                s.ShowModelErrors = true;
                s.Properties.ValidationSettings.ErrorDisplayMode = ErrorDisplayMode.ImageWithTooltip;
                s.Properties.ValidationSettings.SetFocusOnError = true;
                s.Properties.ValidationSettings.ErrorText = "*";
            }).Render();
        });
        g.Items.Add(m =>
        {
            m.Caption = Humica.EF.Models.SY.SYSettings.getLabel("Is Meal Allowance");
        }).SetNestedContent(() =>
        {
            Html.DevExpress().CheckBoxFor(i => i.Header.IsMealAllowance, s =>
            {
                s.Properties.ValidationSettings.ErrorDisplayMode = ErrorDisplayMode.ImageWithTooltip;
                s.Properties.ValidationSettings.SetFocusOnError = true;
                s.Properties.ValidationSettings.ErrorText = "*";
            }).Render();
        });

        //g.Items.Add(m =>
        //{
        //    m.Caption = Humica.EF.Models.SY.SYSettings.getLabel("POB");
        //    m.ColSpan = 2;
        //})
        // .SetNestedContent(() =>
        // {
        //     Html.DevExpress().TextBoxFor(i => i.Header.POB, s =>
        //     {
        //         s.ShowModelErrors = true;
        //         s.Width = Unit.Percentage(100);
        //         s.Properties.ValidationSettings.ErrorDisplayMode = ErrorDisplayMode.ImageWithTooltip;
        //         s.Properties.ValidationSettings.SetFocusOnError = true;
        //         s.Properties.ValidationSettings.ErrorText = "*";
        //     }).Render();
        // });
    });
    s1.Items.AddGroupItem(m => Model.Header, g =>
    {
        g.ColCount = 3;
        g.GroupBoxDecoration = GroupBoxDecoration.Default;
        g.Caption = Humica.EF.Models.SY.SYSettings.getLabel("NSSF");
        g.SettingsItemCaptions.HorizontalAlign = FormLayoutHorizontalAlign.Left;
        //g.Items.Add(m =>
        //{
        //    m.Caption = Humica.EF.Models.SY.SYSettings.getLabel("NSSFStartDate");
        //})
        //  .SetNestedContent(() =>
        //  {
        //      Html.DevExpress().DateEditFor(i => i.Header.NSSFStartDate, s =>
        //      {
        //          s.ShowModelErrors = true;
        //          s.Properties.ValidationSettings.ErrorDisplayMode = ErrorDisplayMode.ImageWithTooltip;
        //          s.Properties.ValidationSettings.SetFocusOnError = true;
        //          s.Properties.NullText = ViewData[Humica.EF.SYSConstant.DATE_FORMAT].ToString();
        //          s.Properties.EditFormatString = ViewData[Humica.EF.SYSConstant.DATE_FORMAT].ToString();
        //          s.Properties.DisplayFormatString = ViewData[Humica.EF.SYSConstant.DATE_FORMAT].ToString();
        //          s.Properties.ValidationSettings.ErrorText = "*";
        //      }).Render();
        //  });
        g.Items.Add(m =>
        {
            m.Caption = Humica.EF.Models.SY.SYSettings.getLabel("NSSF No");
        })
        .SetNestedContent(() =>
        {
            Html.DevExpress().TextBoxFor(i => i.Header.SOCSO, s =>
            {
                s.ReadOnly = isReadOnly1;
                s.ShowModelErrors = true;
                s.Properties.ValidationSettings.ErrorDisplayMode = ErrorDisplayMode.ImageWithTooltip;
                s.Properties.ValidationSettings.SetFocusOnError = true;
                s.Properties.ValidationSettings.ErrorText = "*";
            }).Render();
        });
        g.Items.Add(m =>
        {
            m.Caption = Humica.EF.Models.SY.SYSettings.getLabel("Declare NSSF");
        })
         .SetNestedContent(() =>
         {
             Html.DevExpress().CheckBoxFor(i => i.Header.ISNSSF, s =>
             {
                 s.ReadOnly = isReadOnly1;
                 s.Properties.ValidationSettings.ErrorDisplayMode = ErrorDisplayMode.ImageWithTooltip;
                 s.Properties.ValidationSettings.SetFocusOnError = true;
                 s.Properties.ValidationSettings.ErrorText = "*";
             }).Render();
         });
        //g.Items.Add(m =>
        //{
        //    m.Caption = Humica.EF.Models.SY.SYSettings.getLabel("Contribution Type");
        //})
        //.SetNestedContent(() =>
        //{
        //    Html.DevExpress().ComboBoxFor(i => i.Header.NSSFContributionType, s =>
        //    {
        //        s.ReadOnly = isReadOnly1;
        //        s.ShowModelErrors = true;
        //        s.Properties.ValidationSettings.ErrorDisplayMode = ErrorDisplayMode.ImageWithTooltip;
        //        s.Properties.ValidationSettings.SetFocusOnError = true;
        //        s.Properties.ValidationSettings.ErrorText = "*";
        //        s.Properties.TextFormatString = "{1}";
        //        s.Properties.ValueField = "SelectValue";
        //        s.Properties.TextField = "SelectText";
        //        s.Properties.NullText = Humica.EF.Models.SY.SYSettings.getLabel("_SELECT");
        //        s.Properties.AllowNull = true;
        //    }).BindList(ViewData["NSSF_CONTRIBUTION"]).Render();
        //});

    });
    s1.Items.AddGroupItem(m => Model.Header, g =>
    {
        g.ColCount = 2;
        g.GroupBoxDecoration = GroupBoxDecoration.Default;
        g.Caption = Humica.EF.Models.SY.SYSettings.getLabel("Telegram");
        g.SettingsItemCaptions.HorizontalAlign = FormLayoutHorizontalAlign.Left;
        g.Items.Add(m =>
        {
            m.Caption = Humica.EF.Models.SY.SYSettings.getLabel("Telegram Group");
        })
       .SetNestedContent(() =>
       {
           Html.DevExpress().ComboBoxFor(i => i.Header.TeleGroup, s =>
           {
               s.ReadOnly = isReadOnly1;
               s.ShowModelErrors = true;
               s.Properties.ValidationSettings.ErrorDisplayMode = ErrorDisplayMode.ImageWithTooltip;
               s.Properties.ValidationSettings.SetFocusOnError = true;
               s.Properties.ValidationSettings.ErrorText = "*";
               s.Properties.TextFormatString = "{0}";
               s.Properties.ValueField = "ChatID";
               s.Properties.TextField = "Description";
               s.Properties.NullText = Humica.EF.Models.SY.SYSettings.getLabel("_SELECT");
               s.Properties.AllowNull = true;
           }).BindList(ViewData["TELEGRAM_SELECT"]).Render();
       });
        g.Items.Add(m =>
        {
            m.Caption = Humica.EF.Models.SY.SYSettings.getLabel("Telegram Group OT");
        })
        .SetNestedContent(() =>
        {
            Html.DevExpress().ComboBoxFor(i => i.Header.TeleGroupOT, s =>
            {
                s.ReadOnly = isReadOnly1;
                s.ShowModelErrors = true;
                s.Properties.ValidationSettings.ErrorDisplayMode = ErrorDisplayMode.ImageWithTooltip;
                s.Properties.ValidationSettings.SetFocusOnError = true;
                s.Properties.ValidationSettings.ErrorText = "*";
                s.Properties.TextFormatString = "{0}";
                s.Properties.ValueField = "ChatID";
                s.Properties.TextField = "Description";
                s.Properties.NullText = Humica.EF.Models.SY.SYSettings.getLabel("_SELECT");
                s.Properties.AllowNull = true;
            }).BindList(ViewData["TELEGRAM_SELECT"]).Render();
        });
                g.Items.Add(m =>
                {
                    m.Caption = Humica.EF.Models.SY.SYSettings.getLabel("Telegram Group Scan");
                })
        .SetNestedContent(() =>
        {
            Html.DevExpress().ComboBoxFor(i => i.Header.TeleGroupScan, s =>
            {
                s.ReadOnly = isReadOnly1;
                s.ShowModelErrors = true;
                s.Properties.ValidationSettings.ErrorDisplayMode = ErrorDisplayMode.ImageWithTooltip;
                s.Properties.ValidationSettings.SetFocusOnError = true;
                s.Properties.ValidationSettings.ErrorText = "*";
                s.Properties.TextFormatString = "{0}";
                s.Properties.ValueField = "ChatID";
                s.Properties.TextField = "Description";
                s.Properties.NullText = Humica.EF.Models.SY.SYSettings.getLabel("_SELECT");
                s.Properties.AllowNull = true;
            }).BindList(ViewData["TELEGRAM_SELECT"]).Render();
        });
        g.Items.Add(m =>
        {
            m.Caption = Humica.EF.Models.SY.SYSettings.getLabel("Chart ID");
        })
         .SetNestedContent(() =>
         {
             Html.DevExpress().TextBoxFor(i => i.Header.TeleChartID, s =>
             {
                 s.ReadOnly = isReadOnly1;
                 s.ShowModelErrors = true;
                 s.Properties.ValidationSettings.ErrorDisplayMode = ErrorDisplayMode.ImageWithTooltip;
                 s.Properties.ValidationSettings.SetFocusOnError = true;
                 s.Properties.ValidationSettings.ErrorText = "*";
             }).Render();
         });
        // g.Items.AddEmptyItem();
    });
    //s1.Items.AddGroupItem(m => Model.Header, g =>
    //{
    //    g.ColCount = 3;
    //    g.GroupBoxDecoration = GroupBoxDecoration.Default;
    //    g.Caption = Humica.EF.Models.SY.SYSettings.getLabel("Regenerate Resign");// Separate Information");
    //    g.SettingsItemCaptions.HorizontalAlign = FormLayoutHorizontalAlign.Left;
    //    // g.Width = 700;
    //    g.Items.Add(m =>
    //    {
    //        //m.Caption = Humica.EF.Models.SY.SYSettings.getLabel("Regenerate salary in month");
    //        m.Caption = Humica.EF.Models.SY.SYSettings.getLabel("salary in month");
    //    })
    //     .SetNestedContent(() =>
    //     {
    //         ViewContext.Writer.Write("<div class='row'>");
    //         ViewContext.Writer.Write("<div class='col-sm-0' style='float:left;margin-left:10px;margin-right:10px;'>");
    //         Html.DevExpress().CheckBoxFor(i => i.Header.SalaryFlag, s =>
    //         {
    //             s.ReadOnly = isReadOnly1;
    //             s.Properties.ClientInstanceName = "txtSalaryFlag";
    //             s.Properties.ValidationSettings.ErrorDisplayMode = ErrorDisplayMode.ImageWithTooltip;
    //             s.Properties.ValidationSettings.SetFocusOnError = true;
    //             s.Properties.ValidationSettings.ErrorText = "*";
    //         }).Render();
    //         ViewContext.Writer.Write("</div>");

    //         ViewContext.Writer.Write("<div class='col-sm-0'>");
    //         Html.DevExpress().DateEditFor(i => i.Header.ReSalary, s =>
    //         {
    //             s.ReadOnly = isReadOnly1;
    //             s.Properties.ClientInstanceName = "txtReSalary";
    //             s.Properties.PickerType = DatePickerType.Months;
    //             s.Properties.EditFormatString = ViewData[Humica.EF.SYSConstant.DATE_FORMAT_PERIOD].ToString();
    //             s.Properties.DisplayFormatString = ViewData[Humica.EF.SYSConstant.DATE_FORMAT_PERIOD].ToString();
    //             s.Properties.ValidationSettings.ErrorDisplayMode = ErrorDisplayMode.ImageWithTooltip;
    //             s.Properties.ValidationSettings.SetFocusOnError = true;
    //             s.Properties.ValidationSettings.ErrorText = "*";
    //         }).Render();

    //         ViewContext.Writer.Write("</div>");
    //     });
    //});
}).GetHtml()