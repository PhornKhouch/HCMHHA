@model Humica.Logic.Att.ATEmpSchObject

@Html.DevExpress().FormLayout(settings =>
{


    settings.Name = "FTFilter";
    settings.AlignItemCaptionsInAllGroups = true;

    int width = 150;

    settings.Items.AddGroupItem(m => Model, g =>
    {
        g.ColCount = 3;
        g.GroupBoxDecoration = GroupBoxDecoration.None;
        g.SettingsItemCaptions.HorizontalAlign = FormLayoutHorizontalAlign.Left;
        g.Items.Add(m =>
        {
            m.Caption = Humica.EF.Models.SY.SYSettings.getLabel("Branch");
        })
            .SetNestedContent(() =>
            {
                Html.DevExpress().ComboBoxFor(i => Model.Filter.Branch, s =>
                {
                    s.ShowModelErrors = true;
                    s.Properties.ValidationSettings.ErrorDisplayMode = ErrorDisplayMode.ImageWithTooltip;
                    s.Properties.ValidationSettings.SetFocusOnError = true;
                    s.Properties.ValidationSettings.ErrorText = "*";
                    s.Properties.TextFormatString = "{0}";
                    s.Properties.ValueField = "Code";
                    s.Properties.TextField = "Description";
                    s.Properties.NullText = Humica.EF.Models.SY.SYSettings.getLabel("_SELECT");
                }).BindList(ViewData["BRANCHES_SELECT"]).Render();
            });

        g.Items.Add(m =>
        {
            m.Caption = Humica.EF.Models.SY.SYSettings.getLabel("Department");
        })
            .SetNestedContent(() =>
            {
                Html.DevExpress().ComboBoxFor(i => Model.Filter.Department, s =>
                {
                    s.ShowModelErrors = true;
                    s.Properties.ValidationSettings.ErrorDisplayMode = ErrorDisplayMode.ImageWithTooltip;
                    s.Properties.ValidationSettings.SetFocusOnError = true;
                    s.Properties.ValidationSettings.ErrorText = "*";
                    s.Properties.TextFormatString = "{0}";
                    s.Properties.ValueField = "Code";
                    s.Properties.TextField = "Description";
                    s.Properties.NullText = Humica.EF.Models.SY.SYSettings.getLabel("_SELECT");
                }).BindList(ViewData["DEPARTMENT_SELECT"]).Render();
            });
        g.Items.Add(m =>
        {
            m.Caption = Humica.EF.Models.SY.SYSettings.getLabel("Division");
        })
    .SetNestedContent(() =>
    {
        Html.DevExpress().ComboBoxFor(i => Model.Filter.Division, s =>
        {
            s.ShowModelErrors = true;
            s.Properties.ValidationSettings.ErrorDisplayMode = ErrorDisplayMode.ImageWithTooltip;
            s.Properties.ValidationSettings.SetFocusOnError = true;
            s.Properties.ValidationSettings.ErrorText = "*";
            s.Properties.TextFormatString = "{0}";
            s.Properties.ValueField = "Code";
            s.Properties.TextField = "Description";
            s.Properties.NullText = Humica.EF.Models.SY.SYSettings.getLabel("_SELECT");
        }).BindList(ViewData["DIVISION_SELECT"]).Render();
    });

        g.Items.Add(m =>
        {
            m.Caption = Humica.EF.Models.SY.SYSettings.getLabel("Shift");
        })
            .SetNestedContent(() =>
            {
                Html.DevExpress().ComboBoxFor(i => Model.Filter.Shift, s =>
                {
                    s.Properties.ClientInstanceName = "txtShiftCode";
                    s.ShowModelErrors = true;
                    s.Properties.ValidationSettings.ErrorDisplayMode = ErrorDisplayMode.ImageWithTooltip;
                    s.Properties.ValidationSettings.SetFocusOnError = true;
                    s.Properties.ValidationSettings.ErrorText = "*";
                    s.Properties.AllowNull = true;
                    s.Properties.TextFormatString = "{0}";
                    s.Properties.ValueField = "Code";
                    s.Properties.TextField = "Description";
                    s.Properties.NullText = Humica.EF.Models.SY.SYSettings.getLabel("_SELECT");
                }).BindList(ViewData["SHIFT_SELECT"]).Render();

            });
        g.Items.Add(m =>
        {
            m.Caption = Humica.EF.Models.SY.SYSettings.getLabel("From Date");
        })
            .SetNestedContent(() =>
            {
                Html.DevExpress().DateEditFor(i => i.Filter.FromDate, s =>
                {
                    s.Properties.ClientInstanceName = "txtFDate";
                    s.ClientVisible = true;
                    s.Properties.ValidationSettings.ErrorDisplayMode = ErrorDisplayMode.ImageWithTooltip;
                    s.Properties.ValidationSettings.SetFocusOnError = true;
                    s.Properties.ValidationSettings.ErrorText = "*";
                }).Render();
            });
        g.Items.Add(m =>
        {
            m.Caption = Humica.EF.Models.SY.SYSettings.getLabel("To Date");
        })
                .SetNestedContent(() =>
                {
                    Html.DevExpress().DateEditFor(i => i.Filter.ToDate, s =>
                    {
                        s.Properties.ClientInstanceName = "txtTDate";
                        s.ClientVisible = true;
                        s.Properties.ValidationSettings.ErrorDisplayMode = ErrorDisplayMode.ImageWithTooltip;
                        s.Properties.ValidationSettings.SetFocusOnError = true;
                        s.Properties.ValidationSettings.ErrorText = "*";
                    }).Render();
                });
        g.Items.Add(m =>
        {
            m.Caption = "";
        })
                  .SetNestedContent(() =>
                  {
                      Html.DevExpress().Button(
                                      s =>
              {
                  s.Name = "_btnRunReport";
                  s.ToolTip = Humica.EF.Models.SY.SYSettings.getLabel("Go");
                  s.RenderMode = ButtonRenderMode.Button;
                  s.Text = Humica.EF.Models.SY.SYSettings.getLabel("Go");
                  s.UseSubmitBehavior = true;
                  s.Images.Image.IconID = IconID.ActionsApply16x16;
              }).GetHtml();
                  });

    });

}).Bind(Model).GetHtml()