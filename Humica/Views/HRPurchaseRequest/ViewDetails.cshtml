@model  Humica.Logic.MD.ClsHRPurchaseRequest

<script type="text/javascript">

    $(document).ready(function () {
        $('#_btnBackAction').click(function () {
            window.location = "@Humica.EF.Models.SY.SYUrl.getBaseUrl()" + "@ViewData[Humica.EF.Models.SY.SYConstant.CURRENT_URL]";
        });
        $('#_btnSaveActionGrid').click(function () {
            $("form").submit();
        });
    });


</script>
@{
    Html.DevExpress().FormLayout(settings =>
    {

        settings.Name = "EditPORequest";
        settings.AlignItemCaptionsInAllGroups = true;
        settings.Width = Unit.Percentage(80);

        settings.Items.AddGroupItem(m => Model.Header, g =>
        {
            g.ColCount = 1;
            g.GroupBoxDecoration = GroupBoxDecoration.None;
            g.SettingsItemCaptions.HorizontalAlign = FormLayoutHorizontalAlign.Center;
            g.VerticalAlign = FormLayoutVerticalAlign.Middle;

            g.Items.AddGroupItem(m => Model, g1 =>
            {
                g1.ColCount = 3;
                g1.GroupBoxDecoration = GroupBoxDecoration.None;
                g1.SettingsItemCaptions.HorizontalAlign = FormLayoutHorizontalAlign.Left;
                g1.Caption = "";
                g1.Items.Add(m =>
                {
                    m.Caption = Humica.EF.Models.SY.SYSettings.getLabel("RequestType") + "*";
                }).SetNestedContent(() =>
                {
                    Html.DevExpress().ComboBoxFor(i => i.Header.DocumentType, s =>
                    {
                        s.ReadOnly = true;
                        s.Width = Unit.Percentage(100);
                        s.Properties.ClientInstanceName = "cboDocType";
                        s.ShowModelErrors = true;
                        s.Properties.ValidationSettings.ErrorDisplayMode = ErrorDisplayMode.ImageWithTooltip;
                        s.Properties.ValidationSettings.SetFocusOnError = true;
                        s.Properties.ValidationSettings.ErrorText = "*";
                        s.Properties.IncrementalFilteringMode = IncrementalFilteringMode.Contains;
                        s.Properties.ValueType = typeof(string);
                        s.Properties.ValueField = "DocType";
                        s.Properties.TextField = "Description";
                        s.Properties.Columns.Add("DocType", Humica.EF.Models.SY.SYSettings.getLabel("RequestType"));
                        s.Properties.Columns.Add("Description", Humica.EF.Models.SY.SYSettings.getLabel("Description"));
                        s.Properties.NullText = Humica.EF.Models.SY.SYSettings.getLabel((List<Humica.EF.MD.CFForm>)
                            ViewData[Humica.EF.SYSConstant.LIST_CONF_FORM], "_SELECT");
                    }).BindList(ViewData["REQUEST_TYPE"]).Render();
                });

                g1.Items.Add(m =>
                {
                    m.Caption = Humica.EF.Models.SY.SYSettings.getLabel((List<Humica.EF.MD.CFForm>)
                        ViewData[Humica.EF.SYSConstant.LIST_CONF_FORM], "RequestNumber") + "*";
                }).SetNestedContent(() =>
                {
                    Html.DevExpress().TextBoxFor(i => i.Header.RequestNumber, s =>
                    {
                        s.Width = Unit.Percentage(100);
                        s.ReadOnly = true;
                        s.ShowModelErrors = true;
                        s.Properties.ValidationSettings.ErrorDisplayMode = ErrorDisplayMode.ImageWithTooltip;
                        s.Properties.ValidationSettings.SetFocusOnError = true;
                        s.Properties.ValidationSettings.ErrorText = "*";
                        s.Properties.NullDisplayText = Humica.EF.Models.SY.SYConstant.NEW_RECORD;
                        s.Properties.NullText = Humica.EF.Models.SY.SYConstant.NEW_RECORD;
                    }).Render();
                });

                g1.Items.Add(m =>
                {
                    m.Caption = Humica.EF.Models.SY.SYSettings.getLabel((List<Humica.EF.MD.CFForm>)
                        ViewData[Humica.EF.SYSConstant.LIST_CONF_FORM], "Status");
                }).SetNestedContent(() =>
                 {
                     Html.DevExpress().TextBoxFor(i => i.Header.Status, s =>
                     {
                         s.Width = Unit.Percentage(100);
                         s.ReadOnly = true;
                         s.ShowModelErrors = true;
                         s.Properties.ValidationSettings.ErrorDisplayMode = ErrorDisplayMode.ImageWithTooltip;
                         s.Properties.ValidationSettings.SetFocusOnError = true;
                         s.Properties.ValidationSettings.ErrorText = "*";
                     }).Render();
                 });

                g1.Items.Add(m =>
                {
                    m.Caption = Humica.EF.Models.SY.SYSettings.getLabel((List<Humica.EF.MD.CFForm>)
                        ViewData[Humica.EF.SYSConstant.LIST_CONF_FORM], "Request Date") + " *";
                }).SetNestedContent(() =>
                    {
                        Html.DevExpress().DateEditFor(i => i.Header.DocumentDate, s =>
                        {
                            s.ReadOnly = true;
                            s.Width = Unit.Percentage(100);
                            s.ShowModelErrors = true;
                            s.Properties.ValidationSettings.ErrorDisplayMode = ErrorDisplayMode.ImageWithTooltip;
                            s.Properties.ValidationSettings.SetFocusOnError = true;
                            s.Properties.NullText = ViewData[Humica.EF.SYSConstant.DATE_FORMAT].ToString();
                            s.Properties.EditFormatString = ViewData[Humica.EF.SYSConstant.DATE_FORMAT].ToString();
                            s.Properties.DisplayFormatString = ViewData[Humica.EF.SYSConstant.DATE_FORMAT].ToString();
                            s.Properties.ValidationSettings.ErrorText = "*";
                        }).Render();
                    });

                g1.Items.Add(m =>
                {
                    m.Caption = Humica.EF.Models.SY.SYSettings.getLabel((List<Humica.EF.MD.CFForm>)
                        ViewData[Humica.EF.SYSConstant.LIST_CONF_FORM], "Require Date") + " *";
                }).SetNestedContent(() =>
                   {
                       Html.DevExpress().DateEditFor(i => i.Header.ExtectedDate, s =>
                       {
                           s.ReadOnly = true;
                           s.Width = Unit.Percentage(100);
                           s.ShowModelErrors = true;
                           s.Properties.ValidationSettings.ErrorDisplayMode = ErrorDisplayMode.ImageWithTooltip;
                           s.Properties.ValidationSettings.SetFocusOnError = true;
                           s.Properties.NullText = ViewData[Humica.EF.SYSConstant.DATE_FORMAT].ToString();
                           s.Properties.EditFormatString = ViewData[Humica.EF.SYSConstant.DATE_FORMAT].ToString();
                           s.Properties.DisplayFormatString = ViewData[Humica.EF.SYSConstant.DATE_FORMAT].ToString();
                           s.Properties.ValidationSettings.ErrorText = "*";
                       }).Render();
                   });

                g1.Items.Add(m =>
                {
                    m.Caption = Humica.EF.Models.SY.SYSettings.getLabel("Total Qty");
                }).SetNestedContent(() =>
                 {
                     Html.DevExpress().TextBoxFor(i => i.Header.TotalQty, s =>
                     {
                         s.Properties.ClientInstanceName = "txtTotalQty";
                         s.ShowModelErrors = true;
                         s.ReadOnly = true;
                         s.Properties.ValidationSettings.ErrorDisplayMode = ErrorDisplayMode.ImageWithTooltip;
                         s.Properties.ValidationSettings.SetFocusOnError = true;
                         s.Properties.ValidationSettings.ErrorText = "*";
                     }).Render();
                 });

                g1.Items.Add(m =>
                {
                    m.Caption = Humica.EF.Models.SY.SYSettings.getLabel("Branch") + "*";
                }).SetNestedContent(() =>
               {
                   Html.DevExpress().ComboBoxFor(i => i.Header.Branch, s =>
                   {
                       s.ReadOnly = true;
                       s.Width = Unit.Percentage(100);
                       s.Properties.ClientInstanceName = "cboLocation";
                       s.ShowModelErrors = true;
                       s.Properties.ValidationSettings.ErrorDisplayMode = ErrorDisplayMode.ImageWithTooltip;
                       s.Properties.ValidationSettings.SetFocusOnError = true;
                       s.Properties.ValidationSettings.ErrorText = "*";
                       s.Properties.IncrementalFilteringMode = IncrementalFilteringMode.Contains;
                       s.Properties.ValueType = typeof(string);
                       s.Properties.ValueField = "Code";
                       s.Properties.TextField = "Description";
                       s.Properties.TextFormatString = "{0}:{1}";
                       s.Properties.Columns.Add("Code", Humica.EF.Models.SY.SYSettings.getLabel("Code"));
                       s.Properties.Columns.Add("Description", Humica.EF.Models.SY.SYSettings.getLabel("Description"));
                       s.Properties.NullText = Humica.EF.Models.SY.SYSettings.getLabel((List<Humica.EF.MD.CFForm>)
                            ViewData[Humica.EF.SYSConstant.LIST_CONF_FORM], "_SELECT");
                   }).BindList(ViewData["STAFF_LOCATION"]).Render();
               });

                g1.Items.Add(m =>
                {
                    m.Caption = Humica.EF.Models.SY.SYSettings.getLabel("Department") + "*";
                }).SetNestedContent(() =>
                {
                    Html.DevExpress().ComboBoxFor(i => i.Header.DEPT, s =>
                    {
                        s.Width = Unit.Percentage(100);
                        s.ReadOnly = true;
                        s.ShowModelErrors = true;
                        s.Properties.ValidationSettings.ErrorDisplayMode = ErrorDisplayMode.ImageWithTooltip;
                        s.Properties.ValidationSettings.SetFocusOnError = true;
                        s.Properties.ValidationSettings.ErrorText = "*";
                        s.Properties.TextFormatString = "{1}";
                        s.Properties.ValueField = "Code";
                        s.Properties.TextField = "Description";
                        s.Properties.Columns.Add("Code", Humica.EF.Models.SY.SYSettings.getLabel("Code"), 70);
                        s.Properties.Columns.Add("Description", Humica.EF.Models.SY.SYSettings.getLabel("Description"), 200);
                        s.Properties.Columns.Add("SecDescription", Humica.EF.Models.SY.SYSettings.getLabel("Second Description"),  200);
                        s.Properties.NullText = Humica.EF.Models.SY.SYSettings.getLabel("_SELECT");
                    }).BindList(ViewData["DEPARTMENT_SELECT"]).Render();
                });

                g1.Items.Add(m =>
                {
                    m.Caption = Humica.EF.Models.SY.SYSettings.getLabel((List<Humica.EF.MD.CFForm>)
                        ViewData[Humica.EF.SYSConstant.LIST_CONF_FORM], "Requestor");
                }).SetNestedContent(() =>
                {
                    Html.DevExpress().ComboBoxFor(i => i.Header.Requestor, s =>
                    {
                        s.Width = Unit.Percentage(100);
                        s.ReadOnly = true;
                        s.ShowModelErrors = true;
                        s.Properties.ValidationSettings.ErrorDisplayMode = ErrorDisplayMode.ImageWithTooltip;
                        s.Properties.ValidationSettings.SetFocusOnError = true;
                        s.Properties.ValidationSettings.ErrorText = "*";
                        s.Properties.TextField = "AllName";
                        s.Properties.TextFormatString = "{1}";
                        s.Properties.ValueField = "EmpCode";
                        s.Properties.Columns.Add("EmpCode", Humica.EF.Models.SY.SYSettings.getLabel("EmpCode"));
                        s.Properties.Columns.Add("AllName", Humica.EF.Models.SY.SYSettings.getLabel("AllName"));
                        s.Properties.Columns.Add("OthAllName", Humica.EF.Models.SY.SYSettings.getLabel("OthAllName"));
                        s.Properties.NullText = Humica.EF.Models.SY.SYSettings.getLabel("_SELECT");
                    }).BindList(ViewData["STAFF_SELECT"]).Render();
                });

                g1.Items.Add(m =>
                {
                    m.Caption = Humica.EF.Models.SY.SYSettings.getLabel("Description");
                    m.ColumnSpan = 3;
                }).SetNestedContent(() =>
                 {
                     Html.DevExpress().TextBoxFor(i => i.Header.Description, s =>
                     {
                         s.ReadOnly = true;
                         s.Width = Unit.Percentage(100);
                         s.ShowModelErrors = true;
                         s.Properties.ValidationSettings.ErrorDisplayMode = ErrorDisplayMode.ImageWithTooltip;
                         s.Properties.ValidationSettings.SetFocusOnError = true;
                         s.Properties.ValidationSettings.ErrorText = "*";
                     }).Render();
                 });

            });
        });
    }).GetHtml();
        }

        @Html.DevExpress().PageControl(
            settings =>
            {
                settings.Name = "pcScrollingWorkCalendar";
                settings.Width = Unit.Percentage(100);

                settings.EnableTabScrolling = true;
                settings.TabAlign = TabAlign.Justify;

                settings.Styles.Tab.CssClass = "scrolling_Tab";
                settings.TabPages.Add(Humica.EF.Models.SY.SYSettings.getLabel((List<Humica.EF.MD.CFForm>
                    )ViewData[Humica.EF.SYSConstant.LIST_CONF_FORM], "Item")).SetContent(() =>
                    {
                        @Html.RenderPartial("GridItemEdit", Model.ListPRItem);
                    });
                settings.TabPages.Add(Humica.EF.Models.SY.SYSettings.getLabel((List<Humica.EF.MD.CFForm>)
               ViewData[Humica.EF.SYSConstant.LIST_CONF_FORM], "ApprovalDetail")).SetContent(() =>
               {
                   Html.RenderPartial("GridApprovalDetail", Model.ListApproval);
               });
            }).GetHtml()
