@model Humica.Logic.Mission.HRMissPlanObject

<script type="text/javascript">
    var status = "@Model.Header.Status";
    var _P = "@Model.Header.Province";
    $(document).ready(function () {
        $('#_btnBackAction').click(function () {
            window.location = "@Humica.EF.Models.SY.SYUrl.getBaseUrl()" + "@ViewData[Humica.EF.Models.SY.SYConstant.CURRENT_URL]";
        });
        $('#_bthEditAction').click(function () {
            if ("@Model.Header.Status" == "@Humica.EF.SYDocumentStatus.OPEN.ToString()") {
                window.location = "@Humica.EF.Models.SY.SYUrl.getBaseUrl()" + "@ViewData[Humica.EF.Models.SY.SYConstant.CURRENT_URL]" + "Edit?id=@ViewData[Humica.EF.Models.SY.SYConstant.PARAM_ID].ToString()";
            }
            else {
                AlertMessage("@Humica.EF.Models.SY.SYMessages.getMessage("DOC_INV", Humica.EF.MD.SYSession.getSessionUser().Lang)");
            }
        });
        $('#_btnDeleteAction').click(function () {
            ss = 41;
            if ("@Model.Header.Status" == "@Humica.EF.SYDocumentStatus.OPEN.ToString()") {
                ConfirmMessage("@Humica.EF.Models.SY.SYMessages.getMessage("DELETE_C", Humica.EF.MD.SYSession.getSessionUser().Lang)");
            }
            else {
                AlertMessage("@Humica.EF.Models.SY.SYMessages.getMessage("DOC_INV", Humica.EF.MD.SYSession.getSessionUser().Lang)");
            }
        });

    });
    function _clickMenuAction(s, e) {
        if (e.item.name == "_mnApprove") {
            ss = 6;
            if (status == "@Humica.EF.SYDocumentStatus.PENDING.ToString()") {
                ConfirmMessage("@Humica.EF.Models.SY.SYMessages.getMessage("APPROVE_C", Humica.EF.MD.SYSession.getSessionUser().Lang)");
            }
            else {
                AlertMessage("@Humica.EF.Models.SY.SYMessages.getMessage("DOC_INV", Humica.EF.MD.SYSession.getSessionUser().Lang)");
            }
        }
        if (e.item.name == "_mnRequest") {
            ss = 7;
            if (status == "@Humica.EF.SYDocumentStatus.OPEN.ToString()") {
                ConfirmMessage("@Humica.EF.Models.SY.SYMessages.getMessage("REQUEST_C", Humica.EF.MD.SYSession.getSessionUser().Lang)");
            }
            else {
                AlertMessage("@Humica.EF.Models.SY.SYMessages.getMessage("DOC_INV", Humica.EF.MD.SYSession.getSessionUser().Lang)");
            }
        }
        if (e.item.name == "_mnCancel") {
            ss = 8;
            if (!(status == "@Humica.EF.SYDocumentStatus.CANCELLED.ToString()" || status == "@Humica.EF.SYDocumentStatus.APPROVED.ToString()")) {
                ConfirmMessage("@Humica.EF.Models.SY.SYMessages.getMessage("CANCEL_A", Humica.EF.MD.SYSession.getSessionUser().Lang)");
            }
            else {
                AlertMessage("@Humica.EF.Models.SY.SYMessages.getMessage("DOC_INV", Humica.EF.MD.SYSession.getSessionUser().Lang)");
            }
        }
    }
     function _clickConfirm(s, e) {
        if (s.GetText() == "@Humica.EF.Models.SY.SYConstant.OK") {
           if (ss == 41) {
                window.location = "@Humica.EF.Models.SY.SYUrl.getBaseUrl()" + "@ViewData[Humica.EF.Models.SY.SYConstant.CURRENT_URL]" + "Delete?id=@ViewData[Humica.EF.Models.SY.SYConstant.PARAM_ID].ToString()";
            }
            //Request
             if (ss == 7) {
                 window.location = "@Humica.EF.Models.SY.SYUrl.getBaseUrl()" + "@ViewData[Humica.EF.Models.SY.SYConstant.CURRENT_URL]" + "RequestForApproval?id=@ViewData[Humica.EF.Models.SY.SYConstant.PARAM_ID].ToString()";
            }
            //Approve
            if (ss == 6) {
                window.location = "@Humica.EF.Models.SY.SYUrl.getBaseUrl()" + "@ViewData[Humica.EF.Models.SY.SYConstant.CURRENT_URL]" + "Approve?id=@ViewData[Humica.EF.Models.SY.SYConstant.PARAM_ID].ToString()";
            }
            //Cancel
             if (ss == 8) {
                window.location = "@Humica.EF.Models.SY.SYUrl.getBaseUrl()" + "@ViewData[Humica.EF.Models.SY.SYConstant.CURRENT_URL]" + "Cancel?id=" + "@ViewData[Humica.EF.Models.SY.SYConstant.PARAM_ID].ToString()";
            }
        }
    }
    function initDataEdit(s, e) {
        $.ajax({
            type: 'post',
            url: "@Humica.EF.Models.SY.SYUrl.getBaseUrl()" + "@ViewData[Humica.EF.Models.SY.SYConstant.CURRENT_URL]" + '/SelectMissType',
            data: { 'txtType': txtMissionType.GetValue() },
            success: function (data) {
                if (data.MS == "OK") {
                    txtProvince.ClearItems();
                    for (var key in data.DATA) {
                        if (data.DATA.hasOwnProperty(key)) {
                            txtProvince.AddItem([data.DATA[key].Code, data.DATA[key].Description]);
                        }
                    }
                    txtProvince.SetValue(_P);
                }
            }

        });
    }
</script>

@Html.DevExpress().FormLayout(settings =>
{
    settings.Name = "Details";
    settings.AlignItemCaptionsInAllGroups = true;

    settings.Items.AddGroupItem(m => Model.Header, g =>
    {
        g.ColCount = 3;
        g.GroupBoxDecoration = GroupBoxDecoration.None;
        g.SettingsItemCaptions.HorizontalAlign = FormLayoutHorizontalAlign.Left;
        g.Items.Add(m =>
        {
            m.Caption = Humica.EF.Models.SY.SYSettings.getLabel("MissionCode") + "*";
        })
        .SetNestedContent(() =>
        {
            Html.DevExpress().TextBoxFor(i => i.Header.MissionCode, s =>
            {
                s.ShowModelErrors = true;
                s.Properties.ValidationSettings.ErrorDisplayMode = ErrorDisplayMode.ImageWithTooltip;
                s.Properties.ValidationSettings.SetFocusOnError = true;
                s.Properties.ValidationSettings.ErrorText = "*";
                s.ReadOnly = true;
                s.Properties.NullDisplayText = Humica.EF.Models.SY.SYConstant.NEW_RECORD;
                s.Properties.NullText = Humica.EF.Models.SY.SYConstant.NEW_RECORD;
            }).Render();
        });
        g.Items.Add(m =>
        {
            m.Caption = Humica.EF.Models.SY.SYSettings.getLabel("PlanDate");
        })
        .SetNestedContent(() =>
        {
            Html.DevExpress().DateEditFor(i => i.Header.PlanDate, s =>
            {
                s.ReadOnly = true;
                s.ShowModelErrors = true;
                s.Properties.ValidationSettings.ErrorDisplayMode = ErrorDisplayMode.ImageWithTooltip;
                s.Properties.ValidationSettings.SetFocusOnError = true;
                s.Properties.NullText = ViewData[Humica.EF.SYSConstant.DATE_FORMAT].ToString();
                s.Properties.EditFormatString = ViewData[Humica.EF.SYSConstant.DATE_FORMAT].ToString();
                s.Properties.DisplayFormatString = ViewData[Humica.EF.SYSConstant.DATE_FORMAT].ToString();
                s.Properties.ValidationSettings.ErrorText = "*";
            }).Render();
        });
        g.Items.Add(m =>
        {
            m.Caption = Humica.EF.Models.SY.SYSettings.getLabel("Status");
        })
        .SetNestedContent(() =>
        {
            Html.DevExpress().TextBoxFor(i => i.Header.Status, s =>
            {
                s.ShowModelErrors = true;
                s.Properties.ValidationSettings.ErrorDisplayMode = ErrorDisplayMode.ImageWithTooltip;
                s.Properties.ValidationSettings.SetFocusOnError = true;
                s.Properties.ValidationSettings.ErrorText = "*";
                s.ReadOnly = true;
            }).Render();
        });
        g.Items.Add(m =>
        {
            m.Caption = Humica.EF.Models.SY.SYSettings.getLabel("Planner Name") + "*";
        })
        .SetNestedContent(() =>
        {
            Html.DevExpress().ComboBoxFor(i => i.Header.EmpCode, s =>
            {
                s.ReadOnly = true;
                s.Width = Unit.Percentage(100);
                s.ShowModelErrors = true;
                s.Properties.ValidationSettings.ErrorDisplayMode = ErrorDisplayMode.ImageWithTooltip;
                s.Properties.ValidationSettings.SetFocusOnError = true;
                s.Properties.ValidationSettings.ErrorText = "*";
                s.Properties.TextField = "AllName";
                s.Properties.TextFormatString = "{1}";
                s.Properties.ValueField = "EmpCode";
                s.Properties.Columns.Add("EmpCode", Humica.EF.Models.SY.SYSettings.getLabel("EmpCode"));
                s.Properties.Columns.Add("AllName", Humica.EF.Models.SY.SYSettings.getLabel("AllName"));
                s.Properties.Columns.Add("Position", Humica.EF.Models.SY.SYSettings.getLabel("Position"));
                s.Properties.NullText = Humica.EF.Models.SY.SYSettings.getLabel("_SELECT");
            }).BindList(ViewData["STAFF_SELECT"]).Render();
        });
        g.Items.Add(m =>
        {
            m.Caption = Humica.EF.Models.SY.SYSettings.getLabel("Branch");
        })
       .SetNestedContent(() =>
       {
           Html.DevExpress().ComboBoxFor(i => i.Header.Branch, s =>
           {
               s.ReadOnly = true;
               s.Properties.ClientInstanceName = "cboLocation";
               s.ShowModelErrors = true;
               s.Properties.ValidationSettings.ErrorDisplayMode = ErrorDisplayMode.ImageWithTooltip;
               s.Properties.ValidationSettings.SetFocusOnError = true;
               s.Properties.ValidationSettings.ErrorText = "*";
               s.Properties.IncrementalFilteringMode = IncrementalFilteringMode.Contains;
               s.Properties.ValueType = typeof(string);
               s.Properties.ValueField = "Code";
               s.Properties.TextField = "Description";
               s.Properties.TextFormatString = "{0}:{1}";
               s.Properties.Columns.Add("Code", Humica.EF.Models.SY.SYSettings.getLabel("Code"), 60);
               s.Properties.Columns.Add("Description", Humica.EF.Models.SY.SYSettings.getLabel("Description"), 200);
               s.Properties.NullText = Humica.EF.Models.SY.SYSettings.getLabel((List<Humica.EF.MD.CFForm>)
                    ViewData[Humica.EF.SYSConstant.LIST_CONF_FORM], "_SELECT");
           }).BindList(ViewData["BRANCHES_SELECT"]).Render();

       });
        g.Items.Add(m =>
        {
            m.Caption = Humica.EF.Models.SY.SYSettings.getLabel("Province/Country");
        })
        .SetNestedContent(() =>
        {
            Html.DevExpress().TextBoxFor(i => i.Header.Position, s =>
            {
                s.Width = Unit.Percentage(100);
                s.ReadOnly = true;
                s.Properties.ClientInstanceName = "txtPosition";
                s.Properties.ValidationSettings.ErrorDisplayMode = ErrorDisplayMode.ImageWithTooltip;
                s.Properties.ValidationSettings.SetFocusOnError = true;
                s.Properties.ValidationSettings.ErrorText = "*";
            }).Render();
        });

        g.Items.Add(m =>
        {
            m.Caption = Humica.EF.Models.SY.SYSettings.getLabel("FromDate");
        })
       .SetNestedContent(() =>
       {
           Html.DevExpress().DateEditFor(i => i.Header.FromDate, s =>
           {
               s.ReadOnly = true;
               s.ShowModelErrors = true;
               s.Properties.ValidationSettings.ErrorDisplayMode = ErrorDisplayMode.ImageWithTooltip;
               s.Properties.ValidationSettings.SetFocusOnError = true;
               s.Properties.NullText = ViewData[Humica.EF.SYSConstant.DATE_FORMAT].ToString();
               s.Properties.EditFormatString = ViewData[Humica.EF.SYSConstant.DATE_FORMAT].ToString();
               s.Properties.DisplayFormatString = ViewData[Humica.EF.SYSConstant.DATE_FORMAT].ToString();
               s.Properties.ValidationSettings.ErrorText = "*";
           }).Render();
       });
        g.Items.Add(m =>
        {
            m.Caption = Humica.EF.Models.SY.SYSettings.getLabel("ToDate");
        })
       .SetNestedContent(() =>
       {
           Html.DevExpress().DateEditFor(i => i.Header.ToDate, s =>
           {
               s.ReadOnly = true;
               s.ShowModelErrors = true;
               s.Properties.ValidationSettings.ErrorDisplayMode = ErrorDisplayMode.ImageWithTooltip;
               s.Properties.ValidationSettings.SetFocusOnError = true;
               s.Properties.NullText = ViewData[Humica.EF.SYSConstant.DATE_FORMAT].ToString();
               s.Properties.EditFormatString = ViewData[Humica.EF.SYSConstant.DATE_FORMAT].ToString();
               s.Properties.DisplayFormatString = ViewData[Humica.EF.SYSConstant.DATE_FORMAT].ToString();
               s.Properties.ValidationSettings.ErrorText = "*";
           }).Render();
       });
        g.Items.Add(m =>
        {
            m.Caption = Humica.EF.Models.SY.SYSettings.getLabel("Total Member");
        })
        .SetNestedContent(() =>
        {
            Html.DevExpress().SpinEditFor(i => i.Header.Member, s =>
            {
                s.ReadOnly = true;
                s.Properties.ClientInstanceName = "txtMember";
                s.Properties.ValidationSettings.ErrorDisplayMode = ErrorDisplayMode.ImageWithTooltip;
                s.Properties.ValidationSettings.SetFocusOnError = true;
                s.Properties.ValidationSettings.ErrorText = "*";
                s.Properties.DisplayFormatString = "N0";
                s.ControlStyle.HorizontalAlign = HorizontalAlign.Right;
            }).Render();
        });
        g.Items.Add(m =>
        {
            m.Caption = Humica.EF.Models.SY.SYSettings.getLabel("MissionType") + "*";
        })
       .SetNestedContent(() =>
       {
           Html.DevExpress().ComboBoxFor(i => i.Header.MissionType, s =>
           {
               s.ReadOnly = true;
               s.Properties.ClientInstanceName = "txtMissionType";
               s.ShowModelErrors = true;
               s.Properties.ValidationSettings.ErrorDisplayMode = ErrorDisplayMode.ImageWithTooltip;
               s.Properties.ValidationSettings.SetFocusOnError = true;
               s.Properties.ValidationSettings.ErrorText = "*";
               s.Properties.TextFormatString = "{0}";
               s.Properties.ValueField = "DocType";
               s.Properties.TextField = "Description";
               s.Properties.NullText = Humica.EF.Models.SY.SYSettings.getLabel("_SELECT");
               s.Properties.ClientSideEvents.Init = "initDataEdit";
           }).BindList(ViewData["MISSION_TYPE_SELECT"]).Render();
       });
        g.Items.Add(m =>
        {
            m.Caption = Humica.EF.Models.SY.SYSettings.getLabel("Province/Country");
        })
        .SetNestedContent(() =>
        {
            Html.DevExpress().ComboBoxFor(i => i.Header.Province, s =>
            {
                s.ReadOnly = true;
                s.ShowModelErrors = true;
                s.Properties.ValidationSettings.ErrorDisplayMode = ErrorDisplayMode.ImageWithTooltip;
                s.Properties.ValidationSettings.SetFocusOnError = true;
                s.Properties.ValidationSettings.ErrorText = "*";
                s.Properties.DataSource = ViewData["PROVICES_SELECT"];
                s.Properties.ValueField = "Code";
                s.Properties.TextField = "Description";
                s.Properties.TextFormatString = "{1}";
                s.Properties.Columns.Add("Code", Humica.EF.Models.SY.SYSettings.getLabel("Code"));
                s.Properties.Columns.Add("Description", Humica.EF.Models.SY.SYSettings.getLabel("Description"), 150);
                s.Properties.ClientInstanceName = "txtProvince";
            }).Render();
        });
        g.Items.Add(m =>
        {
            m.Caption = Humica.EF.Models.SY.SYSettings.getLabel("Total Amount");
        })
        .SetNestedContent(() =>
        {
            Html.DevExpress().TextBoxFor(i => i.Header.TotalAmount, s =>
            {
                s.Width = Unit.Percentage(100);
                s.Properties.ClientInstanceName = "txtTOTAL";
                s.ShowModelErrors = true;
                s.ReadOnly = true;
                s.Properties.ValidationSettings.ErrorDisplayMode = ErrorDisplayMode.ImageWithTooltip;
                s.Properties.ValidationSettings.SetFocusOnError = true;
                s.Properties.ValidationSettings.ErrorText = "*";
                s.Properties.Style.HorizontalAlign = System.Web.UI.WebControls.HorizontalAlign.Right;
                s.Properties.DisplayFormatString = "N2";
            }).Render();
        });
        g.Items.Add(m =>
        {
            m.Caption = Humica.EF.Models.SY.SYSettings.getLabel("TravelBy") + "*";
        })
        .SetNestedContent(() =>
        {
            Html.DevExpress().ComboBoxFor(i => i.Header.TravelBy, s =>
            {
                s.ReadOnly = true;
                s.ShowModelErrors = true;
                s.Properties.ValidationSettings.ErrorDisplayMode = ErrorDisplayMode.ImageWithTooltip;
                s.Properties.ValidationSettings.SetFocusOnError = true;
                s.Properties.ValidationSettings.ErrorText = "*";
                s.Properties.ValueField = "SelectValue";
                s.Properties.TextField = "SelectText";
                s.Properties.NullText = Humica.EF.Models.SY.SYSettings.getLabel("_SELECT");
            }).BindList(ViewData["TRAVEL_BY_SELECT"]).Render();
        });

        //settings.Items.AddGroupItem(m => Model.Header, g1 =>
        //{
        //    g1.Caption = Humica.EF.Models.SY.SYSettings.getLabel("Mission Company Car");
        //    g1.ColCount = 2;
        //    g1.GroupBoxDecoration = GroupBoxDecoration.HeadingLine;
        //    g1.SettingsItemCaptions.HorizontalAlign = FormLayoutHorizontalAlign.Left;
        g.Items.Add(m =>
        {
            m.Caption = Humica.EF.Models.SY.SYSettings.getLabel("IsDriver");
        })
         .SetNestedContent(() =>
         {
             Html.DevExpress().CheckBoxFor(i => i.Header.IsDriver, s =>
             {
                 s.ReadOnly = true;
                 s.Properties.ClientInstanceName = "txtIsDriver";
                 s.Properties.ValidationSettings.ErrorDisplayMode = ErrorDisplayMode.ImageWithTooltip;
                 s.Properties.ValidationSettings.SetFocusOnError = true;
                 s.Properties.ValidationSettings.ErrorText = "*";
             }).Render();
         });
        g.Items.Add(m =>
        {
            m.Caption = Humica.EF.Models.SY.SYSettings.getLabel("DriverName");
        })
        .SetNestedContent(() =>
        {
            Html.DevExpress().TextBoxFor(i => i.Header.DriverName, s =>
            {
                s.ReadOnly = true;
                s.Properties.ClientInstanceName = "txtDriverName";
                s.Properties.ValidationSettings.ErrorDisplayMode = ErrorDisplayMode.ImageWithTooltip;
                s.Properties.ValidationSettings.SetFocusOnError = true;
                s.Properties.ValidationSettings.ErrorText = "*";
            }).Render();
        });
        g.Items.Add(m =>
        {
            m.Caption = Humica.EF.Models.SY.SYSettings.getLabel("Description");
            m.ColumnSpan = 2;
        })
        .SetNestedContent(() =>
        {
            Html.DevExpress().TextBoxFor(i => i.Header.Description, s =>
            {
                s.ReadOnly = true;
                s.Width = Unit.Percentage(100);
                s.Properties.ValidationSettings.ErrorDisplayMode = ErrorDisplayMode.ImageWithTooltip;
                s.Properties.ValidationSettings.SetFocusOnError = true;
                s.Properties.ValidationSettings.ErrorText = "*";
            }).Render();
        });
        g.Items.Add(m =>
        {
            m.Caption = Humica.EF.Models.SY.SYSettings.getLabel("Working Plan");
        })
      .SetNestedContent(() =>
      {
          Html.DevExpress().HyperLink(s =>
          {
              s.Name = "file_uploaded";
              s.ToolTip = "File";
              s.ClientVisible = true;
              s.Properties.Target = "_BLANK";
              s.NavigateUrl = Model.Header.WorkingPlan;
              s.Properties.Text = Humica.EF.Models.SY.SYSettings.getLabel("View");
          }).GetHtml();
      });
    });

}).GetHtml()

@Html.DevExpress().PageControl(settings =>
{
    settings.Name = "pcScrollingMaterialCreate";
    settings.Width = Unit.Percentage(100);
    settings.EnableTabScrolling = true;
    settings.TabAlign = TabAlign.Justify;
    settings.Styles.Tab.CssClass = "scrolling_Tab";
    settings.TabPages.Add(Humica.EF.Models.SY.SYSettings.getLabel("Budget Detail")).SetContent(() =>
    {
        @Html.RenderPartial("GridItemDetails", Model.ListItem);
    });
    settings.TabPages.Add(Humica.EF.Models.SY.SYSettings.getLabel("Member")).SetContent(() =>
    {
        @Html.RenderPartial("GridMemberDetails", Model.ListMember);
    });
    settings.TabPages.Add(Humica.EF.Models.SY.SYSettings.getLabel((List<Humica.EF.MD.CFForm>)
                 ViewData[Humica.EF.SYSConstant.LIST_CONF_FORM], "ApprovalDetail")).SetContent(() =>
    {
        Html.RenderPartial("GridApprovalDetail", Model.ListApproval);
    });
}).GetHtml()