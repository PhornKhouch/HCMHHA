@{
    var grid = Html.DevExpress().GridView(
       settings =>
       {

           settings.Name = "gridViewItem3";
           settings.KeyFieldName = "CompanyCode;Code";

           settings.Width = Unit.Percentage(100);
           settings.SettingsEditing.Mode = GridViewEditingMode.Inline;

           settings.CallbackRouteValues = new { Controller = "InforSetup", Action = "GridItemBranchs" };

           settings.SettingsEditing.AddNewRowRouteValues = new { Controller = "InforSetup", Action = "CreateBranch" };
           settings.SettingsEditing.UpdateRowRouteValues = new { Controller = "InforSetup", Action = "EditBranch" };
           settings.SettingsEditing.DeleteRowRouteValues = new { Controller = "InforSetup", Action = "DeleteBranch" };

           settings.SettingsSearchPanel.Visible = true;
           settings.CommandColumn.Visible = true;
           settings.CommandColumn.ShowDeleteButton = true;
           settings.CommandColumn.FixedStyle = GridViewColumnFixedStyle.Left;
           settings.CommandColumn.ShowNewButtonInHeader = true;
           settings.CommandColumn.ShowCancelButton = true;
           settings.CommandColumn.ShowEditButton = true;
           settings.SettingsBehavior.AllowFocusedRow = true;
           settings.SettingsBehavior.ConfirmDelete = true;

           settings.Columns.Add(column =>
           {
               column.Width = 200;
               column.Caption = Humica.EF.Models.SY.SYSettings.getLabel("Company");
               column.FieldName = "CompanyCode";
               column.ColumnType = MVCxGridViewColumnType.ComboBox;
               var textProperties = column.PropertiesEdit as ComboBoxProperties;
               textProperties.ValidationSettings.Display = Display.None;
               textProperties.DataSource = ViewData["Company_SELECT"];
               textProperties.TextFormatString = "{1}";
               textProperties.ValueField = "Company";
               textProperties.Columns.Add("Company", Humica.EF.Models.SY.SYSettings.getLabel("Code"), 70);
               textProperties.Columns.Add("Description", Humica.EF.Models.SY.SYSettings.getLabel("Name"), 250);
               textProperties.ValueType = typeof(string);
           });
           settings.Columns.Add(column =>
           {
               column.Width = 100;
               column.Caption = Humica.EF.Models.SY.SYSettings.getLabel("Code");
               column.FieldName = "Code";
           });

           settings.Columns.Add(column =>
           {
               column.Width = 200;
               column.Caption = Humica.EF.Models.SY.SYSettings.getLabel("Description");
               column.FieldName = "Description";

           });

           settings.Columns.Add(column =>
           {
               column.Width = 200;
               column.Caption = Humica.EF.Models.SY.SYSettings.getLabel("Second Description");
               column.FieldName = "SecDescription";
           });
           settings.Columns.Add(column =>
           {
               column.Width = 100;
               column.Caption = Humica.EF.Models.SY.SYSettings.getLabel("Emails");
               column.FieldName = "Email";
           });
           settings.Columns.Add(column =>
           {
               column.Width = 100;
               column.Caption = Humica.EF.Models.SY.SYSettings.getLabel("Phone");
               column.FieldName = "Phone";
           });
           settings.Columns.Add(column =>
           {
               column.Width = 250;
               column.Caption = Humica.EF.Models.SY.SYSettings.getLabel("Address");
               column.FieldName = "Address";
           });

           settings.SettingsEditing.Mode = GridViewEditingMode.PopupEditForm;
           settings.SettingsEditing.EditFormColumnCount = 2;

           settings.Settings.VerticalScrollBarMode = ScrollBarMode.Hidden;
           settings.Settings.HorizontalScrollBarMode = ScrollBarMode.Auto;
           settings.Settings.ShowHeaderFilterButton = true;

           settings.SettingsPager.PageSize = 15;
           settings.SettingsPager.EnableAdaptivity = true;
           settings.SettingsPager.PageSizeItemSettings.Visible = true;
           settings.SettingsBehavior.AllowFocusedRow = true;


          // settings.SettingsExport.EnableClientSideExportAPI = true;
          // settings.SettingsExport.ExportSelectedRowsOnly = true;

           settings.SettingsPopup.EditForm.SettingsAdaptivity.MaxWidth = 800;
           settings.SettingsPopup.EditForm.SettingsAdaptivity.Mode = PopupControlAdaptivityMode.Always;
           settings.SettingsPopup.EditForm.SettingsAdaptivity.VerticalAlign = PopupAdaptiveVerticalAlign.WindowCenter;


           settings.SettingsBehavior.AllowFocusedRow = true;

           settings.CustomJSProperties = (sender, e) =>
           {
               e.Properties["cpVisibleRowCount"] = (sender as MVCxGridView).VisibleRowCount;
           };
           settings.SettingsExport.ExcelExportMode = DevExpress.Export.ExportType.WYSIWYG;
           settings.SettingsExport.EnableClientSideExportAPI = true;
           settings.SettingsExport.FileName = "Template Branch";
           settings.Toolbars.Add(t =>
           {
               t.Items.Add(GridViewToolbarCommand.ExportToXlsx);
           });

           settings.CellEditorInitialize = (s, e) =>
           {
               ASPxEdit editor = (ASPxEdit)e.Editor;
               editor.ValidationSettings.Display = Display.Dynamic;
               if (e.KeyValue != null)
               {
                   if (e.Column.FieldName == "Code" || e.Column.FieldName == "CompanyCode")
                   {
                       e.Editor.ReadOnly = true;
                   }
               }
           };

       });

    if (ViewData["EditError"] != null)
    {
        grid.SetEditErrorText((string)ViewData["EditError"]);
    }
}

@grid.Bind(Model).GetHtml()