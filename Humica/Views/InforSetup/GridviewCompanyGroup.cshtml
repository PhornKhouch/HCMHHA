@{
    var grid = Html.DevExpress().GridView(
       settings =>
       {

           settings.Name = "gridViewCompanyGroup";
           settings.KeyFieldName = "CompanyCode";

           settings.Width = Unit.Percentage(100);
           settings.SettingsEditing.Mode = GridViewEditingMode.PopupEditForm;

           settings.CallbackRouteValues = new { Controller = "InforSetup", Action = "GridItemCompanyGroup" };

           settings.SettingsEditing.AddNewRowRouteValues = new { Controller = "InforSetup", Action = "CreateCompanyGroup" };
           settings.SettingsEditing.UpdateRowRouteValues = new { Controller = "InforSetup", Action = "EditCompanyGroup" };
           settings.SettingsEditing.DeleteRowRouteValues = new { Controller = "InforSetup", Action = "DeleteCompanyGroup" };

           settings.CommandColumn.Visible = true;
           settings.CommandColumn.ShowDeleteButton = false;
           settings.CommandColumn.FixedStyle = GridViewColumnFixedStyle.Left;
           settings.CommandColumn.ShowNewButtonInHeader = false;
           settings.CommandColumn.ShowCancelButton = true;
           settings.CommandColumn.ShowEditButton = true;
           settings.SettingsBehavior.AllowFocusedRow = true;
           settings.SettingsBehavior.ConfirmDelete = true;


           settings.Columns.Add(column =>
           {
               column.Width = 120;
               column.Caption = Humica.EF.Models.SY.SYSettings.getLabel("CompanyCode");
               column.FieldName = "CompanyCode";
           });

           settings.Columns.Add(column =>
           {
               column.Width = 200;
               column.Caption = Humica.EF.Models.SY.SYSettings.getLabel("Company​ Name");
               column.FieldName = "CompKHM";
           });

           settings.Columns.Add(column =>
           {
               column.Width = 200;
               column.Caption = Humica.EF.Models.SY.SYSettings.getLabel("Company​ Name2");
               column.FieldName = "CompENG";
           });
           settings.Columns.Add(column =>
           {
               column.Width = 100;
               column.Caption = Humica.EF.Models.SY.SYSettings.getLabel("Company Type");
               column.FieldName = "CompType";
           });
           settings.Columns.Add(column =>
           {
               column.Width = 100;
               column.Caption = Humica.EF.Models.SY.SYSettings.getLabel("Company Action");
               column.FieldName = "CompAct";
           });
           settings.Columns.Add(column =>
           {
               column.Caption = Humica.EF.Models.SY.SYSettings.getLabel("HouseNo");
               column.FieldName = "HDHouse";
           });
           settings.Columns.Add(column =>
           {
               column.Caption = Humica.EF.Models.SY.SYSettings.getLabel("Street");
               column.FieldName = "HDStreet";
           });
           settings.Columns.Add(column =>
           {
               column.Caption = Humica.EF.Models.SY.SYSettings.getLabel("Commune");
               column.FieldName = "HDCommune";
           });
           settings.Columns.Add(column =>
           {
               column.Caption = Humica.EF.Models.SY.SYSettings.getLabel("District");
               column.FieldName = "HDDistrict";
           });
           settings.Columns.Add(column =>
           {
               column.Caption = Humica.EF.Models.SY.SYSettings.getLabel("Province");
               column.FieldName = "HDProvince";
           });
           settings.Columns.Add(column =>
           {
               column.Caption = Humica.EF.Models.SY.SYSettings.getLabel("Email");
               column.FieldName = "Email";
           });
           settings.Columns.Add(column =>
           {
               column.Caption = Humica.EF.Models.SY.SYSettings.getLabel("OwnerName");
               column.FieldName = "OwnerName";
           });
           settings.Columns.Add(column =>
           {
               column.Caption = Humica.EF.Models.SY.SYSettings.getLabel("DirName");
               column.FieldName = "DirName";
           });
           settings.Columns.Add(column =>
           {
               column.Caption = Humica.EF.Models.SY.SYSettings.getLabel("OwnerNation");
               column.FieldName = "OwnerNation";
           });
           settings.Columns.Add(column =>
           {
               column.Caption = Humica.EF.Models.SY.SYSettings.getLabel("DirNation");
               column.FieldName = "DirNation";
           });
           settings.Columns.Add(column =>
           {
               column.Caption = Humica.EF.Models.SY.SYSettings.getLabel("DirPosition");
               column.FieldName = "DirPositon";
           });
           settings.Columns.Add(column =>
           {
               column.Caption = Humica.EF.Models.SY.SYSettings.getLabel("Phone");
               column.FieldName = "Phone";
           });
           settings.Columns.Add(column =>
           {
               column.Caption = Humica.EF.Models.SY.SYSettings.getLabel("BaseCurrency");
               column.FieldName = "BaseCurrency";
           });
           settings.SettingsEditing.Mode = GridViewEditingMode.PopupEditForm;
           settings.SettingsEditing.EditFormColumnCount = 2;

           settings.Settings.VerticalScrollBarMode = ScrollBarMode.Hidden;
           settings.Settings.HorizontalScrollBarMode = ScrollBarMode.Auto;
           settings.Settings.ShowHeaderFilterButton = true;

           settings.SettingsPager.PageSize = 15;
           settings.SettingsPager.EnableAdaptivity = true;
           settings.SettingsPager.PageSizeItemSettings.Visible = true;

           settings.SettingsExport.EnableClientSideExportAPI = true;
           settings.SettingsExport.ExportSelectedRowsOnly = true;

           settings.SettingsPopup.EditForm.SettingsAdaptivity.MaxWidth = 800;
           settings.SettingsPopup.EditForm.SettingsAdaptivity.Mode = PopupControlAdaptivityMode.Always;
           settings.SettingsPopup.EditForm.SettingsAdaptivity.VerticalAlign = PopupAdaptiveVerticalAlign.WindowCenter;


           settings.SettingsBehavior.AllowFocusedRow = true;

           settings.CustomJSProperties = (sender, e) =>
           {
               e.Properties["cpVisibleRowCount"] = (sender as MVCxGridView).VisibleRowCount;
           };

           settings.CellEditorInitialize = (s, e) =>
           {
               ASPxEdit editor = (ASPxEdit)e.Editor;
               editor.ValidationSettings.Display = Display.Dynamic;
               if (e.KeyValue != null)
               {
                   if (e.Column.FieldName == "CompanyCode")
                   {
                       e.Editor.ReadOnly = true;
                   }
               }

               if (e.Column.FieldName == "Status")
               {
                   //e.Editor.ReadOnly = true;
               }
           };


       });

    if (ViewData["EditError"] != null)
    {
        grid.SetEditErrorText((string)ViewData["EditError"]);
    }
}

@grid.Bind(Model).GetHtml()


