@model Humica.Logic.SY.ClsService

@Html.DevExpress().FormLayout(settings =>
{
    settings.Name = "TabBirthday";
    //settings.AlignItemCaptionsInAllGroups = true;
    //settings.Width = Unit.Percentage(100);
    settings.Items.AddGroupItem(m => Model.BackgroundService, g =>
    {
        g.GroupBoxDecoration = GroupBoxDecoration.None;
        g.GroupBoxDecoration = GroupBoxDecoration.HeadingLine;
        g.Caption =  Humica.EF.Models.SY.SYSettings.getLabel("Birthday");
        g.SettingsItemCaptions.HorizontalAlign = FormLayoutHorizontalAlign.Left;
        g.ColumnCount = 1;
        g.Items.Add(m =>
        {
            m.Caption = Humica.EF.Models.SY.SYSettings.getLabel("IsBirthday");
        })
        .SetNestedContent(() =>
        {
            Html.DevExpress().CheckBoxFor(i => i.BackgroundService.IsBirthday, s =>
            {
                s.Properties.ValidationSettings.ErrorDisplayMode = ErrorDisplayMode.ImageWithTooltip;
                s.Properties.ValidationSettings.SetFocusOnError = true;
                s.Properties.ValidationSettings.ErrorText = "*";
                s.Properties.ClientInstanceName = "chkBirthday";
                s.Properties.ClientSideEvents.CheckedChanged = "OnCheckedBirthday";
            }).Render();
        });
        g.Items.Add(m =>
        {
            m.Caption = Humica.EF.Models.SY.SYSettings.getLabel("ScheduleTime");
        })
        .SetNestedContent(() =>
        {
            Html.DevExpress().TimeEditFor(i => i.BackgroundService.BDScheduleTime, s =>
            {
                s.Properties.ClientInstanceName = "txtBDScheduleTime";
                s.Properties.DisplayFormatString = "h:mm tt";
                s.Properties.EditFormat = EditFormat.Time;
                s.ControlStyle.HorizontalAlign = HorizontalAlign.Right;
            }).Render();
        });
        g.Items.Add(m =>
        {
            m.Caption = Humica.EF.Models.SY.SYSettings.getLabel("NextRunTime") + " " + Humica.EF.Models.SY.SYSettings.getLabel("(Hour)");
        })
       .SetNestedContent(() =>
       {
           Html.DevExpress().SpinEditFor(i => i.BackgroundService.BDNextRunTime, s =>
           {
               s.Properties.ClientInstanceName = "txtBDNextRunTime";
               s.ShowModelErrors = true;
               s.Properties.ValidationSettings.ErrorDisplayMode = ErrorDisplayMode.ImageWithTooltip;
               s.Properties.ValidationSettings.SetFocusOnError = true;
               s.Properties.ValidationSettings.ErrorText = "*";
               s.ControlStyle.HorizontalAlign = HorizontalAlign.Right;
           }).Render();
       });
    });
}).GetHtml()

