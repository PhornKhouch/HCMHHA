@{
    var grid = Html.DevExpress().GridView(settings =>
    {
        settings.Name = "GridItemRefQuest";
        settings.KeyFieldName = "ID";

        settings.Width = Unit.Percentage(100);
        settings.SettingsEditing.Mode = GridViewEditingMode.PopupEditForm;

        settings.CallbackRouteValues = new { Controller = "Recruitment", Action = "GridItemRefQuest" };

        settings.SettingsEditing.AddNewRowRouteValues = new { Controller = "Recruitment", Action = "CreateRefQuest" };
        settings.SettingsEditing.UpdateRowRouteValues = new { Controller = "Recruitment", Action = "EdiRefQuest" };
        settings.SettingsEditing.DeleteRowRouteValues = new { Controller = "Recruitment", Action = "DeleteRefQuest" };

        settings.CommandColumn.Visible = true;
        settings.CommandColumn.ShowDeleteButton = true;

        settings.CommandColumn.ShowNewButtonInHeader = true;
        settings.CommandColumn.ShowCancelButton = true;
        settings.CommandColumn.ShowEditButton = true;
        settings.Columns.Add(column =>
    {
        column.Width = 80;
        column.Caption = Humica.EF.Models.SY.SYSettings.getLabel("Step");
        column.FieldName = "step";
        column.ColumnType = MVCxGridViewColumnType.SpinEdit;
    });
        settings.Columns.Add(column =>
    {
        column.Width = 350;
        column.Caption = Humica.EF.Models.SY.SYSettings.getLabel("Description");
        column.FieldName = "Description";
        column.ColumnType = MVCxGridViewColumnType.TextBox;
        //(column.PropertiesEdit as MemoProperties).Height = 200;

    });
        settings.Columns.Add(column =>
    {
        column.Width = 350;
        column.Caption = Humica.EF.Models.SY.SYSettings.getLabel("SecDescription");
        column.FieldName = "SecDescription";
        column.ColumnType = MVCxGridViewColumnType.TextBox;
        // (column.PropertiesEdit as MemoProperties).Height = 200;

    });
        settings.SettingsSearchPanel.Visible = true;
        settings.SettingsBehavior.ConfirmDelete = true;

        settings.Settings.ShowGroupPanel = false;
        settings.Settings.ShowFooter = true;
        settings.SettingsContextMenu.Enabled = true;
        settings.SettingsContextMenu.RowMenuItemVisibility.DeleteRow = false;
        settings.SettingsContextMenu.RowMenuItemVisibility.EditRow = false;
        settings.SettingsContextMenu.RowMenuItemVisibility.NewRow = false;
        settings.Settings.ShowHeaderFilterButton = true;
        settings.SettingsPopup.HeaderFilter.Height = 200;

        settings.SettingsBehavior.ColumnResizeMode = ColumnResizeMode.Control;
        settings.Settings.HorizontalScrollBarMode = ScrollBarMode.Visible;
        settings.Settings.VerticalScrollBarMode = ScrollBarMode.Visible;
        settings.Settings.VerticalScrollableHeight = Humica.EF.MD.SYSession.PageHieigh;
        settings.SettingsPager.PageSize = 10;

        settings.Settings.VerticalScrollBarMode = ScrollBarMode.Hidden;
        settings.Settings.HorizontalScrollBarMode = ScrollBarMode.Auto;
        settings.Settings.ShowHeaderFilterButton = true;

        settings.SettingsPager.EnableAdaptivity = true;
        settings.SettingsPager.PageSizeItemSettings.Visible = true;

        settings.SettingsExport.EnableClientSideExportAPI = true;
        settings.SettingsExport.ExportSelectedRowsOnly = true;

        settings.SettingsPopup.EditForm.SettingsAdaptivity.MaxWidth = 800;
        settings.SettingsPopup.EditForm.SettingsAdaptivity.Mode = PopupControlAdaptivityMode.Always;
        settings.SettingsPopup.EditForm.SettingsAdaptivity.VerticalAlign = PopupAdaptiveVerticalAlign.WindowCenter;
        settings.SettingsBehavior.AllowFocusedRow = true;

        settings.DataBound = (sender, e) =>
               {
                   (sender as MVCxGridView).Settings.GridLines = System.Web.UI.WebControls.GridLines.Both;
               };
        settings.PreRender = (sender, e) =>
    {
        //((MVCxGridView)sender).StartEdit(1);
    };

        settings.CellEditorInitialize = (s, e) =>
    {
        ASPxEdit editor = (ASPxEdit)e.Editor;
        editor.ValidationSettings.Display = Display.None;
        if (e.KeyValue == null)
        {
            //    if (e.Column.FieldName == "Step")
            //    {
            //        editor.Value = 1;
            //    }
        }
    };

    });

    if (ViewData["EditError"] != null)
    {
        grid.SetEditErrorText((string)ViewData["EditError"]);
    }
}
@grid.Bind(Model).GetHtml()
