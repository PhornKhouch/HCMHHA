@{
    var gridExtension = Html.DevExpress().GridView(
    settings =>
    {
        settings.Name = "GridViewList";
        settings.KeyFieldName = "Code";

        settings.Width = Unit.Percentage(100);
        settings.CallbackRouteValues = new { Action = "PartialListProcess", Controller = "ESSKPIPlan" };

        settings.SettingsBehavior.ConfirmDelete = true;
        settings.SettingsSearchPanel.Visible = true;
        settings.CommandColumn.Visible = false;
        settings.Settings.ShowGroupPanel = false;
        settings.Settings.ShowFooter = true;
        settings.SettingsContextMenu.Enabled = true;
        settings.SettingsContextMenu.RowMenuItemVisibility.DeleteRow = false;
        settings.SettingsContextMenu.RowMenuItemVisibility.EditRow = false;
        settings.SettingsContextMenu.RowMenuItemVisibility.NewRow = false;
        settings.Settings.ShowHeaderFilterButton = true;
        settings.SettingsPopup.HeaderFilter.Height = 200;
        //settings.CommandColumn.ShowSelectCheckbox = true;
        settings.CommandColumn.FixedStyle = GridViewColumnFixedStyle.Left;
        settings.CommandColumn.Width = 50;

        settings.Columns.Add(column =>
        {
            column.Caption = Humica.EF.Models.SY.SYSettings.getLabel("Code");
            column.Width = 130;
            column.FieldName = "Code";
            column.ColumnType = MVCxGridViewColumnType.TextBox;
        });
        settings.Columns.Add(column =>
        {
            column.Caption = Humica.EF.Models.SY.SYSettings.getLabel("DocumentDate");
            column.FieldName = "DocumentDate";
            column.ColumnType = MVCxGridViewColumnType.DateEdit;
            var textproperties = column.PropertiesEdit as DateEditProperties;
            textproperties.DisplayFormatString = ViewData[Humica.EF.SYSConstant.DATE_FORMAT].ToString();
            column.Width = 150;
        });
        settings.Columns.Add(column =>
        {
            column.Caption = Humica.EF.Models.SY.SYSettings.getLabel("Planner Name");
            column.Width = 250;
            column.FieldName = "PlanerName";
            column.ColumnType = MVCxGridViewColumnType.TextBox;
        });
        settings.Columns.Add(column =>
        {
            column.Caption = Humica.EF.Models.SY.SYSettings.getLabel("PIC Name");
            column.Width = 250;
            column.FieldName = "PICName";
            column.ColumnType = MVCxGridViewColumnType.TextBox;
        });
        settings.Columns.Add(column =>
        {
            column.Caption = Humica.EF.Models.SY.SYSettings.getLabel("CriteriaName");
            column.Width = 250;
            column.FieldName = "CriteriaName";
            column.ColumnType = MVCxGridViewColumnType.TextBox;
        });

        settings.Columns.Add(column =>
        {
            column.Caption = Humica.EF.Models.SY.SYSettings.getLabel("KPIType");
            column.FieldName = "KPIType";
            column.ColumnType = MVCxGridViewColumnType.TextBox;
            column.Width = 120;
        });
        settings.Columns.Add(column =>
        {
            column.Width = 110;
            column.Caption = Humica.EF.Models.SY.SYSettings.getLabel("TotalWeight");
            column.FieldName = "TotalWeight";
            column.ColumnType = MVCxGridViewColumnType.SpinEdit;
            var spinEditProperties = column.PropertiesEdit as SpinEditProperties;
            spinEditProperties.DisplayFormatString = "P2";
            spinEditProperties.Style.HorizontalAlign = System.Web.UI.WebControls.HorizontalAlign.Right;

        });
        settings.Columns.Add(column =>
        {
            column.Caption = Humica.EF.Models.SY.SYSettings.getLabel("ExpectedDate");
            column.FieldName = "ExpectedDate";
            column.ColumnType = MVCxGridViewColumnType.DateEdit;
            var textproperties = column.PropertiesEdit as DateEditProperties;
            textproperties.DisplayFormatString = ViewData[Humica.EF.SYSConstant.DATE_FORMAT].ToString();
            column.Width = 130;
        });
        settings.Columns.Add(column =>
        {
            column.Caption = Humica.EF.Models.SY.SYSettings.getLabel("Dateline");
            column.FieldName = "Dateline";
            column.ColumnType = MVCxGridViewColumnType.DateEdit;
            var textproperties = column.PropertiesEdit as DateEditProperties;
            textproperties.DisplayFormatString = ViewData[Humica.EF.SYSConstant.DATE_FORMAT].ToString();
            column.Width = 130;
        });

        settings.Columns.Add(column =>
        {
            column.Caption = Humica.EF.Models.SY.SYSettings.getLabel("Status");
            column.FieldName = "Status";
            column.ColumnType = MVCxGridViewColumnType.TextBox;
            column.Width = 100;

            settings.FormatConditions.AddHighlight("Status", "[Status] = 'OPEN'", GridConditionHighlightFormat.BoldText);
            settings.FormatConditions.AddHighlight("Status", "[Status] = 'COMPLETED'", GridConditionHighlightFormat.GreenFillWithDarkGreenText);
            settings.FormatConditions.AddHighlight("Status", "[Status] = 'RELEASED'", GridConditionHighlightFormat.Custom);
            settings.FormatConditions.AddHighlight("Status", "[Status] = 'PENDING'", GridConditionHighlightFormat.YellowFillWithDarkYellowText);
            settings.FormatConditions.AddHighlight("Status", "[Status] = 'CANCELLED'", GridConditionHighlightFormat.LightRedFillWithDarkRedText);
            settings.FormatConditions.AddHighlight("Status", "[Status] = 'APPROVED'", GridConditionHighlightFormat.Custom);

            column.CellStyle.BackColor = System.Drawing.Color.LightCyan;
            column.CellStyle.ForeColor = System.Drawing.Color.DarkCyan;
        });


        settings.SettingsBehavior.EnableCustomizationWindow = true;

        settings.PreRender = (s, e) =>
        {

        };

        settings.SettingsAdaptivity.AdaptivityMode = GridViewAdaptivityMode.HideDataCells;
        settings.SettingsAdaptivity.AllowOnlyOneAdaptiveDetailExpanded = true;
        settings.EditFormLayoutProperties.SettingsAdaptivity.AdaptivityMode = FormLayoutAdaptivityMode.SingleColumnWindowLimit;
        settings.EditFormLayoutProperties.SettingsAdaptivity.SwitchToSingleColumnAtWindowInnerWidth = 600;

        settings.ClientSideEvents.RowDblClick = "DbRowClick";
        settings.SettingsPager.Position = PagerPosition.Bottom;
        settings.SettingsPager.FirstPageButton.Visible = true;
        settings.SettingsPager.LastPageButton.Visible = true;
        settings.SettingsPager.PageSizeItemSettings.Visible = true;


        settings.SettingsDataSecurity.AllowReadUnlistedFieldsFromClientApi = DefaultBoolean.True;
        settings.SettingsBehavior.AllowFocusedRow = true;

        settings.SettingsBehavior.ColumnResizeMode = ColumnResizeMode.Control;

        settings.Settings.HorizontalScrollBarMode = ScrollBarMode.Visible;
        settings.Settings.VerticalScrollBarMode = ScrollBarMode.Visible;
        settings.Settings.VerticalScrollableHeight = 450;

        settings.SettingsBehavior.AllowFocusedRow = true;
        settings.SettingsBehavior.AllowEllipsisInText = true;

        string val = "0";
        if (Model != null)
        {
            val = Model.Count.ToString();

        }
        if (val == "0")
        {
            settings.SettingsPager.PageSizeItemSettings.Items = new string[] { "20", "50", "100" };
        }
        else
        {
            var strcheck = new string[] { "20", "50", "100" };
            var b = true;
            foreach (var read in strcheck)
            {
                if (val == read)
                {
                    b = false;
                }
            }
            if (b == true)
            {
                settings.SettingsPager.PageSizeItemSettings.Items = new string[] { "20", "50", "100", val };
            }
            else
            {
                settings.SettingsPager.PageSizeItemSettings.Items = new string[] { "20", "50", "100" };
            }

        }

        settings.FormatConditions.AddHighlight("AmountPay", "[Status] = 'OPEN'", GridConditionHighlightFormat.LightRedFillWithDarkRedText);
        settings.FormatConditions.AddHighlight("AmountPay", "[Status] = 'DEPOSITED'", GridConditionHighlightFormat.YellowFillWithDarkYellowText);
        settings.FormatConditions.AddHighlight("AmountPay", "[Status] = 'CLEARED'", GridConditionHighlightFormat.GreenFillWithDarkGreenText);
        settings.FormatConditions.AddHighlight("DepositBalance", "[Status] = 'DEPOSITED'", GridConditionHighlightFormat.YellowFillWithDarkYellowText);
        settings.FormatConditions.AddHighlight("DepositBalance", "[Status] = 'CLEARED'", GridConditionHighlightFormat.GreenFillWithDarkGreenText);

        settings.FormatConditions.AddHighlight("PaymentBalance", "[PaymentBalance] > 0", GridConditionHighlightFormat.GreenFillWithDarkGreenText);

        settings.CustomJSProperties = (s, e) =>
        {
            ASPxGridView grid = (ASPxGridView)s;
            var result = new System.Collections.Hashtable();
            foreach (var col in grid.AllColumns)
            {
                var dataCol = col as GridViewDataColumn;
                if (dataCol != null)
                {
                    var visible = "T";
                    if (dataCol.Visible == false)
                    {
                        visible = "F";
                    }
                    result[dataCol.FieldName] = new Dictionary<string, object>() {
                            {"fieldName",dataCol.FieldName},
                            {"caption",dataCol.Caption},
                            { "sortIndex", dataCol.SortIndex },
                            { "sortOrder", dataCol.SortOrder },
                            { "groupIndex", dataCol.GroupIndex },
                            { "width", dataCol.Width },
                            { "visibleIndex", dataCol.VisibleIndex },
                            { "visible", visible },
                            {"filter", dataCol.FilterExpression},
                           };
                }
            }

            e.Properties["cpColumnsProp"] = result;

            if (ViewData[Humica.EF.SYSConstant.SCREEN_ID] != null)
            {
                Session[Humica.EF.SYSConstant.GRID_SEARCH_FILTER + ViewData[Humica.EF.SYSConstant.SCREEN_ID].ToString()] = grid.SearchPanelFilter;
                Session[Humica.EF.SYSConstant.SESSION_FILTER + ViewData[Humica.EF.SYSConstant.SCREEN_ID].ToString()] = grid.FilterExpression;

                Session[Humica.EF.SYSConstant.GRID_VIEW_LAYOUT + ViewData[Humica.EF.SYSConstant.SCREEN_ID].ToString()] = result;
                Session[Humica.EF.SYSConstant.GRID_VIEW_SOURCE + ViewData[Humica.EF.SYSConstant.SCREEN_ID].ToString()] = grid.DataSource;
            }

        };

        settings.PreRender = (sender, e) =>
        {
            if (Session[Humica.EF.SYSConstant.GRID_SEARCH_FILTER + ViewData[Humica.EF.SYSConstant.SCREEN_ID].ToString()] != null)
            {
                ASPxGridView grid = (ASPxGridView)sender;
                grid.SearchPanelFilter = Session[Humica.EF.SYSConstant.GRID_SEARCH_FILTER + ViewData[Humica.EF.SYSConstant.SCREEN_ID].ToString()].ToString();
            }
            if (Session[Humica.EF.SYSConstant.SESSION_FILTER + ViewData[Humica.EF.SYSConstant.SCREEN_ID].ToString()] != null)
            {
                ASPxGridView grid = (ASPxGridView)sender;
                grid.FilterExpression = Session[Humica.EF.SYSConstant.SESSION_FILTER + ViewData[Humica.EF.SYSConstant.SCREEN_ID].ToString()].ToString();
            }
        };

        settings.SettingsPager.PageSize = 20;
    });
}

@gridExtension.Bind(Model).GetHtml()