@model Humica.Logic.RCM.RCMIntVChklstObject

@Html.DevExpress().FormLayout(settings =>
{
    settings.Name = "InterviewAlert";
    settings.AlignItemCaptionsInAllGroups = true;
    var isReadOnly = false;
    if (ViewData[Humica.Models.SY.ClsConstant.IS_READ_ONLY] != null)
    {
        isReadOnly = true;
    }
    settings.Items.AddGroupItem(m => Model.Header, g =>
    {
        g.ColCount = 2;
        g.GroupBoxDecoration = GroupBoxDecoration.None;
        g.SettingsItemCaptions.HorizontalAlign = FormLayoutHorizontalAlign.Left;
        g.Items.Add(m =>
        {
            m.Caption = Humica.EF.Models.SY.SYSettings.getLabel("Appointment Date");
        })
        .SetNestedContent(() =>
        {
            Html.DevExpress().DateEditFor(i => i.Header.AppointmentDate, s =>
            {
                s.ReadOnly = isReadOnly;
                s.Properties.ClientInstanceName = "dtAppointment";
                s.ShowModelErrors = true;
                s.Properties.ValidationSettings.ErrorDisplayMode = ErrorDisplayMode.Text;
                s.Properties.ValidationSettings.SetFocusOnError = true;
                s.Properties.NullText = ViewData[Humica.EF.SYSConstant.DATE_FORMAT].ToString();
                s.Properties.EditFormatString = ViewData[Humica.EF.SYSConstant.DATE_FORMAT].ToString();
                s.Properties.DisplayFormatString = ViewData[Humica.EF.SYSConstant.DATE_FORMAT].ToString();
                s.Properties.CalendarProperties.FastNavProperties.DisplayMode = FastNavigationDisplayMode.Inline;
                s.Properties.ValidationSettings.ErrorText = "*";
            }).Render();
        });
        g.Items.Add(m =>
        {
            m.Caption = Humica.EF.Models.SY.SYSettings.getLabel("StartTime");
        })
        .SetNestedContent(() =>
        {
            Html.DevExpress().TimeEditFor(i => i.Header.StartTime, s =>
            {
                s.ReadOnly = isReadOnly;
                s.Properties.DisplayFormatString = "h:mm tt";
                s.Properties.EditFormat = EditFormat.Time;
            }).Render();
        });
        g.Items.Add(m =>
        {
            m.Caption = Humica.EF.Models.SY.SYSettings.getLabel("EndTime");
        })
        .SetNestedContent(() =>
        {
            Html.DevExpress().TimeEditFor(i => i.Header.EndTime, s =>
            {
                s.ReadOnly = isReadOnly;
                s.Properties.DisplayFormatString = "h:mm tt";
                s.Properties.EditFormat = EditFormat.Time;
            }).Render();
        });
        g.Items.Add(m =>
        {
            m.Caption = Humica.EF.Models.SY.SYSettings.getLabel("Location");
        })
        .SetNestedContent(() =>
        {
            Html.DevExpress().TextBoxFor(i => i.Header.Location, s =>
            {
                s.ReadOnly = isReadOnly;
                s.ShowModelErrors = true;
                s.Properties.ValidationSettings.ErrorDisplayMode = ErrorDisplayMode.Text;
                s.Properties.ValidationSettings.SetFocusOnError = true;
                s.Properties.ValidationSettings.ErrorText = "*";
            }).Render();
        });
        g.Items.Add(m =>
        {
            m.Caption = Humica.EF.Models.SY.SYSettings.getLabel("Alert To Interviewer");
        })
        .SetNestedContent(() =>
        {
            Html.DevExpress().RadioButtonListFor(i => i.Header.AlertToInterviewer, s =>
            {
                s.ReadOnly = isReadOnly;
                s.Properties.RepeatColumns = 2;
                s.Properties.Items.Add("Email", "EM");
                s.Properties.Items.Add("Phone", "P");
            }).Render();
        });
        g.Items.Add(m =>
        {
            m.Caption = Humica.EF.Models.SY.SYSettings.getLabel("Remark");
            m.ColumnSpan = 2;
        })
        .SetNestedContent(() =>
        {
            Html.DevExpress().TextBoxFor(i => i.Header.Remark, s =>
            {
                s.ReadOnly = isReadOnly;
                s.Width = Unit.Percentage(100);
                s.Properties.ValidationSettings.ErrorDisplayMode = ErrorDisplayMode.ImageWithTooltip;
                s.Properties.ValidationSettings.SetFocusOnError = true;
                s.Properties.ValidationSettings.ErrorText = "*";
            }).Render();
        });
    });

}).GetHtml()

