@model Humica.Performance.IClsAPPIncreaseSalary

@Html.DevExpress().FormLayout(settings =>
{
    settings.Name = "FTSalary";
    settings.AlignItemCaptionsInAllGroups = true;
    settings.Items.AddGroupItem(m => Model.SalaryInBgP, g =>
    {
        g.ColCount = 1;
        g.GroupBoxDecoration = GroupBoxDecoration.None;
        g.SettingsItemCaptions.HorizontalAlign = FormLayoutHorizontalAlign.Left;
        g.Items.Add(m =>
        {
            m.Caption = Humica.EF.Models.SY.SYSettings.getLabel("Total Salary");
        })
        .SetNestedContent(() =>
        {
            Html.DevExpress().TextBoxFor(i => i.TotalSalary, s =>
            {
                s.ReadOnly = true;
                s.Properties.ClientInstanceName = "txtTotalSalary";
                s.Properties.ValidationSettings.ErrorDisplayMode = ErrorDisplayMode.ImageWithTooltip;
                s.Properties.ValidationSettings.SetFocusOnError = true;
                s.Properties.ValidationSettings.ErrorText = "*";
                s.Properties.DisplayFormatString = "N2";
                s.ControlStyle.HorizontalAlign = HorizontalAlign.Right;

            }).Render();
        });
        g.Items.Add(m =>
        {
            m.Caption = Humica.EF.Models.SY.SYSettings.getLabel("Salary Increase Budget ") + "%";
        })
        .SetNestedContent(() =>
        {
            Html.DevExpress().TextBoxFor(i => i.SalaryInBgP, s =>
            {
                s.ReadOnly = true;
                s.Properties.ClientInstanceName = "txtSalaryInBgP";
                s.Properties.ValidationSettings.ErrorDisplayMode = ErrorDisplayMode.ImageWithTooltip;
                s.Properties.ValidationSettings.SetFocusOnError = true;
                s.Properties.DisplayFormatString = "P2";
                s.Properties.ValidationSettings.ErrorText = "*";
                s.ControlStyle.HorizontalAlign = HorizontalAlign.Right;
            }).Render();
        });
        g.Items.Add(m =>
        {
            m.Caption = Humica.EF.Models.SY.SYSettings.getLabel("Salary Increase Budget");
        })
        .SetNestedContent(() =>
        {
            Html.DevExpress().TextBoxFor(i => i.SalaryIncBgUSD, s =>
            {
                s.ReadOnly = true;
                s.Properties.ClientInstanceName = "txtSalaryIncBgUSD";
                s.Properties.ValidationSettings.ErrorDisplayMode = ErrorDisplayMode.ImageWithTooltip;
                s.Properties.ValidationSettings.SetFocusOnError = true;
                s.Properties.ValidationSettings.ErrorText = "*";
                s.Properties.DisplayFormatString = "N2";
                s.ControlStyle.HorizontalAlign = HorizontalAlign.Right;
            }).Render();
        });
        g.Items.Add(m =>
        {
            m.Caption = Humica.EF.Models.SY.SYSettings.getLabel("Salary Increase Budget Utilised");
        })
        .SetNestedContent(() =>
        {
            Html.DevExpress().TextBoxFor(i => i.SalaryIncBgUtilised, s =>
            {
                s.ReadOnly = true;
                s.Properties.ClientInstanceName = "txtSalaryIncBgUtilised";
                s.Properties.ValidationSettings.ErrorDisplayMode = ErrorDisplayMode.ImageWithTooltip;
                s.Properties.ValidationSettings.SetFocusOnError = true;
                s.Properties.ValidationSettings.ErrorText = "*";
                s.Properties.DisplayFormatString = "N2";
                s.ControlStyle.HorizontalAlign = HorizontalAlign.Right;
            }).Render();
        });
        g.Items.Add(m =>
        {
            m.Caption = Humica.EF.Models.SY.SYSettings.getLabel("Salary IncreaseBudget Balance");
        })
        .SetNestedContent(() =>
        {
            Html.DevExpress().TextBoxFor(i => i.SalaryIncBgBalance, s =>
            {
                s.ReadOnly = true;
                s.Properties.ClientInstanceName = "txtSalaryIncBgBalance";
                s.Properties.ValidationSettings.ErrorDisplayMode = ErrorDisplayMode.ImageWithTooltip;
                s.Properties.ValidationSettings.SetFocusOnError = true;
                s.Properties.ValidationSettings.ErrorText = "*";
                s.Properties.DisplayFormatString = "N2";
                s.ControlStyle.HorizontalAlign = HorizontalAlign.Right;
            }).Render();
        });
    });
}).Bind(Model).GetHtml()