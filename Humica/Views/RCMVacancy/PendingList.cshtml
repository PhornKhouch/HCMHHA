@{
    var grid = Html.DevExpress().GridView(settings =>
    {
        settings.Name = "PendingList";
        settings.KeyFieldName = "RequestNo";
        settings.EnableTheming = true;
        settings.EnableRowsCache = true;
        settings.Width = Unit.Percentage(100);
        settings.SettingsEditing.Mode = GridViewEditingMode.Inline;
        settings.SettingsEditing.NewItemRowPosition = GridViewNewItemRowPosition.Bottom;

        settings.SettingsBehavior.AllowSort = true;
        settings.SettingsSearchPanel.Visible = true;
        settings.CallbackRouteValues = new { Controller = "RCMVacancy", Action = "PendingList" };

        settings.CommandColumn.Visible = false;
        settings.SettingsBehavior.AllowSort = true;
        settings.Settings.ShowHeaderFilterButton = true;
        settings.SettingsBehavior.AllowEllipsisInText = true;

        settings.SettingsPopup.HeaderFilter.Height = 200;
        settings.Settings.ShowFooter = true;
        settings.SettingsContextMenu.Enabled = true;
        settings.SettingsBehavior.EnableCustomizationWindow = true;
        settings.CommandColumn.FixedStyle = GridViewColumnFixedStyle.Left;
        settings.Columns.Add(column =>
        {
            column.Caption = Humica.EF.Models.SY.SYSettings.getLabel(ViewData[Humica.EF.SYSConstant.SCREEN_ID].ToString(), "");
            column.Width = 70;
            column.SetDataItemTemplateContent(container =>
            {
                Html.DevExpress().HyperLink(hyperlink =>
                {
                    hyperlink.Name = "l1" + container.VisibleIndex;
                    hyperlink.Properties.Text = Humica.EF.Models.SY.SYSettings.getLabel(ViewData[Humica.EF.SYSConstant.SCREEN_ID].ToString(), "Create");
                    hyperlink.ToolTip = Convert.ToString(DataBinder.Eval(container.DataItem, "RequestNo"));
                    hyperlink.NavigateUrl = Humica.EF.Models.SY.SYUrl.getBaseUrl() + ViewData[Humica.EF.Models.SY.SYConstant.CURRENT_URL] + "Create?RequestNo=" + Convert.ToString(DataBinder.Eval(container.DataItem, "RequestNo"));
                }).Render();
            });
        });
        settings.Columns.Add(column =>
        {
            column.FieldName = "RecruitType";
            column.Width = 100;
            column.Caption = Humica.EF.Models.SY.SYSettings.getLabel("RecruitType");
            column.ColumnType = MVCxGridViewColumnType.ComboBox;
            var textProperties = column.PropertiesEdit as ComboBoxProperties;
            textProperties.ValidationSettings.Display = Display.None;
            textProperties.DataSource = ViewData["RECRUITTYPE_SELECT"];
            textProperties.TextField = "SelectText";
            textProperties.ValueField = "SelectValue";
            textProperties.ValueType = typeof(string);
        });
        settings.Columns.Add(column =>
        {
            column.Caption = Humica.EF.Models.SY.SYSettings.getLabel("NoOfRecruit");
            column.Width = 70;
            column.FieldName = "NoOfRecruit";
        });
        settings.Columns.Add(column =>
        {
            column.FieldName = "Branch";
            column.Width = 120;
            column.Caption = Humica.EF.Models.SY.SYSettings.getLabel("Branch");
            column.ColumnType = MVCxGridViewColumnType.ComboBox;
            var textProperties = column.PropertiesEdit as ComboBoxProperties;
            textProperties.ValidationSettings.Display = Display.None;
            textProperties.DataSource = ViewData["BRANCHES_SELECT"];
            textProperties.TextField = "Description";
            textProperties.ValueField = "Code";
            textProperties.ValueType = typeof(string);
        });
        settings.Columns.Add(column =>
        {
            column.FieldName = "DEPT";
            column.Width = 120;
            column.Caption = Humica.EF.Models.SY.SYSettings.getLabel("Department");
            column.ColumnType = MVCxGridViewColumnType.ComboBox;
            var textProperties = column.PropertiesEdit as ComboBoxProperties;
            textProperties.ValidationSettings.Display = Display.None;
            textProperties.DataSource = ViewData["DEPARTMENT_SELECT"];
            textProperties.TextField = "Description";
            textProperties.ValueField = "Code";
            textProperties.ValueType = typeof(string);
        });
        settings.Columns.Add(column =>
        {
            column.FieldName = "POST";
            column.Width = 120;
            column.Caption = Humica.EF.Models.SY.SYSettings.getLabel("Position");
            column.ColumnType = MVCxGridViewColumnType.ComboBox;
            var textProperties = column.PropertiesEdit as ComboBoxProperties;
            textProperties.ValidationSettings.Display = Display.None;
            textProperties.DataSource = ViewData["POSITION_SELECT"];
            textProperties.TextField = "Description";
            textProperties.ValueField = "Code";
            textProperties.ValueType = typeof(string);
        });
        settings.Columns.Add(column =>
        {
            column.FieldName = "WorkingType";
            column.Width = 100;
            column.Caption = Humica.EF.Models.SY.SYSettings.getLabel("WorkingType");
            column.ColumnType = MVCxGridViewColumnType.ComboBox;
            var textProperties = column.PropertiesEdit as ComboBoxProperties;
            textProperties.ValidationSettings.Display = Display.None;
            textProperties.DataSource = ViewData["WORKINGTYPE_SELECT"];
            textProperties.TextField = "Description";
            textProperties.ValueField = "Code";
            textProperties.ValueType = typeof(string);
        });
        settings.Columns.Add(column =>
        {
            column.FieldName = "Gender";
            column.Width = 75;
            column.Caption = Humica.EF.Models.SY.SYSettings.getLabel("Gender");
            column.ColumnType = MVCxGridViewColumnType.ComboBox;
            var textProperties = column.PropertiesEdit as ComboBoxProperties;
            textProperties.ValidationSettings.Display = Display.None;
            textProperties.DataSource = ViewData["GENDER_SELECT"];
            textProperties.TextField = "SelectText";
            textProperties.ValueField = "SelectValue";
            textProperties.ValueType = typeof(string);
        });
        settings.Columns.Add(column =>
        {
            column.Caption = Humica.EF.Models.SY.SYSettings.getLabel("ExpectedDate");
            column.FieldName = "ExpectedDate";
            column.Width = 100;
            column.ColumnType = MVCxGridViewColumnType.DateEdit;
            var textProperties = column.PropertiesEdit as DateEditProperties;
            textProperties.EditFormatString = ViewData[Humica.EF.SYSConstant.DATE_FORMAT].ToString();
            textProperties.DisplayFormatString = ViewData[Humica.EF.SYSConstant.DATE_FORMAT].ToString();
        });
        settings.Columns.Add(column =>
        {
            column.Caption = Humica.EF.Models.SY.SYSettings.getLabel("ProposedSalaryFrom");
            column.Width = 100;
            column.FieldName = "ProposedSalaryFrom";
        });
        settings.Columns.Add(column =>
        {
            column.Caption = Humica.EF.Models.SY.SYSettings.getLabel("ProposedSalaryTo");
            column.Width = 100;
            column.FieldName = "ProposedSalaryTo";
        });
        settings.Columns.Add(column =>
        {
            column.FieldName = "RequestedBy";
            column.Width = 90;
            column.Caption = Humica.EF.Models.SY.SYSettings.getLabel("RequestedBy");
            column.ColumnType = MVCxGridViewColumnType.ComboBox;
            var textProperties = column.PropertiesEdit as ComboBoxProperties;
            textProperties.ValidationSettings.Display = Display.None;
            textProperties.DataSource = ViewData["EMPCODE_SELECT"];
            textProperties.TextField = "AllName";
            textProperties.ValueField = "EmpCode";
            textProperties.ValueType = typeof(string);
        });
        settings.Columns.Add(column =>
        {
            column.Caption = Humica.EF.Models.SY.SYSettings.getLabel("Status");
            column.Width = 110;
            column.FieldName = "Status";
        });
        settings.CellEditorInitialize = (s, e) =>
        {
            ASPxEdit editor = (ASPxEdit)e.Editor;
            editor.ValidationSettings.Display = Display.None;
        };
        settings.SettingsBehavior.ColumnResizeMode = ColumnResizeMode.Control;
        settings.Settings.HorizontalScrollBarMode = ScrollBarMode.Visible;
        settings.Settings.VerticalScrollBarMode = ScrollBarMode.Visible;
        settings.Settings.VerticalScrollableHeight = 450;
        settings.SettingsPager.PageSize = 450;
        settings.SettingsBehavior.AllowFocusedRow = true;
        settings.Settings.ShowHeaderFilterButton = true;
        settings.SettingsPopup.HeaderFilter.Height = 200;
        settings.SettingsBehavior.AllowEllipsisInText = true;
        settings.SettingsBehavior.EnableCustomizationWindow = true;
        settings.SettingsDataSecurity.AllowReadUnlistedFieldsFromClientApi = DefaultBoolean.True;

        settings.FormatConditions.AddHighlight("Status", "[Status] = 'OPEN'", GridConditionHighlightFormat.BoldText);
        settings.FormatConditions.AddHighlight("Status", "[Status] = 'APPROVED'", GridConditionHighlightFormat.GreenFillWithDarkGreenText);
        settings.FormatConditions.AddHighlight("Status", "[Status] = 'PENDING'", GridConditionHighlightFormat.YellowFillWithDarkYellowText);

        settings.SettingsAdaptivity.AdaptivityMode = GridViewAdaptivityMode.HideDataCells;
        settings.SettingsAdaptivity.AllowOnlyOneAdaptiveDetailExpanded = true;
        settings.EditFormLayoutProperties.SettingsAdaptivity.AdaptivityMode = FormLayoutAdaptivityMode.SingleColumnWindowLimit;
        settings.EditFormLayoutProperties.SettingsAdaptivity.SwitchToSingleColumnAtWindowInnerWidth = 600;
        settings.SettingsBehavior.EnableCustomizationWindow = true;

    });

    if (ViewData["EditError"] != null)
    {
        grid.SetEditErrorText((string)ViewData["EditError"]);
    }
}
@grid.Bind(Model).GetHtml()

