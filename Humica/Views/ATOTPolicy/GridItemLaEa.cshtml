@{
    var grid = Html.DevExpress().GridView(
       settings =>
       {

           settings.Name = "GridItemLaEa";
           settings.KeyFieldName = "TranNo";
           settings.Width = Unit.Percentage(100);
           settings.SettingsEditing.Mode = GridViewEditingMode.Inline;

           settings.CallbackRouteValues = new { Controller = "ATOTPolicy", Action = "GridItemLaEa" };

           settings.SettingsEditing.AddNewRowRouteValues = new { Controller = "ATOTPolicy", Action = "CreateLaEa" };
           settings.SettingsEditing.UpdateRowRouteValues = new { Controller = "ATOTPolicy", Action = "EditLaEa" };
           settings.SettingsEditing.DeleteRowRouteValues = new { Controller = "ATOTPolicy", Action = "DeleteLaEa" };

           settings.SettingsBehavior.AllowSort = false;
           settings.CommandColumn.Visible = true;
           settings.CommandColumn.ShowDeleteButton = true;

           settings.SettingsContextMenu.Enabled = true;
           settings.SettingsContextMenu.RowMenuItemVisibility.DeleteRow = false;
           settings.SettingsContextMenu.RowMenuItemVisibility.EditRow = false;
           settings.SettingsContextMenu.RowMenuItemVisibility.NewRow = false;
           settings.Settings.ShowHeaderFilterButton = true;
           settings.SettingsPopup.HeaderFilter.Height = 200;

           settings.CommandColumn.ShowNewButtonInHeader = true;
           settings.CommandColumn.ShowCancelButton = true;
           settings.CommandColumn.ShowEditButton = true;
           settings.SettingsBehavior.AllowFocusedRow = true;
           settings.SettingsBehavior.ConfirmDelete = true;
           settings.CommandColumn.FixedStyle = GridViewColumnFixedStyle.Left;

           settings.SettingsPager.PageSizeItemSettings.Visible = true;

           settings.Columns.Add(column =>
           {
               column.Caption = Humica.EF.Models.SY.SYSettings.getLabel("Deduct Type");
               column.Width = 130;
               column.FieldName = "DedType";
               column.ColumnType = MVCxGridViewColumnType.ComboBox;
               var textProperties = column.PropertiesEdit as ComboBoxProperties;
               textProperties.DataSource = ViewData["REQUEST_SELECT"];
               textProperties.TextFormatString = "{0}";
               textProperties.ValueField = "SelectValue";
               textProperties.Columns.Add("SelectText", Humica.EF.Models.SY.SYSettings.getLabel("Description"));
               textProperties.ValueType = typeof(string);
               textProperties.Width = Unit.Percentage(100);

           });
           settings.Columns.Add(column =>
           {
               column.FieldName = "OTFrom";
               column.Width = 130;
               column.Caption = Humica.EF.Models.SY.SYSettings.getLabel("From(Min)");
               column.ColumnType = MVCxGridViewColumnType.SpinEdit;
               var spinEditProperties = column.PropertiesEdit as SpinEditProperties;
               spinEditProperties.Width = Unit.Percentage(100);
               spinEditProperties.DisplayFormatInEditMode = true;
               spinEditProperties.MinValue = 0;
               spinEditProperties.Style.HorizontalAlign = System.Web.UI.WebControls.HorizontalAlign.Right;
           });
           settings.Columns.Add(column =>
           {
               column.FieldName = "OTTo";
               column.Width = 130;
               column.Caption = Humica.EF.Models.SY.SYSettings.getLabel("To(Min)");
               column.ColumnType = MVCxGridViewColumnType.SpinEdit;
               var spinEditProperties = column.PropertiesEdit as SpinEditProperties;
               spinEditProperties.Width = Unit.Percentage(100);
               spinEditProperties.DisplayFormatInEditMode = true;
               spinEditProperties.MinValue = 0;
               spinEditProperties.Style.HorizontalAlign = System.Web.UI.WebControls.HorizontalAlign.Right;
           });
           settings.Columns.Add(column =>
           {
               column.FieldName = "Rate";
               column.Width = 130;
               column.Caption = Humica.EF.Models.SY.SYSettings.getLabel("Rate");
               column.ColumnType = MVCxGridViewColumnType.SpinEdit;
               var spinEditProperties = column.PropertiesEdit as SpinEditProperties;
               spinEditProperties.Width = Unit.Percentage(100);
               spinEditProperties.DisplayFormatInEditMode = true;
               spinEditProperties.MinValue = 0;
               spinEditProperties.Style.HorizontalAlign = System.Web.UI.WebControls.HorizontalAlign.Right;
           });
           settings.Columns.Add(column =>
           {
               column.Caption = Humica.EF.Models.SY.SYSettings.getLabel("Rule Type");
               column.Width = 130;
               column.FieldName = "RuleType";
               column.ColumnType = MVCxGridViewColumnType.ComboBox;
               var textProperties = column.PropertiesEdit as ComboBoxProperties;
               textProperties.DataSource = ViewData["LAEA_TYPE_SELECT"];
               textProperties.TextFormatString = "{0}";
               textProperties.ValueField = "SelectValue";
               textProperties.Columns.Add("SelectText", Humica.EF.Models.SY.SYSettings.getLabel("Description"));
               textProperties.ValueType = typeof(string);
               textProperties.Width = Unit.Percentage(100);

           });
           settings.SettingsSearchPanel.Visible = true;
           settings.SettingsBehavior.ColumnResizeMode = ColumnResizeMode.Control;
           settings.Settings.HorizontalScrollBarMode = ScrollBarMode.Visible;
           settings.Settings.VerticalScrollBarMode = ScrollBarMode.Visible;
           settings.Settings.VerticalScrollableHeight = Humica.EF.MD.SYSession.PageHieigh;
           settings.SettingsBehavior.ConfirmDelete = true;
           settings.SettingsPager.PageSize = 50;
           settings.SettingsBehavior.AllowFocusedRow = true;

           settings.CustomJSProperties = (sender, e) =>
           {
               e.Properties["cpVisibleRowCount"] = (sender as MVCxGridView).VisibleRowCount;
           };

       });

    if (ViewData["EditError"] != null)
    {
        grid.SetEditErrorText((string)ViewData["EditError"]);
    }
}

@grid.Bind(Model).GetHtml()
