@model Humica.Logic.HR.HRAchievmentObject

<script type="text/javascript">

    $(document).ready(function () {
        $('#_btnBackAction').click(function () {
            window.location = "@Humica.EF.Models.SY.SYUrl.getBaseUrl()" + "@ViewData[Humica.EF.Models.SY.SYConstant.CURRENT_URL]";
        });
        $('#_btnSaveActionGrid').click(function () {
            $("form").submit();
        });
        
    });

    function ShowDataEmp() {
        var total = 0;
        $.ajax({
            type: 'post',
            url: _baseUrl + '/HRM/EmployeeInfo/HREmpAchievment/ShowDataEmp',
            data: { 'id': 'TOTAL', 'EmpCode': selectedIDs },
            success: function (data) {
                if (data.MS == "OK") {
                    txtEmpName.SetValue(data.EmpName);
                }
                else {
                    AlertMessage(data.MS);
                }
            },
            error: function (XMLHttpRequest, textStatus, errorThrown) {
                AlertMessage(XMLHttpRequest.responseText);
            }
        });
    }

    function EmpDbRowClick(s, e) {
        s.GetRowValues(s.GetFocusedRowIndex(), 'EmpCode;', OnGetRowValuesEmp);
        cboEmployee.HideDropDown();
    }

    function rowSelected(s, e) {
        EmployeeGridListSelector.GetRowValues(EmployeeGridListSelector.GetFocusedRowIndex(), 'EmpCode;', OnGetRowValuesEmp);
        cboEmployee.HideDropDown();
    }

    function OnGetRowValuesEmp(values) {
        cboEmployee.SetValue(values[0]);
        selectedIDs = values[0];
        ShowDataEmp();
    }

</script>

@{ 
    Html.DevExpress().FormLayout(settings =>
    {

        settings.Name = "Achievement";
        settings.AlignItemCaptionsInAllGroups = true;
        // settings.Width = Unit.Percentage(100);

        settings.Items.AddGroupItem(m => Model.Header, g =>
        {
            g.ColCount = 2;
            g.GroupBoxDecoration = GroupBoxDecoration.None;
            g.SettingsItemCaptions.HorizontalAlign = FormLayoutHorizontalAlign.Left;
            g.Items.Add(m =>
            {
                m.Caption = Humica.EF.Models.SY.SYSettings.getLabel("EmpCode");
            })
            .SetNestedContent(() =>
            {
                Html.DevExpress().DropDownEditFor(i => i.HeaderStaff.EmpCode, s =>
                {
                    s.Properties.ClientInstanceName = "cboEmployee";
                    s.Properties.ValidationSettings.ErrorDisplayMode = ErrorDisplayMode.ImageWithTooltip;
                    s.Properties.ValidationSettings.SetFocusOnError = true;
                    s.Properties.ValidationSettings.ErrorText = "*";
                    s.SetDropDownWindowTemplateContent(c =>
                    {
                        Html.RenderPartial(Humica.Models.SY.SYListFilter.ListFilterViewEmployee);

                        ViewContext.Writer.Write("<div style=\"padding: 6px; height: 24px;\">");

                        @Html.DevExpress().Button(
                          buttonSettings =>
                          {
                              buttonSettings.Name = "buttonSelect";
                              buttonSettings.Text = Humica.EF.Models.SY.SYSettings.getLabel("Ok");
                              buttonSettings.Style.Add("float", "right");
                              buttonSettings.Style.Add("margin", "0px 3px");
                              buttonSettings.ClientSideEvents.Click = "rowSelected";
                              buttonSettings.Height = 25;
                          }
                              ).Render();
                        ViewContext.Writer.Write("</div>");

                    });
                    s.Properties.AnimationType = AnimationType.None;
                }).Render();
            });
            g.Items.Add(m =>
            {
                m.Caption = Humica.EF.Models.SY.SYSettings.getLabel("EmpName");
            })
            .SetNestedContent(() =>
            {
                Html.DevExpress().TextBoxFor(i => i.Header.EmpName, s =>
                {
                    s.Properties.ClientInstanceName = "txtEmpName";
                    s.ReadOnly = true;
                    s.Properties.ValidationSettings.ErrorDisplayMode = ErrorDisplayMode.ImageWithTooltip;
                    s.Properties.ValidationSettings.SetFocusOnError = true;
                    s.Properties.ValidationSettings.ErrorText = "*";
                }).Render();
            });
            g.Items.Add(m =>
            {
                m.Caption = Humica.EF.Models.SY.SYSettings.getLabel("FromDate");
            })
            .SetNestedContent(() =>
            {
                Html.DevExpress().DateEditFor(i => i.Header.FromDate, s =>
                {
                    s.ShowModelErrors = true;
                    //s.Properties.ClientInstanceName = "txtFromDate";
                    s.Properties.ValidationSettings.ErrorDisplayMode = ErrorDisplayMode.ImageWithTooltip;
                    s.Properties.ValidationSettings.SetFocusOnError = true;
                    s.Properties.NullText = ViewData[Humica.EF.SYSConstant.DATE_FORMAT].ToString();
                    s.Properties.EditFormatString = ViewData[Humica.EF.SYSConstant.DATE_FORMAT].ToString();
                    s.Properties.DisplayFormatString = ViewData[Humica.EF.SYSConstant.DATE_FORMAT].ToString();
                    s.Properties.ValidationSettings.ErrorText = "*";
                }).Render();
            });
            g.Items.Add(m =>
            {
                m.Caption = Humica.EF.Models.SY.SYSettings.getLabel("ToDate");
            })
            .SetNestedContent(() =>
            {
                Html.DevExpress().DateEditFor(i => i.Header.ToDate, s =>
                {
                    s.ShowModelErrors = true;
                    //s.Properties.ClientInstanceName = "txtToDate";
                    s.Properties.ValidationSettings.ErrorDisplayMode = ErrorDisplayMode.ImageWithTooltip;
                    s.Properties.ValidationSettings.SetFocusOnError = true;
                    s.Properties.NullText = ViewData[Humica.EF.SYSConstant.DATE_FORMAT].ToString();
                    s.Properties.EditFormatString = ViewData[Humica.EF.SYSConstant.DATE_FORMAT].ToString();
                    s.Properties.DisplayFormatString = ViewData[Humica.EF.SYSConstant.DATE_FORMAT].ToString();
                    s.Properties.ValidationSettings.ErrorText = "*";
                }).Render();
            });
            g.Items.Add(m =>
            {
                m.Caption = Humica.EF.Models.SY.SYSettings.getLabel("Description");
                m.ColumnSpan = 2;
            })
            .SetNestedContent(() =>
            {
                Html.DevExpress().TextBoxFor(i => i.Header.Description, s =>
                {
                    s.Width = Unit.Percentage(100);
                    s.ShowModelErrors = true;
                    //s.Properties.ClientInstanceName = "txtDescription";
                    s.Properties.ValidationSettings.ErrorDisplayMode = ErrorDisplayMode.ImageWithTooltip;
                    s.Properties.ValidationSettings.SetFocusOnError = true;
                    s.Properties.ValidationSettings.ErrorText = "*";
                }).Render();
            });
            g.Items.Add(m =>
            {
                m.Caption = Humica.EF.Models.SY.SYSettings.getLabel("Remark");
                m.ColumnSpan = 2;
            })
            .SetNestedContent(() =>
            {
                Html.DevExpress().TextBoxFor(i => i.Header.Remark, s =>
                {
                    s.Width = Unit.Percentage(100);
                    s.ShowModelErrors = true;
                    //s.Properties.ClientInstanceName = "txtRemark";
                    s.Properties.ValidationSettings.ErrorDisplayMode = ErrorDisplayMode.ImageWithTooltip;
                    s.Properties.ValidationSettings.SetFocusOnError = true;
                    s.Properties.ValidationSettings.ErrorText = "*";
                }).Render();
            });
            g.Items.Add(m =>
            {
                m.Caption = Humica.EF.Models.SY.SYSettings.getLabel("Attach File");
                m.ColSpan = 2;
            })
            .SetNestedContent(() =>
            {
                Html.DevExpress().UploadControl(ss =>
                {
                    ss.ShowProgressPanel = true;
                    ss.CallbackRouteValues = new { Controller = "HREmpAchievment", Action = "UploadControlCallbackActionImage" };
                    ss.Name = "UploadControl";
                    ss.UploadMode = UploadControlUploadMode.Auto;
                    ss.AutoStartUpload = true;
                    ss.Width = 120;
                    ss.DialogTriggerID = "externalDropZone";
                    ss.AdvancedModeSettings.EnableDragAndDrop = false;
                    ss.AdvancedModeSettings.EnableMultiSelect = false;
                    ss.ShowTextBox = false;
                    ss.ShowUploadButton = false;
                    ss.ShowAddRemoveButtons = true;
                    ss.ShowProgressPanel = true;
                    ss.ShowClearFileSelectionButton = true;
                    ss.AdvancedModeSettings.EnableFileList = true;
                    ss.AdvancedModeSettings.FileListPosition = UploadControlFileListPosition.Top;
                    ss.AdvancedModeSettings.ExternalDropZoneID = "externalDropZone";
                    ss.AdvancedModeSettings.DropZoneText = "";
                    ss.ValidationSettings.MaxFileSize = 4194304;
                    ss.BrowseButton.Image.IconID = IconID.ActionsNew16x16;
                    ss.UploadButton.Text = String.Empty;
                    ss.ValidationSettings.AllowedFileExtensions = new string[] { ".jpg", ".jpeg", ".jpe", ".gif", ".bmp", ".png", ".pdf", ".doc", ".docx", ".xls", ".xlsx" };
                    ss.ValidationSettings.ErrorStyle.CssClass = "validationMessage";
                    ss.BrowseButton.Text = Humica.EF.Models.SY.SYSettings.getLabel("");
                    ss.ClientSideEvents.FileUploadComplete = "completedUploadFileItem";
                }).Render();

                Html.DevExpress().HyperLink(s =>
                {
                    s.Name = "file_uploaded";
                    s.ToolTip = "File";
                    s.ClientVisible = false;
                    s.Properties.Target = "_BLANK";
                    s.Properties.Text = Humica.EF.Models.SY.SYSettings.getLabel("View");
                }).GetHtml();
            });
        });
    }).GetHtml();
}


