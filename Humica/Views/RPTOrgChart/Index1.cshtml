<script type="text/javascript">
    $(document).ready(function () {
        $("#_btnActionRun").click(function () {
            $('form').submit();
        });
    });
    var departments = @Html.Raw(Json.Encode(ViewBag.DepartmentInfo));
    function onCustomShapeCreateTemplate(s, e) {
        var department = getDepartment(e.item.key);
        var svgNS = "http://www.w3.org/2000/svg"
        var svgEl = document.createElementNS(svgNS, "svg");
        svgEl.setAttribute("class", "template");
        e.container.appendChild(svgEl);
        var textEl = document.createElementNS(svgNS, "text");
        textEl.setAttribute("class", "template-name");
        textEl.setAttribute("x", "50%");
        textEl.setAttribute("y", "35%");
        textEl.textContent = department.Designation;
        svgEl.appendChild(textEl);
        var textEName = document.createElementNS(svgNS, "text");
        textEName.setAttribute("class", "template-name");
        textEName.setAttribute("x", "50%");
        textEName.setAttribute("y", "60%");
        textEName.textContent = department.Name;
        svgEl.appendChild(textEName);
        var btnEl = document.createElementNS(svgNS, "text");
        btnEl.setAttribute("class", "template-button");
        btnEl.setAttribute("x", "50%");
        btnEl.setAttribute("y", "80%");
        btnEl.textContent = "Show Details";
        btnEl.onclick = function() { showInfo(department); };
        svgEl.appendChild(btnEl);
    }
    function getDepartment(id) {
        return departments.filter(function (d) { return d.EmpCode === id; })[0];
    }
    function showInfo(department) {
        //var content = "<p>Department Name: <b>" + department.DepartmentName + "</b></p>" +
        //    "<p>Budget: <b>$" + department.Budget + "</b></p>" +
        //    "<p>Location: <b>" + department.Location + "</b></p>" +
        //    "<p>Phone: <b>" + department.Phone1 + "</b></p>" +
        //    "<p>Fax: <b>" + department.Phone2 + "</b></p>";
        var content = "<p>Position: <b>" + department.Designation + "</b></p>" +
        "<p>Employee Name: <b>" + department.Name + "</b></p>";
        popup.SetContentHTML(content);
        popup.Show();
    }
</script>
<style type="text/css">
    .diagram .template .template-name {
        font-weight: bold;
    }

    .diagram .template .template-button {
        cursor: pointer;
        font-size: 8pt;
        fill: navy;
    }

        .diagram .template .template-button:hover {
            text-decoration: underline;
        }

    .popup p {
        margin: 0 0 10px;
    }
</style>
@*@model Humica.Logic.MD.MDOrgChart*@
@*@Html.Partial("FREmpoyeeReport", Model)*@

@Html.DevExpress().Diagram(settings =>
{
    settings.Name = "diagram";
    settings.ControlStyle.CssClass = "diagram";
    settings.Width = Unit.Percentage(100);
    settings.Height = 600;
    settings.SimpleView = true;
    settings.ReadOnly = true;

    settings.CustomShapes.AddRange(ViewBag.DepartmentShapes);


    //settings.ClientSideEvents.CustomShapeCreateTemplate = "onCustomShapeCreateTemplate";

    //settings.BatchUpdateRouteValues = new { Controller = "DiagramItems", Action = "TemplatesUpdate" };

    settings.Mappings.Node.Key = "ID";
    settings.Mappings.Node.Text = "";
    settings.Mappings.Node.Type = "Type";
    settings.Mappings.Node.ParentKey = "ParentID";
    settings.Mappings.Node.ImageUrl = "Images";

    settings.SettingsAutoLayout.Type = DevExpress.Web.ASPxDiagram.DiagramAutoLayout.Tree;

}).Bind(Model).GetHtml()

@Html.DevExpress().PopupControl(settings =>
{
    settings.Name = "popup";
    settings.ControlStyle.CssClass = "popup";
    settings.Modal = true;
    settings.PopupHorizontalAlign = PopupHorizontalAlign.WindowCenter;
    settings.PopupVerticalAlign = PopupVerticalAlign.WindowCenter;
    settings.Width = 300;
    settings.Height = 220;
    settings.HeaderText = "Information";
}).GetHtml()
