@{
    var gridExtension = Html.DevExpress().GridView(
           settings =>
           {
               settings.Name = "PurchaseRequisitionGrid";
               settings.KeyFieldName = "RequestNumber";

               settings.Width = Unit.Percentage(100);
               settings.SettingsSearchPanel.Visible = true;
               settings.CallbackRouteValues = new
               {
                   Controller = "PRIntegrationPO",
                   Action = "PartialProcess" };

               settings.SettingsBehavior.ConfirmDelete = true;

               settings.Settings.ShowGroupPanel = false;
               settings.Settings.ShowFooter = true;
               settings.SettingsContextMenu.Enabled = true;
               settings.SettingsContextMenu.RowMenuItemVisibility.DeleteRow = false;
               settings.SettingsContextMenu.RowMenuItemVisibility.EditRow = false;
               settings.SettingsContextMenu.RowMenuItemVisibility.NewRow = false;
               settings.Settings.ShowHeaderFilterButton = true;
               settings.SettingsPopup.HeaderFilter.Height = 200;
               settings.CommandColumn.ShowSelectCheckbox = true;
               settings.CommandColumn.FixedStyle = GridViewColumnFixedStyle.Left;
               settings.CommandColumn.Width = 50;

               settings.CommandColumn.Width = 50;

               settings.CommandColumn.SelectAllCheckboxMode = GridViewSelectAllCheckBoxMode.AllPages;
               settings.Columns.Add(column =>
               {
                   column.Caption = Humica.EF.Models.SY.SYSettings.getLabel(ViewData[Humica.EF.SYSConstant.SCREEN_ID].ToString(), "...");
                   column.Width = 80;
                   column.SetDataItemTemplateContent(container =>
                   {
                       Html.DevExpress().HyperLink(hyperlink =>
                       {
                           hyperlink.Name = "_hl" + container.VisibleIndex;
                           hyperlink.Properties.Text = Humica.EF.Models.SY.SYSettings.getLabel(ViewData[Humica.EF.SYSConstant.SCREEN_ID].ToString(), "Create");
                           hyperlink.ToolTip = Convert.ToString(DataBinder.Eval(container.DataItem, "InMonth"));
                           hyperlink.NavigateUrl = Humica.EF.Models.SY.SYUrl.getBaseUrl()
                               + ViewData[Humica.EF.Models.SY.SYConstant.CURRENT_URL]
                               + "Create?InYear=" + Convert.ToString(DataBinder.Eval(container.DataItem, "InYear"))
                               + "&InMonth=" + Convert.ToString(DataBinder.Eval(container.DataItem, "InMonth"))
                               + "&Branch=" + Convert.ToString(DataBinder.Eval(container.DataItem, "Branch"))
                               + "&Warehouse=" + Convert.ToString(DataBinder.Eval(container.DataItem, "Warehouse"))
                               + "&Project=" + Convert.ToString(DataBinder.Eval(container.DataItem, "Project"))
                               + "&DocType=" + Convert.ToString(DataBinder.Eval(container.DataItem, "DocType"))
                               ;
                           //hyperlink.Properties.ClientSideEvents.Click = "ShowSlip";
                       }).Render();
                   });
               });
               //settings.Columns.Add(column =>
               //{
               //    column.Caption = Humica.EF.Models.SY.SYSettings.getLabel("RequestNumber");
               //    column.Width = 130;

               //    column.FieldName = "RequestNumber";
               //    column.ColumnType = MVCxGridViewColumnType.TextBox;
               //});


               settings.Columns.Add(column =>
               {
                   column.Caption = Humica.EF.Models.SY.SYSettings.getLabel("Branch");

                   column.Width = 200;
                   column.FieldName = "Branch";
                   column.ColumnType = MVCxGridViewColumnType.TextBox;
               });
               settings.Columns.Add(column =>
               {
                   column.Caption = Humica.EF.Models.SY.SYSettings.getLabel("Warehouse");

                   column.Width = 200;
                   column.FieldName = "Warehouse";
                   column.ColumnType = MVCxGridViewColumnType.TextBox;
               });
               settings.Columns.Add(column =>
               {
                   column.Caption = Humica.EF.Models.SY.SYSettings.getLabel("Project");

                   column.Width = 200;
                   column.FieldName = "Project";
                   column.ColumnType = MVCxGridViewColumnType.TextBox;
               });

               settings.Columns.Add(column =>
               {
                   column.Caption = Humica.EF.Models.SY.SYSettings.getLabel("InYear");
                   column.FieldName = "InYear";
                   column.ColumnType = MVCxGridViewColumnType.TextBox;
                   column.Width = 150;
               });

               settings.Columns.Add(column =>
               {
                   column.Width = 120;
                   column.Caption = Humica.EF.Models.SY.SYSettings.getLabel("InMonth");
                   column.FieldName = "InMonth";
                   column.ColumnType = MVCxGridViewColumnType.TextBox;
               });
               settings.Columns.Add(column =>
               {
                   column.Caption = Humica.EF.Models.SY.SYSettings.getLabel("Amount");

                   column.FieldName = "Amount";
                   column.ColumnType = MVCxGridViewColumnType.SpinEdit;
                   column.Width = 140;
                   var spinEditProperties = column.PropertiesEdit as SpinEditProperties;
                   spinEditProperties.DisplayFormatString = "N2";
               });
               settings.Columns.Add(column =>
               {
                   column.Caption = Humica.EF.Models.SY.SYSettings.getLabel("Document Type");

                   column.Width = 200;
                   column.FieldName = "DocType";
                   column.ColumnType = MVCxGridViewColumnType.TextBox;
               });
               
               settings.SettingsBehavior.EnableCustomizationWindow = false;

               settings.FormatConditions.AddHighlight("Status", "[Status] = 'RELEASED'", GridConditionHighlightFormat.BoldText);
               settings.FormatConditions.AddHighlight("Status", "[Status] = 'RELEASED'", GridConditionHighlightFormat.YellowFillWithDarkYellowText);


               settings.PreRender = (s, e) =>
               {

               };



               settings.SettingsPager.Position = PagerPosition.Bottom;
               settings.SettingsPager.FirstPageButton.Visible = true;
               settings.SettingsPager.LastPageButton.Visible = true;

               settings.SettingsBehavior.AllowFocusedRow = true;

               settings.Settings.HorizontalScrollBarMode = ScrollBarMode.Visible;
               settings.Settings.VerticalScrollBarMode = ScrollBarMode.Visible;
               settings.Settings.VerticalScrollableHeight = Humica.EF.MD.SYSession.DealerPageHeigh;

               settings.SettingsBehavior.AllowFocusedRow = true;
               settings.SettingsBehavior.ColumnResizeMode = ColumnResizeMode.Control;
               settings.SettingsBehavior.AllowEllipsisInText = true;
               //settings.ClientSideEvents.SelectionChanged = "OnSelectionChanged";

               settings.SettingsPager.Visible = true;
               settings.SettingsPager.PageSizeItemSettings.Visible = false;
               settings.SettingsPager.PageSize = 122;

               settings.CustomJSProperties = (s, e) =>
               {
                   ASPxGridView grid = (ASPxGridView)s;
                   Session[Humica.EF.SYSConstant.GRID_VIEW_LAYOUT_DETAIL + ViewData[Humica.EF.SYSConstant.SCREEN_ID].ToString()] = grid.AllColumns;
                   Session[Humica.EF.SYSConstant.GRID_VIEW_SOURCE_DETAIL + ViewData[Humica.EF.SYSConstant.SCREEN_ID].ToString()] = grid.DataSource;

                   e.Properties["cpVisibleRowCount"] = (s as MVCxGridView).VisibleRowCount;

               };
           });
}

@gridExtension.Bind(Model).GetHtml()


