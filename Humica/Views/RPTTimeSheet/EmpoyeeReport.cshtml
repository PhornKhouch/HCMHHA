@model Humica.Core.FT.FTFilterEmployee

@Html.DevExpress().FormLayout(settings =>
{
    int width = 180;
    settings.Name = "FTGernalAccounting";
    settings.AlignItemCaptionsInAllGroups = true;

    settings.Items.AddGroupItem(m => Model, g =>
    {
        g.ColCount = 2;
        g.GroupBoxDecoration = GroupBoxDecoration.None;
        g.SettingsItemCaptions.HorizontalAlign = FormLayoutHorizontalAlign.Left;
        g.Items.Add(m =>
        {
            m.Caption = Humica.EF.Models.SY.SYSettings.getLabel("Company");
        })
   .SetNestedContent(() =>
   {
       Html.DevExpress().DropDownEditFor(i => Model.Company, s =>
       {
           s.Width = Unit.Percentage(87);
           s.Properties.ClientInstanceName = "checkComboBoxCompany";
           //s.SkinID = "CheckComboBox";
           //s.ReadOnly = false;
           s.SetDropDownWindowTemplateContent(c =>
           {
               Html.RenderPartial(Humica.Models.SY.SYListFilter.ListFilterViewCompany);

               ViewContext.Writer.Write("<div style=\"padding: 6px; height: 24px;\">");
               @Html.DevExpress().Button(buttonSettings =>
               {
                   buttonSettings.Name = "buttonCloseCompany";
                   buttonSettings.Text = Humica.EF.Models.SY.SYSettings.getLabel("Ok");
                   buttonSettings.Style.Add("float", "right");
                   buttonSettings.Style.Add("padding", "0px 2px");
                   buttonSettings.ClientSideEvents.Click = "function(s, e){ checkComboBoxCompany.HideDropDown(); }";
                   buttonSettings.Height = 26;
               }).Render();

               @Html.DevExpress().Button(buttonSettings =>
               {
                   buttonSettings.Name = "buttonClearCompany";
                   buttonSettings.Text = Humica.EF.Models.SY.SYSettings.getLabel("Clear");
                   buttonSettings.Style.Add("float", "right");
                   buttonSettings.Style.Add("margin", "0px 3px");
                   buttonSettings.ClientSideEvents.Click = "clearSelectedCompany";
                   buttonSettings.Height = 26;
               }).Render();
               ViewContext.Writer.Write("</div>");

           });
           s.Properties.AnimationType = AnimationType.None;
       }).Render();
   });
        g.Items.Add(m =>
        {
            m.Caption = Humica.EF.Models.SY.SYSettings.getLabel("Branch") + "*";
        })
            .SetNestedContent(() =>
            {
                Html.DevExpress().DropDownEditFor(i => Model.Branch, s =>
                {
                    s.Width = Unit.Percentage(87);
                    s.Properties.ClientInstanceName = "checkComboBoxBranch";
                    //s.SkinID = "CheckComboBox";
                    //s.ReadOnly = true;
                    s.SetDropDownWindowTemplateContent(c =>
                    {
                        Html.RenderPartial(Humica.Models.SY.SYListFilter.ListFilterViewBranch);

                        ViewContext.Writer.Write("<div style=\"padding: 6px; height: 24px;\">");
                        @Html.DevExpress().Button(buttonSettings =>
                        {
                            buttonSettings.Name = "buttonCloseBranch";
                            buttonSettings.Text = Humica.EF.Models.SY.SYSettings.getLabel("Ok");
                            buttonSettings.Style.Add("float", "right");
                            buttonSettings.Style.Add("padding", "0px 2px");
                            buttonSettings.ClientSideEvents.Click = "function(s, e){ checkComboBoxBranch.HideDropDown(); }";
                            buttonSettings.Height = 26;
                        }).Render();

                        @Html.DevExpress().Button(buttonSettings =>
                        {
                            buttonSettings.Name = "buttonClearBranch";
                            buttonSettings.Text = Humica.EF.Models.SY.SYSettings.getLabel("Clear");
                            buttonSettings.Style.Add("float", "right");
                            buttonSettings.Style.Add("margin", "0px 3px");
                            buttonSettings.ClientSideEvents.Click = "clearSelectedBranch";
                            buttonSettings.Height = 26;
                        }).Render();
                        ViewContext.Writer.Write("</div>");

                    });
                    s.Properties.AnimationType = AnimationType.None;
                }).Render();
            });
        g.Items.Add(m =>
        {
            m.Caption = Humica.EF.Models.SY.SYSettings.getLabel("Division");
        })
           .SetNestedContent(() =>
           {
               Html.DevExpress().ComboBoxFor(i => Model.Division, s =>
               {
                   s.ShowModelErrors = true;
                   s.Properties.ValidationSettings.ErrorDisplayMode = ErrorDisplayMode.ImageWithTooltip;
                   s.Properties.ValidationSettings.SetFocusOnError = true;
                   s.Properties.ValidationSettings.ErrorText = "*";
                   s.Properties.TextFormatString = "{0}";
                   s.Properties.ValueField = "Code";
                   s.Properties.TextField = "Description";
                   s.Properties.NullText = Humica.EF.Models.SY.SYSettings.getLabel("_SELECT");
               }).BindList(ViewData["DIVISION_SELECT"]).Render();
           });
        g.Items.Add(m =>
        {
            m.Caption = Humica.EF.Models.SY.SYSettings.getLabel("Department");
        })
            .SetNestedContent(() =>
            {
                Html.DevExpress().ComboBoxFor(i => Model.Department, s =>
                {
                    s.ShowModelErrors = true;
                    s.Properties.ValidationSettings.ErrorDisplayMode = ErrorDisplayMode.ImageWithTooltip;
                    s.Properties.ValidationSettings.SetFocusOnError = true;
                    s.Properties.ValidationSettings.ErrorText = "*";
                    s.Properties.TextFormatString = "{0}";
                    s.Properties.ValueField = "Code";
                    s.Properties.TextField = "Description";
                    s.Properties.NullText = Humica.EF.Models.SY.SYSettings.getLabel("_SELECT");
                }).BindList(ViewData["DEPARTMENT_SELECT"]).Render();
            });
        g.Items.Add(m =>
        {
            m.Caption = Humica.EF.Models.SY.SYSettings.getLabel("Section");
        })
            .SetNestedContent(() =>
            {
                Html.DevExpress().ComboBoxFor(i => Model.Section, s =>
                {
                    s.ShowModelErrors = true;
                    s.Properties.ValidationSettings.ErrorDisplayMode = ErrorDisplayMode.ImageWithTooltip;
                    s.Properties.ValidationSettings.SetFocusOnError = true;
                    s.Properties.ValidationSettings.ErrorText = "*";
                    s.Properties.TextFormatString = "{0}";
                    s.Properties.ValueField = "Code";
                    s.Properties.TextField = "Description";
                    s.Properties.NullText = Humica.EF.Models.SY.SYSettings.getLabel("_SELECT");
                }).BindList(ViewData["SECTION_SELECT"]).Render();
            });
        g.Items.Add(m =>
        {
            m.Caption = Humica.EF.Models.SY.SYSettings.getLabel("Position");
        })
            .SetNestedContent(() =>
            {
                Html.DevExpress().ComboBoxFor(i => Model.Position, s =>
                {
                    s.ShowModelErrors = true;
                    s.Properties.ValidationSettings.ErrorDisplayMode = ErrorDisplayMode.ImageWithTooltip;
                    s.Properties.ValidationSettings.SetFocusOnError = true;
                    s.Properties.ValidationSettings.ErrorText = "*";
                    s.Properties.TextFormatString = "{0}";
                    s.Properties.ValueField = "Code";
                    s.Properties.TextField = "Description";
                    s.Properties.NullText = Humica.EF.Models.SY.SYSettings.getLabel("_SELECT");
                }).BindList(ViewData["POSITION_SELECT"]).Render();
            });
        g.Items.Add(m =>
        {
            m.Caption = Humica.EF.Models.SY.SYSettings.getLabel("LevelCode");
        })
            .SetNestedContent(() =>
            {
                Html.DevExpress().ComboBoxFor(i => Model.Level, s =>
                {
                    s.ShowModelErrors = true;
                    s.Properties.ValidationSettings.ErrorDisplayMode = ErrorDisplayMode.ImageWithTooltip;
                    s.Properties.ValidationSettings.SetFocusOnError = true;
                    s.Properties.ValidationSettings.ErrorText = "*";
                    s.Properties.TextFormatString = "{0}";
                    s.Properties.ValueField = "Code";
                    s.Properties.TextField = "Description";
                    s.Properties.NullText = Humica.EF.Models.SY.SYSettings.getLabel("_SELECT");
                }).BindList(ViewData["LEVEL_SELECT"]).Render();
            });
        g.Items.Add(m =>
        {
            m.Caption = Humica.EF.Models.SY.SYSettings.getLabel("EmpCode");
        })
         .SetNestedContent(() =>
         {
             Html.DevExpress().DropDownEditFor(i => Model.EmpCode, s =>
             {
                 s.Width = Unit.Percentage(87);
                 s.Properties.ClientInstanceName = "checkComboBoxEmpCode";
                 //s.SkinID = "CheckComboBox";
                 //s.ReadOnly = true;
                 s.SetDropDownWindowTemplateContent(c =>
                 {
                     Html.RenderPartial(Humica.Models.SY.SYListFilter.ListFilterViewEmpReport);

                     ViewContext.Writer.Write("<div style=\"padding: 6px; height: 24px;\">");
                     @Html.DevExpress().Button(buttonSettings =>
                     {
                         buttonSettings.Name = "buttonCloseEmpCode";
                         buttonSettings.Text = Humica.EF.Models.SY.SYSettings.getLabel("Ok");
                         buttonSettings.Style.Add("float", "right");
                         buttonSettings.Style.Add("padding", "0px 2px");
                         buttonSettings.ClientSideEvents.Click = "function(s, e){ checkComboBoxEmpCode.HideDropDown(); }";
                         buttonSettings.Height = 26;
                     }).Render();

                     @Html.DevExpress().Button(buttonSettings =>
                     {
                         buttonSettings.Name = "buttonClearEmpCode";
                         buttonSettings.Text = Humica.EF.Models.SY.SYSettings.getLabel("Clear");
                         buttonSettings.Style.Add("float", "right");
                         buttonSettings.Style.Add("margin", "0px 3px");
                         buttonSettings.ClientSideEvents.Click = "clearSelectedEmpCode";
                         buttonSettings.Height = 26;
                     }).Render();
                     ViewContext.Writer.Write("</div>");

                 });
                 s.Properties.AnimationType = AnimationType.None;
             }).Render();
         });
        g.Items.Add(m =>
        {
            m.Caption = Humica.EF.Models.SY.SYSettings.getLabel("From Date");
        })
       .SetNestedContent(() =>
       {
           Html.DevExpress().DateEditFor(i => Model.FromDate, s =>
           {
               s.ShowModelErrors = true;
               s.Properties.ValidationSettings.ErrorDisplayMode = ErrorDisplayMode.ImageWithTooltip;
               s.Properties.ValidationSettings.SetFocusOnError = true;
               s.Properties.ValidationSettings.ErrorText = "*";
               s.Properties.NullText = ViewData[Humica.EF.SYSConstant.DATE_FORMAT].ToString();
               s.Properties.EditFormatString = ViewData[Humica.EF.SYSConstant.DATE_FORMAT].ToString();
               s.Properties.DisplayFormatString = ViewData[Humica.EF.SYSConstant.DATE_FORMAT].ToString();
           }).Render();
       });
        g.Items.Add(m =>
        {
            m.Caption = Humica.EF.Models.SY.SYSettings.getLabel("To Date");
        })
          .SetNestedContent(() =>
          {
              Html.DevExpress().DateEditFor(i => Model.ToDate, s =>
              {
                  s.ShowModelErrors = true;
                  s.Properties.ValidationSettings.ErrorDisplayMode = ErrorDisplayMode.ImageWithTooltip;
                  s.Properties.ValidationSettings.SetFocusOnError = true;
                  s.Properties.ValidationSettings.ErrorText = "*";
                  s.Properties.NullText = ViewData[Humica.EF.SYSConstant.DATE_FORMAT].ToString();
                  s.Properties.EditFormatString = ViewData[Humica.EF.SYSConstant.DATE_FORMAT].ToString();
                  s.Properties.DisplayFormatString = ViewData[Humica.EF.SYSConstant.DATE_FORMAT].ToString();
              }).Render();
          });


    });

}).Bind(Model).GetHtml()