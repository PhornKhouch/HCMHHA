@model Humica.Training.Setup.ClsTRELearningAnswer
@{
    var grid = Html.DevExpress().GridView(
    settings =>
    {
        Html.EnableClientValidation();
        Html.EnableUnobtrusiveJavaScript();
        settings.Name = "_GridItem";
        settings.KeyFieldName = "ID";

        settings.Width = Unit.Percentage(100);
        settings.SettingsEditing.Mode = GridViewEditingMode.Inline;

        settings.CallbackRouteValues = new { Controller = "TRELearningAnswer", Action = "_GridItem" };

        settings.SettingsEditing.AddNewRowRouteValues = new { Controller = "TRELearningAnswer", Action = "Create" };
        settings.SettingsEditing.UpdateRowRouteValues = new { Controller = "TRELearningAnswer", Action = "Edit" };
        settings.SettingsEditing.DeleteRowRouteValues = new { Controller = "TRELearningAnswer", Action = "Delete" };

        settings.SettingsBehavior.AllowSort = true;

        settings.CommandColumn.Visible = true;
        settings.CommandColumn.ShowDeleteButton = true;

        settings.CommandColumn.ShowNewButtonInHeader = true;
        settings.CommandColumn.ShowCancelButton = true;
        settings.CommandColumn.ShowEditButton = true;
        settings.SettingsBehavior.AllowFocusedRow = true;
        settings.SettingsBehavior.ConfirmDelete = true;
        settings.SettingsText.ConfirmDelete = " Do you want to delete? ";
        settings.CommandColumn.FixedStyle = GridViewColumnFixedStyle.Left;

        settings.Columns.Add(column =>
        {
            column.FieldName = "CourseCode";
            column.Caption = Humica.EF.Models.SY.SYSettings.getLabel(ViewData[Humica.EF.SYSConstant.SCREEN_ID].ToString(), "Course") +"*";
            column.ColumnType = MVCxGridViewColumnType.ComboBox;
            column.Width = 250;
            var cboProperties = column.PropertiesEdit as ComboBoxProperties;
            cboProperties.DropDownStyle = DropDownStyle.DropDownList;
            cboProperties.IncrementalFilteringMode = IncrementalFilteringMode.Contains;
            cboProperties.DataSource = ViewData["Course_List"];
            cboProperties.TextField = "Description";
            cboProperties.ValueField = "Code";
            cboProperties.TextFormatString = "{0}:{1}";
            cboProperties.Columns.Add("Code", Humica.EF.Models.SY.SYSettings.getLabel("Code"), 120);
            cboProperties.Columns.Add("Description", Humica.EF.Models.SY.SYSettings.getLabel("Description"), 250);
            cboProperties.ClientSideEvents.SelectedIndexChanged = "changeCourse";
            cboProperties.ValueType = typeof(string);
            cboProperties.Width = Unit.Percentage(100);
            column.FixedStyle = GridViewColumnFixedStyle.Left;
        });

        settings.Columns.Add(column =>
        {
            column.FieldName = "TrainingType";
            column.Width = 200;
            column.Caption = Humica.EF.Models.SY.SYSettings.getLabel("TrainingType") + "*";
            column.ColumnType = MVCxGridViewColumnType.ComboBox;
            var cboProperties = column.PropertiesEdit as ComboBoxProperties;
            cboProperties.DropDownStyle = DropDownStyle.DropDownList;
            cboProperties.IncrementalFilteringMode = IncrementalFilteringMode.Contains;
            cboProperties.DataSource = Model.ListTrainType;
            cboProperties.TextField = "Description";
            cboProperties.ValueField = "Code";
            cboProperties.TextFormatString = "{0}:{1}";
            cboProperties.Columns.Add("Code", Humica.EF.Models.SY.SYSettings.getLabel("Code"), 80);
            cboProperties.Columns.Add("Description", Humica.EF.Models.SY.SYSettings.getLabel("Description"), 250);
            cboProperties.ClientSideEvents.SelectedIndexChanged = "changeTrainingType";
            cboProperties.ValueType = typeof(string);
            cboProperties.Width = Unit.Percentage(100);
            column.FixedStyle = GridViewColumnFixedStyle.Left;
        });

        settings.Columns.Add(column =>
        {
            column.FieldName = "Topic";
            column.Caption = Humica.EF.Models.SY.SYSettings.getLabel(ViewData[Humica.EF.SYSConstant.SCREEN_ID].ToString(), "Topic/Subject") + "*";
            column.ColumnType = MVCxGridViewColumnType.ComboBox;
            column.Width = 150;
            var cboProperties = column.PropertiesEdit as ComboBoxProperties;
            cboProperties.DropDownStyle = DropDownStyle.DropDownList;
            cboProperties.IncrementalFilteringMode = IncrementalFilteringMode.Contains;
            cboProperties.DataSource = Model.ListModule;
            cboProperties.TextField = "Description";
            cboProperties.ValueField = "Topic";
            cboProperties.TextFormatString = "{0}:{1}";
            cboProperties.Columns.Add("Topic", Humica.EF.Models.SY.SYSettings.getLabel("Code"), 80);
            cboProperties.Columns.Add("Description", Humica.EF.Models.SY.SYSettings.getLabel("Description"), 250);
            cboProperties.ClientSideEvents.SelectedIndexChanged = "changeModule";
            cboProperties.ValueType = typeof(string);
            cboProperties.Width = Unit.Percentage(100);
            column.FixedStyle = GridViewColumnFixedStyle.Left;
        });

        settings.Columns.Add(column =>
        {
            column.FieldName = "QuestionCode";
            column.Caption = Humica.EF.Models.SY.SYSettings.getLabel(ViewData[Humica.EF.SYSConstant.SCREEN_ID].ToString(), "Question");
            column.ColumnType = MVCxGridViewColumnType.ComboBox;
            column.Width = 130;
            var cboProperties = column.PropertiesEdit as ComboBoxProperties;
            cboProperties.DropDownStyle = DropDownStyle.DropDownList;
            cboProperties.IncrementalFilteringMode = IncrementalFilteringMode.Contains;
            cboProperties.DataSource = Model.ListQuestion;
            cboProperties.TextField = "Description";
            cboProperties.ValueField = "QuestionCode";
            cboProperties.TextFormatString = "{0}:{1}";
            cboProperties.Columns.Add("QuestionCode", Humica.EF.Models.SY.SYSettings.getLabel("Code"), 80);
            cboProperties.Columns.Add("Description", Humica.EF.Models.SY.SYSettings.getLabel("Description"), 250);
            //cboProperties.ClientSideEvents.SelectedIndexChanged = "changeCourse";
            cboProperties.ValueType = typeof(string);
            cboProperties.Width = Unit.Percentage(100);
            column.FixedStyle = GridViewColumnFixedStyle.Left;
        });

        settings.Columns.Add(column =>
        {
            column.FieldName = "AnswerCode";
            column.Caption = Humica.EF.Models.SY.SYSettings.getLabel(ViewData[Humica.EF.SYSConstant.SCREEN_ID].ToString(), "AnswerCode*");
            column.Width = 130;
        });
        settings.Columns.Add(column =>
        {
            column.FieldName = "Description";
            column.Width = 250;
            column.Caption = Humica.EF.Models.SY.SYSettings.getLabel(ViewData[Humica.EF.SYSConstant.SCREEN_ID].ToString(), "Description*");
            column.ColumnType = MVCxGridViewColumnType.TextBox;
            var textProperties = column.PropertiesEdit as TextEditProperties;
        });

        settings.Columns.Add(column =>
        {
            column.Caption = Humica.EF.Models.SY.SYSettings.getLabel(ViewData[Humica.EF.Models.SY.SYConstant.SCREEN_ID].ToString(), "Score");
            column.FieldName = "TotalScore";
            column.Width = 80;
            column.ColumnType = MVCxGridViewColumnType.SpinEdit;
            var spinEditProperties = column.PropertiesEdit as SpinEditProperties;
            spinEditProperties.Width = Unit.Percentage(100);
            spinEditProperties.DisplayFormatString = "N0";
            spinEditProperties.DisplayFormatInEditMode = true;
            spinEditProperties.MinValue = 0;
            spinEditProperties.Style.HorizontalAlign = HorizontalAlign.Right;
            spinEditProperties.MaxValue = 1000000;
        });

         settings.Columns.Add(column =>
         {
            column.Caption = Humica.EF.Models.SY.SYSettings.getLabel(ViewData[Humica.EF.Models.SY.SYConstant.SCREEN_ID].ToString(), "Total Checkbox");
            column.FieldName = "ColumnCheck";
            column.Width = 110;
            column.ColumnType = MVCxGridViewColumnType.SpinEdit;
            var spinEditProperties = column.PropertiesEdit as SpinEditProperties;
            spinEditProperties.Width = Unit.Percentage(100);
            spinEditProperties.DisplayFormatString = "N0";
            spinEditProperties.DisplayFormatInEditMode = true;
            spinEditProperties.MinValue = 0;
            spinEditProperties.Style.HorizontalAlign = HorizontalAlign.Right;
            spinEditProperties.MaxValue = 1000000;
        });

        settings.Columns.Add(column =>
        {
            column.Caption = Humica.EF.Models.SY.SYSettings.getLabel(ViewData[Humica.EF.Models.SY.SYConstant.SCREEN_ID].ToString(), "Correct Value");
            column.FieldName = "CorrectValue";
            column.Width = 110;
            column.ColumnType = MVCxGridViewColumnType.SpinEdit;
            var spinEditProperties = column.PropertiesEdit as SpinEditProperties;
            spinEditProperties.Width = Unit.Percentage(100);
            spinEditProperties.DisplayFormatString = "N0";
            spinEditProperties.DisplayFormatInEditMode = true;
            spinEditProperties.MinValue = 0;
            spinEditProperties.Style.HorizontalAlign = HorizontalAlign.Right;
            spinEditProperties.MaxValue = 1000000;
       });

        //settings.Columns.Add(column =>
        //{
        //    column.FieldName = "Account";
        //    column.Width = 300;
        //    column.Caption = Humica.EF.Models.SY.SYSettings.getLabel(ViewData[Humica.EF.SYSConstant.SCREEN_ID].ToString(), "Account");
        //    column.ColumnType = MVCxGridViewColumnType.ComboBox;
        //    var cboProperties = column.PropertiesEdit as ComboBoxProperties;
        //    cboProperties.DataSource = ViewData["ACCOUNT_LIST"];
        //    cboProperties.TextField = "ShortDescription";
        //    cboProperties.ValueField = "AccountCode";
        //    cboProperties.Columns.Add("ShortDescription", Humica.EF.Models.SY.SYSettings.getLabel("Description"));
        //    cboProperties.Columns.Add("AccountCode", Humica.EF.Models.SY.SYSettings.getLabel("AccountCode"));

        //    cboProperties.DropDownStyle = DropDownStyle.DropDownList;
        //    cboProperties.TextFormatString = CLOUDVIEW.Models.ClsConstant.TEXT_COMBOBOX_STRING;
        //    cboProperties.ValueType = typeof(string);
        //    cboProperties.Width = Unit.Percentage(100);

        //});

        settings.SettingsSearchPanel.Visible = true;
        settings.SettingsBehavior.ColumnResizeMode = ColumnResizeMode.Control;
        settings.Settings.HorizontalScrollBarMode = ScrollBarMode.Visible;
        settings.Settings.VerticalScrollBarMode = ScrollBarMode.Visible;
        settings.Settings.VerticalScrollableHeight = Humica.EF.MD.SYSession.PageHieigh;
        settings.SettingsBehavior.ConfirmDelete = true;
        settings.SettingsPager.PageSize = 520;
        settings.SettingsDataSecurity.AllowReadUnlistedFieldsFromClientApi = DefaultBoolean.True;

        settings.SettingsBehavior.AllowFocusedRow = true;
        settings.Settings.ShowHeaderFilterButton = true;
        settings.SettingsPopup.HeaderFilter.Height = 200;
        settings.SettingsBehavior.AllowEllipsisInText = true;
        settings.SettingsContextMenu.Enabled = true;

        settings.PreRender = (sender, e) =>
        {
            //((MVCxGridView)sender).StartEdit(1);
        };

        settings.CellEditorInitialize = (s, e) =>
        {
            ASPxEdit editor = (ASPxEdit)e.Editor;
            editor.ValidationSettings.Display = Display.Dynamic;
            e.Editor.ReadOnly = false;
            if (e.KeyValue != null)
            {
                if (e.Column.FieldName == "AnswerCode")
                {
                    e.Editor.ReadOnly = true;
                }
            }
        };
        //settings.InitNewRow += (s, e) =>
        //{
        //    e.NewValues["Property"] = (short)0;
        //};



        settings.CustomJSProperties = (s, e) =>
        {
            ASPxGridView grid1 = (ASPxGridView)s;
            var result = new System.Collections.Hashtable();
            foreach (var col in grid1.AllColumns)
            {
                var dataCol = col as GridViewDataColumn;
                if (dataCol != null)
                {
                    var visible = "T";
                    if (dataCol.Visible == false)
                    {
                        visible = "F";
                    }
                    result[dataCol.FieldName] = new Dictionary<string, object>() {
                                {"fieldName",dataCol.FieldName},
                                {"caption",dataCol.Caption},
                                { "sortIndex", dataCol.SortIndex },
                                { "sortOrder", dataCol.SortOrder },
                                { "groupIndex", dataCol.GroupIndex },
                                { "width", dataCol.Width },
                                { "visibleIndex", dataCol.VisibleIndex },
                                { "visible", visible },
                                { "fitler", dataCol.FilterExpression},
                       };
                }
            }

            e.Properties["cpColumnsProp"] = result;
        };

        settings.PreRender = (s, e) =>
        {

        };
        settings.SettingsExport.ExcelExportMode = DevExpress.Export.ExportType.WYSIWYG;
        settings.SettingsExport.EnableClientSideExportAPI = true;
        settings.SettingsExport.FileName = "Material_List";
        settings.Toolbars.Add(t =>
        {
            //t.Items.Add(GridViewToolbarCommand.ExportToPdf);
            t.Items.Add(GridViewToolbarCommand.ExportToXlsx);
        });
        settings.SettingsExport.RenderBrick = (sender, e) =>
        {
            if (e.RowType == GridViewRowType.Data && e.VisibleIndex % 2 == 0)
                e.BrickStyle.BackColor = System.Drawing.Color.Beige;
        };

    });
    if (ViewData["EditError"] != null)
    {
        grid.SetEditErrorText((string)ViewData["EditError"]);
    }
}

@grid.Bind(Model.ListAnswer).GetHtml()