@model Humica.Logic.RCM.RCMPInterviewObject
@{
    Html.DevExpress().FormLayout(settings =>
    {
        settings.Name = "Filter";
        settings.AlignItemCaptionsInAllGroups = true;

        settings.Items.AddGroupItem(m => Model.Filter, g =>
        {
            g.ColCount = 4;
            g.GroupBoxDecoration = GroupBoxDecoration.None;
            g.SettingsItemCaptions.HorizontalAlign = FormLayoutHorizontalAlign.Left;
            g.Items.Add(m =>
            {
                m.Caption = Humica.EF.Models.SY.SYSettings.getLabel("Vacancy");
            })
            .SetNestedContent(() =>
            {
                Html.DevExpress().ComboBoxFor(i => i.Filter.VacNo, s =>
                {
                    s.ShowModelErrors = true;
                    s.Properties.ClientInstanceName = "cboVacancy";
                    s.Properties.ValidationSettings.ErrorDisplayMode = ErrorDisplayMode.ImageWithTooltip;
                    s.Properties.ClientSideEvents.SelectedIndexChanged = "VACANCY_SE";
                    s.Properties.ValidationSettings.SetFocusOnError = true;
                    s.Properties.ValidationSettings.ErrorText = "*";
                    s.Properties.ValueField = "Code";
                    s.Properties.TextField = "Code";
                    s.Properties.TextFormatString = "{0}";
                    s.Properties.DropDownStyle = DropDownStyle.DropDownList;
                    s.Properties.Columns.Add("Code", Humica.EF.Models.SY.SYSettings.getLabel("Vacancy"));
                    s.Properties.Columns.Add("Position", Humica.EF.Models.SY.SYSettings.getLabel("Apply Position"));
                    s.Properties.NullText = Humica.EF.Models.SY.SYSettings.getLabel("_SELECT");
                }).BindList(ViewData["VACANCY_SELECT"]).Render();
            });
            g.Items.Add(m =>
            {
                m.Caption = Humica.EF.Models.SY.SYSettings.getLabel("Apply Position");
            })
            .SetNestedContent(() =>
            {
                Html.DevExpress().ComboBoxFor(i => i.Filter.ApplyPosition, s =>
                {
                    s.ReadOnly = true;
                    s.ShowModelErrors = true;
                    s.Properties.ClientInstanceName = "cboApplyPosition";
                    s.Properties.ValidationSettings.ErrorDisplayMode = ErrorDisplayMode.ImageWithTooltip;
                    s.Properties.ValidationSettings.SetFocusOnError = true;
                    s.Properties.ValidationSettings.ErrorText = "*";
                    s.Properties.ValueField = "Code";
                    s.Properties.TextField = "Description";
                }).BindList(ViewData["POSITION_SELECT"]).Render();
            });
            g.Items.Add(m =>
            {
                m.Caption = Humica.EF.Models.SY.SYSettings.getLabel("IntV. Step");
            })
            .SetNestedContent(() =>
            {
                Html.DevExpress().SpinEditFor(i => i.Filter.IntvStep, s =>
                {
                    s.Properties.ClientInstanceName = "spIntVStep";
                    s.Properties.ValidationSettings.ErrorDisplayMode = ErrorDisplayMode.ImageWithTooltip;
                    s.Properties.ValidationSettings.SetFocusOnError = true;
                    s.Properties.ValidationSettings.ErrorText = "*";
                    s.ControlStyle.HorizontalAlign = HorizontalAlign.Right;
                }).Render();
            });
            g.Items.Add(m =>
            {
                m.Caption = "";
            })
            .SetNestedContent(() =>
            {
                Html.DevExpress().Button(s =>
                {
                    s.Name = "_btnRunReport";
                    s.ToolTip = Humica.EF.Models.SY.SYSettings.getLabel("Filter");
                    s.RenderMode = ButtonRenderMode.Button;
                    s.Text = Humica.EF.Models.SY.SYSettings.getLabel("Filter");
                    s.UseSubmitBehavior = true;
                    s.Images.Image.IconID = IconID.ActionsApply16x16;
                }).GetHtml();
            });
        });
    }).GetHtml();

}