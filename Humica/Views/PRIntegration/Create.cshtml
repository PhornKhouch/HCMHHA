@model Humica.Logic.PR.PRGLmappingObject
<script type="text/javascript">

    $(document).ready(function () {
        $('#_btnBackAction').click(function () {
            window.location = "@Humica.EF.Models.SY.SYUrl.getBaseUrl()" + "@ViewData[Humica.EF.Models.SY.SYConstant.CURRENT_URL]";
        });
        $('#_btnSaveActionGrid').click(function () {
            $("form").submit();
        });
    });
    function EndCallBack() {
        var total = 0;
        $.ajax({
            type: 'post',
            url: _baseUrl + '/PR/PRM/PRIntegration/Refreshvalue',
            data: { 'id': 'TOTAL', 'action': 'Create' },
            success: function (data) {
                if (data.MS == "OK") {
                    txtCredit.SetValue(data.CreditAmount);
                    txtDebit.SetValue(data.DebitAmount);
                }
                else {
                    AlertMessage(data.MS);
                }
            },
            error: function (XMLHttpRequest, textStatus, errorThrown) {
                AlertMessage(XMLHttpRequest.responseText);

            }
        });
    }
    function approverChange(s, e) {
        gridLevel.SetValue(s.GetSelectedItem().GetColumnText(2));
    }
    //function selectParam(s, e) {
    //    $.ajax({
    //        type: 'post',
    //        url: _baseUrl + '/PR/PRM/PRApproveSalary/SelectParam',
    //        data: { 'docType': cboDocType.GetValue() },
    //        success: function (data) {
    //            if (data.MS != "OK") {
    //                AlertMessage(data.MS);
    //            } else {
    //                GridItemViewApproval.Refresh();
    //            }
    //        }
    //    });
    //}
</script>
@{
    Html.DevExpress().FormLayout(settings =>
    {
        settings.Name = "CreatePO";
        settings.AlignItemCaptionsInAllGroups = true;

        settings.Items.AddGroupItem(m => Model.HeaderAcc, g =>
        {
            g.ColCount = 3;
            g.GroupBoxDecoration = GroupBoxDecoration.None;
            g.SettingsItemCaptions.HorizontalAlign = FormLayoutHorizontalAlign.Left;
            g.Items.Add(m =>
            {
                m.Caption = Humica.EF.Models.SY.SYSettings.getLabel("DocumentType") + "*";
            })
            .SetNestedContent(() =>
            {
                Html.DevExpress().ComboBoxFor(i => i.HeaderAcc.DocumentType, s =>
                {
                    s.Width = Unit.Percentage(100);
                    s.Properties.ClientInstanceName = "cboDocType";
                    s.ShowModelErrors = true;
                    s.Properties.ValidationSettings.ErrorDisplayMode = ErrorDisplayMode.ImageWithTooltip;
                    s.Properties.ValidationSettings.SetFocusOnError = true;
                    s.Properties.ValidationSettings.ErrorText = "*";
                    s.Properties.IncrementalFilteringMode = IncrementalFilteringMode.Contains;
                    s.Properties.ValueType = typeof(string);
                    s.Properties.ValueField = "JournalType";
                    s.Properties.TextField = "Description";
                    s.Properties.NullText = Humica.EF.Models.SY.SYSettings.getLabel((List<Humica.EF.MD.CFForm>)
                         ViewData[Humica.EF.SYSConstant.LIST_CONF_FORM], "_SELECT");
                }).BindList(ViewData["JOURNAL_SELECT"]).Render();
            });

            g.Items.Add(m =>
            {
                m.Caption = Humica.EF.Models.SY.SYSettings.getLabel((List<Humica.EF.MD.CFForm>)
                    ViewData[Humica.EF.SYSConstant.LIST_CONF_FORM], "IntegrateNo") + "*";
            })
             .SetNestedContent(() =>
             {
                 Html.DevExpress().TextBoxFor(i => i.HeaderAcc.IntegrateNo, s =>
                 {
                     s.Width = Unit.Percentage(100);
                     s.ShowModelErrors = true;
                     s.Properties.ValidationSettings.ErrorDisplayMode = ErrorDisplayMode.ImageWithTooltip;
                     s.Properties.ValidationSettings.SetFocusOnError = true;
                     s.Properties.ValidationSettings.ErrorText = "*";
                     s.ReadOnly = true;
                     s.Properties.NullDisplayText = Humica.EF.Models.SY.SYConstant.NEW_RECORD;
                     s.Properties.NullText = Humica.EF.Models.SY.SYConstant.NEW_RECORD;
                 }).Render();
             });

            g.Items.Add(m =>
            {
                m.Caption = Humica.EF.Models.SY.SYSettings.getLabel("DebitAmount");
            })
              .SetNestedContent(() =>
              {
                  Html.DevExpress().SpinEditFor(i => i.HeaderAcc.DebitAmount, s =>
                  {
                      s.Properties.ClientInstanceName = "txtDebit";
                      s.ReadOnly = true;
                      s.ShowModelErrors = true;
                      s.Properties.ValidationSettings.ErrorDisplayMode = ErrorDisplayMode.ImageWithTooltip;
                      s.Properties.ValidationSettings.SetFocusOnError = true;
                      s.Properties.ValidationSettings.ErrorText = "*";
                      s.Properties.MinValue = 0;
                      s.Properties.MaxValue = 9999999999;
                      s.Properties.DisplayFormatString = "N";
                      s.ControlStyle.HorizontalAlign = System.Web.UI.WebControls.HorizontalAlign.Right;
                  }).Render();
              });

            g.Items.Add(m =>
            {
                m.Caption = Humica.EF.Models.SY.SYSettings.getLabel("Company") + "*";

            })
            .SetNestedContent(() =>
            {
                Html.DevExpress().ComboBoxFor(i => i.HeaderAcc.CompanyCode, s =>
                {
                    s.ReadOnly = true;
                    s.ShowModelErrors = true;
                    s.Properties.ValidationSettings.ErrorDisplayMode = ErrorDisplayMode.ImageWithTooltip;
                    s.Properties.ValidationSettings.SetFocusOnError = true;
                    s.Properties.ValidationSettings.ErrorText = "*";
                    s.Properties.IncrementalFilteringMode = IncrementalFilteringMode.Contains;
                    s.Properties.ValueType = typeof(string);
                    s.Properties.ValueField = "CompanyCode";
                    s.Properties.TextField = "CompENG";
                    s.Properties.Columns.Add("CompanyCode", Humica.EF.Models.SY.SYSettings.getLabel("Company"));
                    s.Properties.Columns.Add("CompENG", Humica.EF.Models.SY.SYSettings.getLabel("Description"));
                    s.Properties.TextFormatString = "{0}:{1}";
                    s.Properties.NullText = Humica.EF.Models.SY.SYSettings.getLabel((List<Humica.EF.MD.CFForm>)
                         ViewData[Humica.EF.SYSConstant.LIST_CONF_FORM], "_SELECT");
                    s.Properties.ClientInstanceName = "cboPro";
                }).BindList(ViewData["COMPANY_CODE"]).Render();
            });
            g.Items.Add(m =>
            {
                m.Caption = Humica.EF.Models.SY.SYSettings.getLabel("DocumentDate");
            })
        .SetNestedContent(() =>
        {
            Html.DevExpress().DateEditFor(i => i.HeaderAcc.DocumentDate, s =>
            {
                s.ShowModelErrors = true;
                s.Properties.NullText = ViewData[Humica.EF.SYSConstant.DATE_FORMAT].ToString();
                s.Properties.EditFormatString = ViewData[Humica.EF.SYSConstant.DATE_FORMAT].ToString();
                s.Properties.DisplayFormatString = ViewData[Humica.EF.SYSConstant.DATE_FORMAT].ToString();
                s.Properties.ValidationSettings.ErrorDisplayMode = ErrorDisplayMode.ImageWithTooltip;
                s.Properties.ValidationSettings.SetFocusOnError = true;
                s.Properties.ValidationSettings.ErrorText = "*";
            }).Render();
        });
            g.Items.Add(m =>
            {
                m.Caption = Humica.EF.Models.SY.SYSettings.getLabel("CreditAmount");
            })
          .SetNestedContent(() =>
          {

              Html.DevExpress().SpinEditFor(i => i.HeaderAcc.CreditAmount, s =>
              {
                  s.Properties.ClientInstanceName = "txtCredit";
                  s.ReadOnly = true;
                  s.ShowModelErrors = true;
                  s.Properties.ValidationSettings.ErrorDisplayMode = ErrorDisplayMode.ImageWithTooltip;
                  s.Properties.ValidationSettings.SetFocusOnError = true;
                  s.Properties.ValidationSettings.ErrorText = "*";

                  s.Properties.DisplayFormatString = "N";
                  s.ControlStyle.HorizontalAlign = System.Web.UI.WebControls.HorizontalAlign.Right;
              }).Render();
          });
            g.Items.Add(m =>
            {
                m.Caption = Humica.EF.Models.SY.SYSettings.getLabel("CurrencyCode");
            })
          .SetNestedContent(() =>
          {
              Html.DevExpress().TextBoxFor(i => i.HeaderAcc.CurrencyCode, s =>
              {
                  s.ReadOnly = true;
                  s.Width = Unit.Percentage(100);
                  s.ShowModelErrors = true;
                  s.Properties.ValidationSettings.ErrorDisplayMode = ErrorDisplayMode.ImageWithTooltip;
                  s.Properties.ValidationSettings.SetFocusOnError = true;
                  s.Properties.ValidationSettings.ErrorText = "*";
              }).Render();
          });

            g.Items.Add(m =>
            {
                m.Caption = Humica.EF.Models.SY.SYSettings.getLabel("Description");
                m.ColumnSpan = 3;
            })
              .SetNestedContent(() =>
              {
                  Html.DevExpress().TextBoxFor(i => i.HeaderAcc.Description, s =>
                  {
                      s.Width = Unit.Percentage(100);
                      s.ShowModelErrors = true;
                      s.Properties.ValidationSettings.ErrorDisplayMode = ErrorDisplayMode.ImageWithTooltip;
                      s.Properties.ValidationSettings.SetFocusOnError = true;
                      s.Properties.ValidationSettings.ErrorText = "*";
                  }).Render();
              });
        });
    }).GetHtml();
}
@Html.DevExpress().PageControl(
   settings =>
   {
       settings.Name = "pcScrollingWorkCalendar";
       settings.Width = Unit.Percentage(100);

       settings.EnableTabScrolling = true;
       settings.TabAlign = TabAlign.Justify;

       settings.Styles.Tab.CssClass = "scrolling_Tab";

       settings.TabPages.Add(Humica.EF.Models.SY.SYSettings.getLabel((List<Humica.EF.MD.CFForm>)
        ViewData[Humica.EF.SYSConstant.LIST_CONF_FORM], "Item")).SetContent(() =>
        {
            Html.RenderPartial("_GLCharge", Model.ListAccItem);
        });

   }).GetHtml()