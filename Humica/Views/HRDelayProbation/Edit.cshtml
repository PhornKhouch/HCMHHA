@model Humica.Logic.HR.HRStaffProfileObject
<script type="text/javascript">

    $(document).ready(function () {
        $('#_btnBackAction').click(function () {
            window.location = "@Humica.EF.Models.SY.SYUrl.getBaseUrl()" + "@ViewData[Humica.EF.Models.SY.SYConstant.CURRENT_URL]";
        });
        $('#_btnSaveActionGrid').click(function () {
            $("form").submit();
        });
    });
    function Refreshvalue() {
        var total = 0;
        $.ajax({
            type: 'post',
            url: _baseUrl + '/HRM/EmployeeInfo/HRDelayProbation/Refreshvalue',
            data: { 'EmpCode': txtEmpCode.GetValue(), 'Month': txtMonth.GetValue(), 'Action': 'Edit' },
            success: function (data) {
                if (data.MS == "OK") {
                    var Prob = data.EndProbation;
                    EndProb = new Date(parseInt(Prob.substr(6)));
                    txtEndProbation.SetValue(EndProb);
                }
                else {
                    AlertMessage(data.MS);
                }
            },
            error: function (XMLHttpRequest, textStatus, errorThrown) {
                AlertMessage(XMLHttpRequest.responseText);

            }
        });
    }


    function valueChange(s, e) {
        Refreshvalue();
    }
</script>


        @Html.DevExpress().FormLayout(settings =>
   {


       settings.Name = "MaterialCreate";
       settings.AlignItemCaptionsInAllGroups = true;

       settings.Items.AddGroupItem(m => Model.Header, g =>
       {
           g.ColCount = 3;
           g.GroupBoxDecoration = GroupBoxDecoration.None;
           g.SettingsItemCaptions.HorizontalAlign = FormLayoutHorizontalAlign.Left;

           g.Items.Add(m =>
           {
               m.Caption = Humica.EF.Models.SY.SYSettings.getLabel("EmpCode");
           })
                .SetNestedContent(() =>
                {
                    Html.DevExpress().TextBoxFor(i => i.HeaderStaff.EmpCode, s =>
                    {
                        s.Properties.ClientInstanceName = "txtEmpCode";
                        s.ReadOnly = true;
                        s.ShowModelErrors = true;
                        s.Properties.ValidationSettings.ErrorDisplayMode = ErrorDisplayMode.ImageWithTooltip;
                        s.Properties.ValidationSettings.SetFocusOnError = true;
                        s.Properties.ValidationSettings.ErrorText = "*";
                    }).Render();
                });
           g.Items.Add(m =>
           {
               m.Caption = Humica.EF.Models.SY.SYSettings.getLabel("AllName");

           })
               .SetNestedContent(() =>
               {
                   Html.DevExpress().TextBoxFor(i => i.HeaderStaff.AllName, s =>
                   {
                       s.ReadOnly = true;
                       s.Properties.ValidationSettings.ErrorDisplayMode = ErrorDisplayMode.ImageWithTooltip;
                       s.Properties.ValidationSettings.SetFocusOnError = true;
                       s.Properties.ValidationSettings.ErrorText = "*";
                   }).Render();
               });
           g.Items.Add(m =>
           {
               m.Caption = Humica.EF.Models.SY.SYSettings.getLabel("EmployeeType");

           })
                .SetNestedContent(() =>
                {
                    Html.DevExpress().TextBoxFor(i => i.HeaderStaff.EmployeeType, s =>
                    {
                        s.ReadOnly = true;
                        s.ShowModelErrors = true;
                        s.Properties.ValidationSettings.ErrorDisplayMode = ErrorDisplayMode.ImageWithTooltip;
                        s.Properties.ValidationSettings.SetFocusOnError = true;
                        s.Properties.ValidationSettings.ErrorText = "*";
                    }).Render();
                });
           g.Items
              .Add(m =>
              {
                  m.Caption = Humica.EF.Models.SY.SYSettings.getLabel("Division");
              })
              .SetNestedContent(() =>
              {
                  Html.DevExpress().TextBoxFor(i => i.HeaderStaff.DivisionDesc, s =>
                  {
                      s.ReadOnly = true;
                      s.ShowModelErrors = true;
                      s.Properties.ValidationSettings.ErrorDisplayMode = ErrorDisplayMode.ImageWithTooltip;
                      s.Properties.ValidationSettings.SetFocusOnError = true;
                      s.Properties.ValidationSettings.ErrorText = "*";
                  }).Render();
              });
           g.Items.Add(m =>
           {
               m.Caption = Humica.EF.Models.SY.SYSettings.getLabel("Department");
           })
           .SetNestedContent(() =>
           {
               Html.DevExpress().TextBoxFor(i => i.HeaderStaff.Department, s =>
               {
                   s.ReadOnly = true;
                   s.ShowModelErrors = true;
                   s.Properties.ValidationSettings.ErrorDisplayMode = ErrorDisplayMode.ImageWithTooltip;
                   s.Properties.ValidationSettings.SetFocusOnError = true;
                   s.Properties.ValidationSettings.ErrorText = "*";
               }).Render();
           });
           g.Items.Add(m =>
           {
               m.Caption = Humica.EF.Models.SY.SYSettings.getLabel("Section");
           })
           .SetNestedContent(() =>
           {
               Html.DevExpress().TextBoxFor(i => i.HeaderStaff.Section, s =>
               {
                   s.ReadOnly = true;
                   s.ShowModelErrors = true;
                   s.Properties.ValidationSettings.ErrorDisplayMode = ErrorDisplayMode.ImageWithTooltip;
                   s.Properties.ValidationSettings.SetFocusOnError = true;
                   s.Properties.ValidationSettings.ErrorText = "*";
               }).Render();
           });
           g.Items.Add(m =>
           {
               m.Caption = Humica.EF.Models.SY.SYSettings.getLabel("LevelCode");
           })
              .SetNestedContent(() =>
              {
                  Html.DevExpress().TextBoxFor(i => i.HeaderStaff.Level, s =>
                  {
                      s.ReadOnly = true;
                      s.ShowModelErrors = true;
                      s.Properties.ValidationSettings.ErrorDisplayMode = ErrorDisplayMode.ImageWithTooltip;
                      s.Properties.ValidationSettings.SetFocusOnError = true;
                      s.Properties.ValidationSettings.ErrorText = "*";
                  }).Render();
              });
           g.Items.Add(m =>
           {
               m.Caption = Humica.EF.Models.SY.SYSettings.getLabel("Position");
           })
             .SetNestedContent(() =>
             {
                 Html.DevExpress().TextBoxFor(i => i.HeaderStaff.Position, s =>
                 {
                     s.ReadOnly = true;
                     s.ShowModelErrors = true;
                     s.Properties.ValidationSettings.ErrorDisplayMode = ErrorDisplayMode.ImageWithTooltip;
                     s.Properties.ValidationSettings.SetFocusOnError = true;
                     s.Properties.ValidationSettings.ErrorText = "*";
                 }).Render();
             });
           g.Items.Add(m =>
           {
               m.Caption = Humica.EF.Models.SY.SYSettings.getLabel("StartDate");
           })
            .SetNestedContent(() =>
            {
                Html.DevExpress().DateEditFor(i => i.HeaderStaff.StartDate, s =>
                {
                    s.ReadOnly = true;
                    s.ShowModelErrors = true;
                    s.Properties.ValidationSettings.ErrorDisplayMode = ErrorDisplayMode.ImageWithTooltip;
                    s.Properties.ValidationSettings.SetFocusOnError = true;
                    s.Properties.NullText = ViewData[Humica.EF.SYSConstant.DATE_FORMAT].ToString();
                    s.Properties.EditFormatString = ViewData[Humica.EF.SYSConstant.DATE_FORMAT].ToString();
                    s.Properties.DisplayFormatString = ViewData[Humica.EF.SYSConstant.DATE_FORMAT].ToString();
                    s.Properties.ValidationSettings.ErrorText = "*";
                }).Render();
            });
       });
}).GetHtml()

@Html.DevExpress().PageControl(settings =>
{
    settings.Name = "pcScrollingMaterial1";
    settings.Width = Unit.Percentage(100);

    settings.EnableTabScrolling = true;
    settings.TabAlign = TabAlign.Justify;

    settings.Styles.Tab.CssClass = "scrolling_Tab";
    settings.TabPages.Add(Humica.EF.Models.SY.SYSettings.getLabel("General")).SetContent(() =>
    {
        Html.DevExpress().FormLayout(s1 =>
        {
            s1.Name = "CreateStaff1";
            s1.AlignItemCaptionsInAllGroups = true;

            s1.Items.AddGroupItem(m => Model.Header, g =>
            {
                g.ColCount = 3;
                g.GroupBoxDecoration = GroupBoxDecoration.None;
                g.SettingsItemCaptions.HorizontalAlign = FormLayoutHorizontalAlign.Left;
                g.Items.Add(m =>
                {
                    m.Caption = Humica.EF.Models.SY.SYSettings.getLabel("Month");
                })
                             .SetNestedContent(() =>
                             {
                                 Html.DevExpress().SpinEditFor(i => i.HeaderDP.Day, s =>
                                 {
                                     s.Properties.ClientInstanceName = "txtMonth";
                                     s.Properties.ValidationSettings.ErrorDisplayMode = ErrorDisplayMode.ImageWithTooltip;
                                     s.Properties.ValidationSettings.SetFocusOnError = true;
                                     s.Properties.ValidationSettings.ErrorText = "*";
                                     s.Properties.NumberType = SpinEditNumberType.Integer;
                                     s.Properties.DisplayFormatString = "N2";
                                     s.Properties.ClientSideEvents.NumberChanged = "valueChange";
                                     s.ControlStyle.HorizontalAlign = HorizontalAlign.Right;
                                 }).Render();
                             });
                g.Items.Add(m =>
                {
                    m.Caption = Humica.EF.Models.SY.SYSettings.getLabel("EndProbation");
                })
                   .SetNestedContent(() =>
                   {
                       Html.DevExpress().DateEditFor(i => i.HeaderDP.EndProbation, s =>
                       {
                           s.Properties.ClientInstanceName = "txtEndProbation";
                           s.ShowModelErrors = true;
                           s.Properties.ValidationSettings.ErrorDisplayMode = ErrorDisplayMode.ImageWithTooltip;
                           s.Properties.ValidationSettings.SetFocusOnError = true;
                           s.Properties.NullText = ViewData[Humica.EF.SYSConstant.DATE_FORMAT].ToString();
                           s.Properties.EditFormatString = ViewData[Humica.EF.SYSConstant.DATE_FORMAT].ToString();
                           s.Properties.DisplayFormatString = ViewData[Humica.EF.SYSConstant.DATE_FORMAT].ToString();
                           s.Properties.ValidationSettings.ErrorText = "*";
                       }).Render();
                   });
                g.Items.Add(m =>
                {
                    m.Caption = Humica.EF.Models.SY.SYSettings.getLabel("Reason");
                    m.ColSpan = 2;
                })
               .SetNestedContent(() =>
               {
                   Html.DevExpress().TextBoxFor(i => i.HeaderDP.Reason, s =>
                   {
                       s.Width = Unit.Percentage(100);
                       s.ShowModelErrors = true;
                       s.Properties.ValidationSettings.ErrorDisplayMode = ErrorDisplayMode.ImageWithTooltip;
                       s.Properties.ValidationSettings.SetFocusOnError = true;
                       s.Properties.ValidationSettings.ErrorText = "*";
                   }).Render();
               });
            });

        }).GetHtml();
    });
    settings.TabPages.Add(Humica.EF.Models.SY.SYSettings.getLabel("History")).SetContent(() =>
    {
        Html.RenderPartial("GridItems", Model);
    });
}).GetHtml()