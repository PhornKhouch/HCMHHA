@model Humica.Logic.PR.PRGLmappingObject

@{
    var grid = Html.DevExpress().GridView(
    settings =>
    {

        settings.Name = "gridViewItem3Edit";
        settings.KeyFieldName = "BenCode";

        settings.Width = Unit.Percentage(100);
        settings.SettingsEditing.Mode = GridViewEditingMode.Inline;


        settings.CallbackRouteValues = new { Controller = "PRGLmapping", Action = "GridItemsEdit" };

        settings.SettingsEditing.UpdateRowRouteValues = new { Controller = "PRGLmapping", Action = "EditItemEdit" };

        settings.SettingsBehavior.AllowSort = false;

        settings.CommandColumn.Visible = true;
        settings.SettingsContextMenu.Enabled = true;
        settings.Settings.ShowHeaderFilterButton = true;
        settings.SettingsPopup.HeaderFilter.Height = 200;

        settings.CommandColumn.ShowCancelButton = true;
        settings.CommandColumn.ShowEditButton = true;
        settings.SettingsBehavior.AllowFocusedRow = true;
        settings.CommandColumn.FixedStyle = GridViewColumnFixedStyle.Left;

        settings.SettingsPager.PageSizeItemSettings.Visible = true;
        settings.Columns.Add(column =>
        {
            column.Width = 150;
            column.Caption = Humica.EF.Models.SY.SYSettings.getLabel("Benefit Group");
            column.FieldName = "BenefitGroup";

        });

        settings.Columns.Add(column =>
        {
            column.Caption = Humica.EF.Models.SY.SYSettings.getLabel("Benefit Type");
            column.Width = 250;
            column.FieldName = "BenCode";

            column.ColumnType = MVCxGridViewColumnType.ComboBox;
            var textProperties = column.PropertiesEdit as ComboBoxProperties;
            textProperties.DataSource = ViewData["TEMP_SYGL_SELECT"];
            textProperties.ValueField = "AccCode";
            textProperties.TextField = "Description";
            textProperties.Columns.Add("AccCode", Humica.EF.Models.SY.SYSettings.getLabel("Code"));
            textProperties.Columns.Add("Description", Humica.EF.Models.SY.SYSettings.getLabel("Description"), 200);
            textProperties.TextFormatString = "{1}";
            textProperties.DropDownStyle = DropDownStyle.DropDownList;
            textProperties.ValueType = typeof(string);
            textProperties.Width = Unit.Percentage(100);

        });
        settings.Columns.Add(column =>
        {
            column.Caption = Humica.EF.Models.SY.SYSettings.getLabel("MaterialCode");
            column.Width = 250;
            column.FieldName = "MaterialCode";
            column.ColumnType = MVCxGridViewColumnType.ComboBox;
            var textProperties = column.PropertiesEdit as ComboBoxProperties;
            textProperties.DataSource = ViewData["Material_SELECT"];
            textProperties.ValueField = "MaterialCode";
            textProperties.TextField = "Description";
            textProperties.Columns.Add("MaterialCode", Humica.EF.Models.SY.SYSettings.getLabel("Code"),100);
            textProperties.Columns.Add("MaterialDescription", Humica.EF.Models.SY.SYSettings.getLabel("Description"), 250);
            textProperties.Columns.Add("ExpenseAccount", Humica.EF.Models.SY.SYSettings.getLabel("ExpenseAccount"), 200);
            textProperties.TextFormatString = "{1}";
            textProperties.ClientSideEvents.SelectedIndexChanged = "SelectMaterialCode";
            textProperties.DropDownStyle = DropDownStyle.DropDownList;
            textProperties.ValueType = typeof(string);
            textProperties.Width = Unit.Percentage(100);
        });

        settings.Columns.Add(column =>
        {
            column.Caption = Humica.EF.Models.SY.SYSettings.getLabel("GL Account");
            column.Width = 300;
            column.FieldName = "GLCode";
            column.ColumnType = MVCxGridViewColumnType.ComboBox;
            column.PropertiesEdit.ClientInstanceName = "txtAccount";
            var textProperties = column.PropertiesEdit as ComboBoxProperties;
            textProperties.DataSource = ViewData["COA_SELECT"];
            textProperties.ValueField = "Code";
            textProperties.TextField = "Description";
            textProperties.Columns.Add("Code", Humica.EF.Models.SY.SYSettings.getLabel("Code"));
            textProperties.Columns.Add("Description", Humica.EF.Models.SY.SYSettings.getLabel("Description"), 250);
            textProperties.Columns.Add("OthDesc", Humica.EF.Models.SY.SYSettings.getLabel("Second Description"));
            textProperties.TextFormatString = "{0}:{1}";
            textProperties.DropDownStyle = DropDownStyle.DropDownList;

            textProperties.ValueType = typeof(string);
            textProperties.Width = Unit.Percentage(100);

        });

        settings.Columns.Add(column =>
        {
            column.Width = 220;
            column.Caption = Humica.EF.Models.SY.SYSettings.getLabel("Remark");
            column.FieldName = "Remark";

        });


        //settings.SettingsSearchPanel.Visible = true;
        settings.SettingsBehavior.ColumnResizeMode = ColumnResizeMode.Control;
        settings.Settings.HorizontalScrollBarMode = ScrollBarMode.Visible;
        //settings.Settings.VerticalScrollBarMode = ScrollBarMode.Visible;
        settings.Settings.VerticalScrollableHeight = Humica.EF.MD.SYSession.PageHieigh;
        settings.SettingsBehavior.ConfirmDelete = true;
        settings.SettingsPager.PageSize = 50;
        settings.SettingsBehavior.AllowFocusedRow = true;

        settings.CustomJSProperties = (sender, e) =>
        {
            e.Properties["cpVisibleRowCount"] = (sender as MVCxGridView).VisibleRowCount;
        };

        settings.CellEditorInitialize = (s, e) =>
        {
            ASPxEdit editor = (ASPxEdit)e.Editor;
            editor.ValidationSettings.Display = Display.Dynamic;
            if (e.KeyValue != null)
            {
                if (e.Column.FieldName == "Code")
                {
                    e.Editor.ReadOnly = true;
                }
            }

            if (e.Column.FieldName == "Status")
            {
                //e.Editor.ReadOnly = true;
            }
        };


    });

    if (ViewData["EditError"] != null)
    {
        grid.SetEditErrorText((string)ViewData["EditError"]);
    }
}

@grid.Bind(Model.ListHeader).GetHtml()