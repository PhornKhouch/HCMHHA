@model Humica.Logic.RCM.RCMRefChkPersonObject

<script type="text/javascript">
     var _L = "@Model.Hire.JobGrade";
    $(document).ready(function () {
        $('#_btnBackAction').click(function () {
            window.location = "@Humica.EF.Models.SY.SYUrl.getBaseUrl()" + "@ViewData[Humica.EF.Models.SY.SYConstant.CURRENT_URL]";
        });
        $('#_btnSaveActionGrid').click(function () {
            $("form").submit();
        });
    });
    function convert(str) {
        var date = new Date(str),
            mnth = ("0" + (date.getMonth() + 1)).slice(-2),
            day = ("0" + date.getDate()).slice(-2),
            Minutes = ("0" + date.getMinutes()).slice(-2);
        return [date.getFullYear(), mnth, day].join("-");
    }
    function OnClientValueChanged(s, e) {
        ShowData();
    }
    function ShowData() {
        var total = 0;
        $.ajax({
            type: 'post',
            url: _baseUrl + '/HRM/RCM/RCMHires/ShowData',
            data: { 'StartDate': convert(txtStartDate.GetDate()), 'ProType': txtProbationType.GetValue() },
            success: function (data) {
                if (data.MS == "OK") {
                    var Probat = data.Probation;
                    ProDate = new Date(parseInt(Probat.substr(6)));
                    var Leave = data.LeaveCof;
                    LeaveDate = new Date(parseInt(Leave.substr(6)));
                    txtProbation.SetValue(ProDate);
                    txtLeaveConf.SetValue(LeaveDate);
                }
                else {
                    AlertMessage(data.MS);
                }
            },
            error: function (XMLHttpRequest, textStatus, errorThrown) {
                AlertMessage(XMLHttpRequest.responseText);

            }
        });
    }
    function initDataLevel(s, e) {
        $.ajax({
            type: 'post',
            url: _baseUrl + '/HRM/RCM/RCMHires/FitlerLevel',
            data: { 'code': s.GetValue() },
            success: function (data) {
                cboJobGrade.PerformCallback();
                cboJobGrade.SetValue(_L);
            }

        });

    }

    function selectLevel(s, e) {
        $.ajax({
            type: 'post',
            url: _baseUrl + '/HRM/RCM/RCMHires/FitlerLevel',
            data: { 'code': s.GetValue() },
            success: function (data) {
                cboJobGrade.PerformCallback();
            }
        });
    }
    function selectJobGrade(s, e) {
        txtJobGrade.SetValue(s.GetValue());
    }
    function onUploadControlFileUploadCompleteProfile(s, e) {
        if (e.isValid) {
            //alert(e.callbackData);
            txtImage.SetText(e.callbackData);
            $("#uploadedImage").attr("src", e.callbackData);
            setElementVisible("uploadedImage", e.isValid);
        }
    }
    function onImageLoad() {
        var externalDropZone = $("#externalDropZone");
        var uploadedImage = $("#uploadedImage");
        uploadedImage.css({
            left: (externalDropZone.width() - uploadedImage.width()) / 2,
            top: (externalDropZone.height() - uploadedImage.height()) / 2
        });
        setElementVisible("dragZone", false);
    }
    function setElementVisible(elementId, visible) {
        var el = $("#" + elementId);
        if (visible)
            el.show();
        else
            el.hide();
    }
</script>
<link rel="stylesheet" href="~/Content/Staff.css">
@Html.DevExpress().FormLayout(s1 =>
{
    s1.Name = "HireCandidate";
    s1.AlignItemCaptionsInAllGroups = true;
    s1.Items.AddGroupItem(m => Model.Hire, g =>
    {
        g.ColCount = 3;
        g.GroupBoxDecoration = GroupBoxDecoration.None;
        g.SettingsItemCaptions.HorizontalAlign = FormLayoutHorizontalAlign.Left;
        g.Items.Add(m =>
        {
            m.Caption = Humica.EF.Models.SY.SYSettings.getLabel("Candidate Name");
        }).SetNestedContent(() =>
        {
            Html.DevExpress().TextBoxFor(i => i.Hire.ApplicantName, s =>
            {
                s.ReadOnly = true;
                s.Properties.ClientInstanceName = "txtApplicantName";
                s.Properties.ValidationSettings.ErrorDisplayMode = ErrorDisplayMode.ImageWithTooltip;
                s.Properties.ValidationSettings.SetFocusOnError = true;
                s.Properties.ValidationSettings.ErrorText = "*";
            }).Render();
        });
        g.Items.Add(m =>
        {
            m.Caption = Humica.EF.Models.SY.SYSettings.getLabel("Apply Position");
        }).SetNestedContent(() =>
        {
            Html.DevExpress().ComboBoxFor(i => i.Hire.ApplyPosition, s =>
            {
                s.ReadOnly = true;
                s.ShowModelErrors = true;
                s.Properties.ClientInstanceName = "txtApplyPosition";
                s.Properties.ValidationSettings.ErrorDisplayMode = ErrorDisplayMode.ImageWithTooltip;
                s.Properties.ValidationSettings.SetFocusOnError = true;
                s.Properties.ValidationSettings.ErrorText = "*";
                s.Properties.ValueField = "Code";
                s.Properties.TextField = "Description";
            }).BindList(ViewData["POSITION_SELECT"]).Render();
        });
        g.Items.Add(m =>
        {
            m.Caption = Humica.EF.Models.SY.SYSettings.getLabel("Apply Date");
        }).SetNestedContent(() =>
        {
            Html.DevExpress().DateEditFor(i => i.Hire.ApplyDate, s =>
            {
                s.ReadOnly = true;
                s.Properties.ClientInstanceName = "txtApplyDate";
                s.ShowModelErrors = true;
                s.Properties.ValidationSettings.ErrorDisplayMode = ErrorDisplayMode.Text;
                s.Properties.ValidationSettings.SetFocusOnError = true;
                s.Properties.DisplayFormatString = ViewData[Humica.EF.SYSConstant.DATE_FORMAT].ToString();
                s.Properties.CalendarProperties.FastNavProperties.DisplayMode = FastNavigationDisplayMode.Inline;
                s.Properties.ValidationSettings.ErrorText = "*";
            }).Render();
        });
        g.Items.Add(m =>
        {
            m.Caption = Humica.EF.Models.SY.SYSettings.getLabel("EmpType") + "*";
        }).SetNestedContent(() =>
        {
            Html.DevExpress().ComboBoxFor(i => i.Hire.EmployeeType, s =>
            {
                s.ShowModelErrors = true;
                s.Properties.ValidationSettings.ErrorDisplayMode = ErrorDisplayMode.ImageWithTooltip;
                s.Properties.ValidationSettings.SetFocusOnError = true;
                s.Properties.ValidationSettings.ErrorText = "*";
                s.Properties.TextFormatString = "{1}";
                s.Properties.ValueField = "Code";
                s.Properties.TextField = "Description";
                s.Properties.Columns.Add("Code", Humica.EF.Models.SY.SYSettings.getLabel("Code"), 70);
                s.Properties.Columns.Add("Description", Humica.EF.Models.SY.SYSettings.getLabel("Description"), 200);
                s.Properties.Columns.Add("SecDescription", Humica.EF.Models.SY.SYSettings.getLabel("Second Description"), 120);
                s.Properties.NullText = Humica.EF.Models.SY.SYSettings.getLabel("_SELECT");
            }).BindList(ViewData["EMPTYPE_SELECT"]).Render();
        });
        g.Items.Add(m =>
        {
            m.Caption = Humica.EF.Models.SY.SYSettings.getLabel("Location");
        }).SetNestedContent(() =>
        {
            Html.DevExpress().ComboBoxFor(i => i.Hire.Location, s =>
            {
                s.ShowModelErrors = true;
                s.Properties.ValidationSettings.ErrorDisplayMode = ErrorDisplayMode.ImageWithTooltip;
                s.Properties.ValidationSettings.SetFocusOnError = true;
                s.Properties.ValidationSettings.ErrorText = "*";
                s.Properties.TextFormatString = "{1}";
                s.Properties.ValueField = "Code";
                s.Properties.TextField = "Description";
                s.Properties.Columns.Add("Code", Humica.EF.Models.SY.SYSettings.getLabel("Code"), 70);
                s.Properties.Columns.Add("Description", Humica.EF.Models.SY.SYSettings.getLabel("Description"), 200);
                s.Properties.Columns.Add("OthDesc", Humica.EF.Models.SY.SYSettings.getLabel("Second Description"), 120);
                s.Properties.NullText = Humica.EF.Models.SY.SYSettings.getLabel("_SELECT");
            }).BindList(ViewData["LOCATION_SELECT"]).Render();
        });
        g.Items.Add(m =>
        {
            m.Caption = Humica.EF.Models.SY.SYSettings.getLabel("Is Resident");
        }).SetNestedContent(() =>
        {
            Html.DevExpress().CheckBoxFor(i => i.Hire.IsResident, s =>
            {
                s.Properties.ValidationSettings.ErrorDisplayMode = ErrorDisplayMode.ImageWithTooltip;
                s.Properties.ValidationSettings.SetFocusOnError = true;
                s.Properties.ValidationSettings.ErrorText = "*";
            }).Render();
        });
        g.Items.Add(m =>
        {
            m.Caption = Humica.EF.Models.SY.SYSettings.getLabel("Branch") + "*";
        }).SetNestedContent(() =>
        {
            Html.DevExpress().ComboBoxFor(i => i.Hire.Branch, s =>
            {
                s.ShowModelErrors = true;
                s.Properties.ValidationSettings.ErrorDisplayMode = ErrorDisplayMode.ImageWithTooltip;
                s.Properties.ValidationSettings.SetFocusOnError = true;
                s.Properties.ValidationSettings.ErrorText = "*";
                s.Properties.TextFormatString = "{1}";
                s.Properties.ValueField = "Code";
                s.Properties.TextField = "Description";
                s.Properties.Columns.Add("Code", Humica.EF.Models.SY.SYSettings.getLabel("Code"), 70);
                s.Properties.Columns.Add("Description", Humica.EF.Models.SY.SYSettings.getLabel("Description"), 200);
                s.Properties.Columns.Add("SecDescription", Humica.EF.Models.SY.SYSettings.getLabel("Second Description"), 120);
                s.Properties.NullText = Humica.EF.Models.SY.SYSettings.getLabel("_SELECT");

            }).BindList(ViewData["BRANCHES_SELECT"]).Render();
        });
        g.Items.Add(m =>
        {
            m.Caption = Humica.EF.Models.SY.SYSettings.getLabel("Division");
        }).SetNestedContent(() =>
        {
            Html.DevExpress().ComboBoxFor(i => i.Hire.Division, s =>
            {
                s.ShowModelErrors = true;
                s.Properties.ValidationSettings.ErrorDisplayMode = ErrorDisplayMode.ImageWithTooltip;
                s.Properties.ValidationSettings.SetFocusOnError = true;
                s.Properties.ValidationSettings.ErrorText = "*";
                s.Properties.TextFormatString = "{1}";
                s.Properties.ValueField = "Code";
                s.Properties.TextField = "Description";
                s.Properties.Columns.Add("Code", Humica.EF.Models.SY.SYSettings.getLabel("Code"), 70);
                s.Properties.Columns.Add("Description", Humica.EF.Models.SY.SYSettings.getLabel("Description"), 200);
                s.Properties.Columns.Add("SecDescription", Humica.EF.Models.SY.SYSettings.getLabel("Second Description"), 120);
                s.Properties.NullText = Humica.EF.Models.SY.SYSettings.getLabel("_SELECT");
            }).BindList(ViewData["DIVISION_SELECT"]).Render();
        });
        g.Items.Add(m =>
        {
            m.Caption = Humica.EF.Models.SY.SYSettings.getLabel("Base On Atten");
        }).SetNestedContent(() =>
        {
            Html.DevExpress().CheckBoxFor(i => i.Hire.IsAtten, s =>
            {
                s.Properties.ValidationSettings.ErrorDisplayMode = ErrorDisplayMode.ImageWithTooltip;
                s.Properties.ValidationSettings.SetFocusOnError = true;
                s.Properties.ValidationSettings.ErrorText = "*";
            }).Render();
        });
        g.Items.Add(m =>
        {
            m.Caption = Humica.EF.Models.SY.SYSettings.getLabel("DEPT") + "*";
        }).SetNestedContent(() =>
        {
            Html.DevExpress().ComboBoxFor(i => i.Hire.Department, s =>
            {
                s.ShowModelErrors = true;
                s.Properties.ValidationSettings.ErrorDisplayMode = ErrorDisplayMode.ImageWithTooltip;
                s.Properties.ValidationSettings.SetFocusOnError = true;
                s.Properties.ValidationSettings.ErrorText = "*";
                s.Properties.TextFormatString = "{1}";
                s.Properties.ValueField = "Code";
                s.Properties.TextField = "Description";
                s.Properties.Columns.Add("Code", Humica.EF.Models.SY.SYSettings.getLabel("Code"), 70);
                s.Properties.Columns.Add("Description", Humica.EF.Models.SY.SYSettings.getLabel("Description"), 200);
                s.Properties.Columns.Add("SecDescription", Humica.EF.Models.SY.SYSettings.getLabel("Second Description"), 120);
                s.Properties.NullText = Humica.EF.Models.SY.SYSettings.getLabel("_SELECT");
            }).BindList(ViewData["DEPARTMENT_SELECT"]).Render();
        });
        g.Items.Add(m =>
        {
            m.Caption = Humica.EF.Models.SY.SYSettings.getLabel("Line");
        }).SetNestedContent(() =>
        {
            Html.DevExpress().ComboBoxFor(i => i.Hire.Line, s =>
            {
                s.ShowModelErrors = true;
                s.Properties.ValidationSettings.ErrorDisplayMode = ErrorDisplayMode.ImageWithTooltip;
                s.Properties.ValidationSettings.SetFocusOnError = true;
                s.Properties.ValidationSettings.ErrorText = "*";
                s.Properties.TextFormatString = "{1}";
                s.Properties.ValueField = "Code";
                s.Properties.TextField = "Description";
                s.Properties.Columns.Add("Code", Humica.EF.Models.SY.SYSettings.getLabel("Code"), 70);
                s.Properties.Columns.Add("Description", Humica.EF.Models.SY.SYSettings.getLabel("Description"), 200);
                s.Properties.Columns.Add("SecDescription", Humica.EF.Models.SY.SYSettings.getLabel("Second Description"), 120);
                s.Properties.NullText = Humica.EF.Models.SY.SYSettings.getLabel("_SELECT");
            }).BindList(ViewData["LINE_SELECT"]).Render();
        });
        g.Items.Add(m =>
        {
            m.Caption = Humica.EF.Models.SY.SYSettings.getLabel("Head Of Department");
        }).SetNestedContent(() =>
        {
            Html.DevExpress().ComboBoxFor(i => i.Hire.HODCode, s =>
            {
                s.ShowModelErrors = true;
                s.Properties.ValidationSettings.ErrorDisplayMode = ErrorDisplayMode.ImageWithTooltip;
                s.Properties.ValidationSettings.SetFocusOnError = true;
                s.Properties.ValidationSettings.ErrorText = "*";
                s.Properties.TextFormatString = "{0}:{1}";
                s.Properties.ValueField = "EmpCode";
                s.Properties.TextField = "AllName";
                s.Properties.Columns.Add("EmpCode", Humica.EF.Models.SY.SYSettings.getLabel("EmpCode"), 90);
                s.Properties.Columns.Add("AllName", Humica.EF.Models.SY.SYSettings.getLabel("AllName"), 200);
                s.Properties.Columns.Add("OthAllName", Humica.EF.Models.SY.SYSettings.getLabel("OthAllName"), 120);
                s.Properties.NullText = Humica.EF.Models.SY.SYSettings.getLabel("_SELECT");

            }).BindList(ViewData["STAFF_SELECT"]).Render();
        });
        g.Items.Add(m =>
        {
            m.Caption = Humica.EF.Models.SY.SYSettings.getLabel("Category");
        }).SetNestedContent(() =>
        {
            Html.DevExpress().ComboBoxFor(i => i.Hire.Category, s =>
            {
                s.ShowModelErrors = true;
                s.Properties.ValidationSettings.ErrorDisplayMode = ErrorDisplayMode.ImageWithTooltip;
                s.Properties.ValidationSettings.SetFocusOnError = true;
                s.Properties.ValidationSettings.ErrorText = "*";
                s.Properties.TextFormatString = "{1}";
                s.Properties.ValueField = "Code";
                s.Properties.TextField = "Description";
                s.Properties.Columns.Add("Code", Humica.EF.Models.SY.SYSettings.getLabel("Code"), 70);
                s.Properties.Columns.Add("Description", Humica.EF.Models.SY.SYSettings.getLabel("Description"), 200);
                s.Properties.Columns.Add("SecDescription", Humica.EF.Models.SY.SYSettings.getLabel("Second Description"), 120);
                s.Properties.NullText = Humica.EF.Models.SY.SYSettings.getLabel("_SELECT");

            }).BindList(ViewData["CATEGORY_SELECT"]).Render();
        });
        g.Items.Add(m =>
        {
            m.Caption = Humica.EF.Models.SY.SYSettings.getLabel("Section");
        }).SetNestedContent(() =>
        {
            Html.DevExpress().ComboBoxFor(i => i.Hire.Section, s =>
            {
                s.ShowModelErrors = true;
                s.Properties.ValidationSettings.ErrorDisplayMode = ErrorDisplayMode.ImageWithTooltip;
                s.Properties.ValidationSettings.SetFocusOnError = true;
                s.Properties.ValidationSettings.ErrorText = "*";
                s.Properties.TextFormatString = "{1}";
                s.Properties.ValueField = "Code";
                s.Properties.TextField = "Description";
                s.Properties.Columns.Add("Code", Humica.EF.Models.SY.SYSettings.getLabel("Code"), 70);
                s.Properties.Columns.Add("Description", Humica.EF.Models.SY.SYSettings.getLabel("Description"), 200);
                s.Properties.Columns.Add("SecDescription", Humica.EF.Models.SY.SYSettings.getLabel("Second Description"), 120);
                s.Properties.NullText = Humica.EF.Models.SY.SYSettings.getLabel("_SELECT");
            }).BindList(ViewData["SECTION_SELECT"]).Render();
        });
        g.Items.Add(m =>
        {
            m.Caption = Humica.EF.Models.SY.SYSettings.getLabel("1st Line Mgr.");
        }).SetNestedContent(() =>
        {
            Html.DevExpress().ComboBoxFor(i => i.Hire.FirstLine, s =>
            {
                s.ShowModelErrors = true;
                s.Properties.ValidationSettings.ErrorDisplayMode = ErrorDisplayMode.ImageWithTooltip;
                s.Properties.ValidationSettings.SetFocusOnError = true;
                s.Properties.ValidationSettings.ErrorText = "*";
                s.Properties.TextFormatString = "{1}";
                s.Properties.ValueField = "Code";
                s.Properties.TextField = "Description";
                s.Properties.Columns.Add("Code", Humica.EF.Models.SY.SYSettings.getLabel("Code"), 70);
                s.Properties.Columns.Add("Description", Humica.EF.Models.SY.SYSettings.getLabel("Description"), 200);
                s.Properties.NullText = Humica.EF.Models.SY.SYSettings.getLabel("_SELECT");
            }).BindList(ViewData["POSITION_SELECT"]).Render();
        });
        g.Items.Add(m =>
        {
            m.Caption = Humica.EF.Models.SY.SYSettings.getLabel("Position") + "*";
        }).SetNestedContent(() =>
        {
            Html.DevExpress().ComboBoxFor(i => i.Hire.Position, s =>
            {
                s.ShowModelErrors = true;
                s.Properties.ValidationSettings.ErrorDisplayMode = ErrorDisplayMode.ImageWithTooltip;
                s.Properties.ValidationSettings.SetFocusOnError = true;
                s.Properties.ValidationSettings.ErrorText = "*";
                s.Properties.TextFormatString = "{1}";
                s.Properties.ValueField = "Code";
                s.Properties.TextField = "Description";
                s.Properties.Columns.Add("Code", Humica.EF.Models.SY.SYSettings.getLabel("Code"), 70);
                s.Properties.Columns.Add("Description", Humica.EF.Models.SY.SYSettings.getLabel("Description"), 200);
                s.Properties.Columns.Add("SecDescription", Humica.EF.Models.SY.SYSettings.getLabel("Second Description"), 120);
                s.Properties.NullText = Humica.EF.Models.SY.SYSettings.getLabel("_SELECT");

            }).BindList(ViewData["POSITION_SELECT"]).Render();
        });
        g.Items.Add(m =>
        {
            m.Caption = Humica.EF.Models.SY.SYSettings.getLabel("LevelCode") + "*";
        }).SetNestedContent(() =>
        {
            Html.DevExpress().ComboBoxFor(i => i.Hire.Level, s =>
            {
                s.ShowModelErrors = true;
                s.Properties.ValidationSettings.ErrorDisplayMode = ErrorDisplayMode.ImageWithTooltip;
                s.Properties.ValidationSettings.SetFocusOnError = true;
                s.Properties.ValidationSettings.ErrorText = "*";
                s.Properties.TextFormatString = "{1}";
                s.Properties.ValueField = "Code";
                s.Properties.TextField = "Description";
                s.Properties.Columns.Add("Code", Humica.EF.Models.SY.SYSettings.getLabel("Code"), 70);
                s.Properties.Columns.Add("Description", Humica.EF.Models.SY.SYSettings.getLabel("Description"), 200);
                s.Properties.Columns.Add("SecDescription", Humica.EF.Models.SY.SYSettings.getLabel("Second Description"), 120);
                s.Properties.ClientSideEvents.SelectedIndexChanged = "selectLevel";
                s.Properties.NullText = Humica.EF.Models.SY.SYSettings.getLabel("_SELECT");
                s.Properties.ClientSideEvents.Init = "initDataLevel";

            }).BindList(ViewData["LEVEL_SELECT"]).Render();
        });
        g.Items.Add(m =>
        {
            m.Caption = Humica.EF.Models.SY.SYSettings.getLabel("2nd Line Mgr.");
        }).SetNestedContent(() =>
        {
            Html.DevExpress().ComboBoxFor(i => i.Hire.SecondLine, s =>
            {
                s.ShowModelErrors = true;
                s.Properties.ValidationSettings.ErrorDisplayMode = ErrorDisplayMode.ImageWithTooltip;
                s.Properties.ValidationSettings.SetFocusOnError = true;
                s.Properties.ValidationSettings.ErrorText = "*";
                s.Properties.TextFormatString = "{1}";
                s.Properties.ValueField = "Code";
                s.Properties.TextField = "Description";
                s.Properties.Columns.Add("Code", Humica.EF.Models.SY.SYSettings.getLabel("Code"), 70);
                s.Properties.Columns.Add("Description", Humica.EF.Models.SY.SYSettings.getLabel("Description"), 200);
                s.Properties.NullText = Humica.EF.Models.SY.SYSettings.getLabel("_SELECT");
            }).BindList(ViewData["POSITION_SELECT"]).Render();
        });
        g.Items.Add(m =>
        {
            m.Caption = Humica.EF.Models.SY.SYSettings.getLabel("Job Grade");
        }).SetNestedContent(() =>
        {
            Html.RenderPartial("JobGrade");
            Html.DevExpress().TextBoxFor(i => i.Hire.JobGrade, s =>
            {
                s.ClientVisible = false;
                s.Properties.ClientInstanceName = "txtJobGrade";
                s.ShowModelErrors = true;
                s.Properties.ValidationSettings.ErrorDisplayMode = ErrorDisplayMode.ImageWithTooltip;
                s.Properties.ValidationSettings.SetFocusOnError = true;
                s.Properties.ValidationSettings.ErrorText = "*";

            }).Render();
        });
        g.Items.Add(m =>
        {
            m.Caption = Humica.EF.Models.SY.SYSettings.getLabel("PayParam") + "*";
        }).SetNestedContent(() =>
        {
            Html.DevExpress().ComboBoxFor(i => i.Hire.PayParameter, s =>
            {
                s.ShowModelErrors = true;
                s.Properties.ValidationSettings.ErrorDisplayMode = ErrorDisplayMode.ImageWithTooltip;
                s.Properties.ValidationSettings.SetFocusOnError = true;
                s.Properties.ValidationSettings.ErrorText = "*";
                s.Properties.TextFormatString = "{1}";
                s.Properties.ValueField = "Code";
                s.Properties.TextField = "Description";
                s.Properties.Columns.Add("Code", Humica.EF.Models.SY.SYSettings.getLabel("Code"), 70);
                s.Properties.Columns.Add("Description", Humica.EF.Models.SY.SYSettings.getLabel("Description"), 200);
                s.Properties.NullText = Humica.EF.Models.SY.SYSettings.getLabel("_SELECT");

            }).BindList(ViewData["PERAMETER_SELECT"]).Render();
        });
        g.Items.Add(m =>
        {
            m.Caption = Humica.EF.Models.SY.SYSettings.getLabel("StaffType");
        }).SetNestedContent(() =>
        {
            Html.DevExpress().ComboBoxFor(i => i.Hire.StaffType, s =>
            {
                s.ShowModelErrors = true;
                s.Properties.ValidationSettings.ErrorDisplayMode = ErrorDisplayMode.ImageWithTooltip;
                s.Properties.ValidationSettings.SetFocusOnError = true;
                s.Properties.ValidationSettings.ErrorText = "*";
                s.Properties.TextFormatString = "{1}";
                s.Properties.ValueField = "Code";
                s.Properties.TextField = "Description";
                s.Properties.Columns.Add("Code", Humica.EF.Models.SY.SYSettings.getLabel("Code"), 70);
                s.Properties.Columns.Add("Description", Humica.EF.Models.SY.SYSettings.getLabel("Description"), 200);
                s.Properties.NullText = Humica.EF.Models.SY.SYSettings.getLabel("_SELECT");
            }).BindList(ViewData["WORKINGTYPE_SELECT"]).Render();
        });
        g.Items.Add(m =>
        {
            m.Caption = Humica.EF.Models.SY.SYSettings.getLabel("Default Roster");
        }).SetNestedContent(() =>
        {
            Html.DevExpress().ComboBoxFor(i => i.Hire.ROSTER, s =>
            {
                s.ShowModelErrors = true;
                s.Properties.ValidationSettings.ErrorDisplayMode = ErrorDisplayMode.ImageWithTooltip;
                s.Properties.ValidationSettings.SetFocusOnError = true;
                s.Properties.ValidationSettings.ErrorText = "*";
                s.Properties.TextFormatString = "{1}";
                s.Properties.ValueField = "Code";
                s.Properties.TextField = "Description";
                s.Properties.Columns.Add("Code", Humica.EF.Models.SY.SYSettings.getLabel("Code"), 70);
                s.Properties.Columns.Add("Description", Humica.EF.Models.SY.SYSettings.getLabel("Description"), 200);
                s.Properties.NullText = Humica.EF.Models.SY.SYSettings.getLabel("_SELECT");
                s.Properties.AllowNull = true;
            }).BindList(ViewData["ROSTER_SELECT"]).Render();
        });
        g.Items.Add(m =>
        {
            m.Caption = Humica.EF.Models.SY.SYSettings.getLabel("TXPayType") + "*";
        }).SetNestedContent(() =>
        {
            Html.DevExpress().ComboBoxFor(i => i.Hire.TXPayType, s =>
            {
                s.ShowModelErrors = true;
                s.Properties.ValidationSettings.ErrorDisplayMode = ErrorDisplayMode.ImageWithTooltip;
                s.Properties.ValidationSettings.SetFocusOnError = true;
                s.Properties.ValidationSettings.ErrorText = "*";
                s.Properties.TextFormatString = "{0}";
                s.Properties.ValueField = "SelectValue";
                s.Properties.TextField = "SelectText";
                s.Properties.NullText = Humica.EF.Models.SY.SYSettings.getLabel("_SELECT");
            }).BindList(ViewData["TAXPAID_SELECT"]).Render();
        });
        g.Items.Add(m =>
        {
            m.Caption = Humica.EF.Models.SY.SYSettings.getLabel("SalaryType") + "*";
        }).SetNestedContent(() =>
        {
            Html.DevExpress().ComboBoxFor(i => i.Hire.SalaryType, s =>
            {
                s.ShowModelErrors = true;
                s.Properties.ValidationSettings.ErrorDisplayMode = ErrorDisplayMode.ImageWithTooltip;
                s.Properties.ValidationSettings.SetFocusOnError = true;
                s.Properties.ValidationSettings.ErrorText = "*";
                s.Properties.TextFormatString = "{0}";
                s.Properties.ValueField = "SelectValue";
                s.Properties.TextField = "SelectText";
                s.Properties.NullText = Humica.EF.Models.SY.SYSettings.getLabel("_SELECT");
            }).BindList(ViewData["SALARYTYPE_SELECT"]).Render();
        });
        g.Items.Add(m =>
        {
            m.Caption = Humica.EF.Models.SY.SYSettings.getLabel("StartDate");
        }).SetNestedContent(() =>
        {
            Html.DevExpress().DateEditFor(i => i.Hire.StartDate, s =>
            {
                s.ShowModelErrors = true;
                s.Properties.ClientInstanceName = "txtStartDate";
                s.Properties.ValidationSettings.ErrorDisplayMode = ErrorDisplayMode.ImageWithTooltip;
                s.Properties.ValidationSettings.SetFocusOnError = true;
                s.Properties.NullText = ViewData[Humica.EF.SYSConstant.DATE_FORMAT].ToString();
                s.Properties.EditFormatString = ViewData[Humica.EF.SYSConstant.DATE_FORMAT].ToString();
                s.Properties.DisplayFormatString = ViewData[Humica.EF.SYSConstant.DATE_FORMAT].ToString();
                s.Properties.ClientSideEvents.ValueChanged = "OnClientValueChanged";
                s.Properties.ValidationSettings.ErrorText = "*";
            }).Render();
        });
        g.Items.Add(m =>
        {
            m.Caption = Humica.EF.Models.SY.SYSettings.getLabel("Salary");
        }).SetNestedContent(() =>
        {
            Html.DevExpress().SpinEditFor(i => i.Hire.Salary, s =>
            {
                s.Properties.ValidationSettings.ErrorDisplayMode = ErrorDisplayMode.ImageWithTooltip;
                s.Properties.ValidationSettings.SetFocusOnError = true;
                s.Properties.ValidationSettings.ErrorText = "*";
                s.Properties.DisplayFormatString = "N2";
                s.ControlStyle.HorizontalAlign = HorizontalAlign.Right;
            }).Render();
        });
        g.Items.Add(m =>
        {
            m.Caption = Humica.EF.Models.SY.SYSettings.getLabel("Probation Type") + "*";
        }).SetNestedContent(() =>
        {
            Html.DevExpress().ComboBoxFor(i => i.Hire.ProbationType, s =>
            {
                s.Properties.ClientInstanceName = "txtProbationType";
                s.ShowModelErrors = true;
                s.Properties.ValidationSettings.ErrorDisplayMode = ErrorDisplayMode.ImageWithTooltip;
                s.Properties.ValidationSettings.SetFocusOnError = true;
                s.Properties.ValidationSettings.ErrorText = "*";
                s.Properties.TextFormatString = "{1}";
                s.Properties.ValueField = "Code";
                s.Properties.TextField = "Description";
                s.Properties.Columns.Add("Code", Humica.EF.Models.SY.SYSettings.getLabel("Code"), 70);
                s.Properties.Columns.Add("Description", Humica.EF.Models.SY.SYSettings.getLabel("Description"), 200);
                s.Properties.NullText = Humica.EF.Models.SY.SYSettings.getLabel("_SELECT");

                s.Properties.ClientSideEvents.SelectedIndexChanged = "OnClientValueChanged";
            }).BindList(ViewData["PROBATIONTYPE_SELECT"]).Render();
        });
        g.Items.Add(m =>
        {
            m.Caption = Humica.EF.Models.SY.SYSettings.getLabel("Probation");
        }).SetNestedContent(() =>
        {
            Html.DevExpress().DateEditFor(i => i.Hire.ProbationEndDate, s =>
            {
                s.ShowModelErrors = true;
                s.Properties.ClientInstanceName = "txtProbation";
                s.Properties.ValidationSettings.ErrorDisplayMode = ErrorDisplayMode.ImageWithTooltip;
                s.Properties.ValidationSettings.SetFocusOnError = true;
                s.Properties.NullText = ViewData[Humica.EF.SYSConstant.DATE_FORMAT].ToString();
                s.Properties.EditFormatString = ViewData[Humica.EF.SYSConstant.DATE_FORMAT].ToString();
                s.Properties.DisplayFormatString = ViewData[Humica.EF.SYSConstant.DATE_FORMAT].ToString();
                s.Properties.ValidationSettings.ErrorText = "*";
            }).Render();
        });
        g.Items.Add(m =>
        {
            m.Caption = Humica.EF.Models.SY.SYSettings.getLabel("LeaveConf");
        }).SetNestedContent(() =>
        {
            Html.DevExpress().DateEditFor(i => i.Hire.LeaveConf, s =>
            {
                s.ShowModelErrors = true;
                s.Properties.ClientInstanceName = "txtLeaveConf";
                s.Properties.ValidationSettings.ErrorDisplayMode = ErrorDisplayMode.ImageWithTooltip;
                s.Properties.ValidationSettings.SetFocusOnError = true;
                s.Properties.NullText = ViewData[Humica.EF.SYSConstant.DATE_FORMAT].ToString();
                s.Properties.EditFormatString = ViewData[Humica.EF.SYSConstant.DATE_FORMAT].ToString();
                s.Properties.DisplayFormatString = ViewData[Humica.EF.SYSConstant.DATE_FORMAT].ToString();
                s.Properties.ValidationSettings.ErrorText = "*";
            }).Render();
        });
        g.Items.Add(m =>
        {
            m.Caption = Humica.EF.Models.SY.SYSettings.getLabel("Is Include in FirstPay");
        }).SetNestedContent(() =>
        {
            Html.DevExpress().CheckBoxFor(i => i.Hire.IsBiSalary, s =>
            {
                s.Properties.ValidationSettings.ErrorDisplayMode = ErrorDisplayMode.ImageWithTooltip;
                s.Properties.ValidationSettings.SetFocusOnError = true;
                s.Properties.ValidationSettings.ErrorText = "*";
            }).Render();
        });
    });

}).GetHtml()


@Html.DevExpress().PageControl(settings =>
{
    settings.Name = "pcScrollingMaterial1";
    settings.Width = Unit.Percentage(100);

    settings.EnableTabScrolling = true;
    settings.TabAlign = TabAlign.Justify;

    settings.Styles.Tab.CssClass = "scrolling_Tab";

    //settings.TabPages.Add(Humica.EF.Models.SY.SYSettings.getLabel((List<Humica.EF.MD.CFForm>)
    //    ViewData[Humica.EF.SYSConstant.LIST_CONF_FORM], "Personal Information")).SetContent(() =>
    //    {
    //       // Html.RenderPartial("TapPersonalInfor", Model);
    //    });
    settings.TabPages.Add(Humica.EF.Models.SY.SYSettings.getLabel((List<Humica.EF.MD.CFForm>
     )ViewData[Humica.EF.SYSConstant.LIST_CONF_FORM], "Photo")).SetContent(() =>
     {
         @Html.RenderPartial("TapPicture", Model);
     });
}).GetHtml()