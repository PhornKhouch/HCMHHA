
@model Humica.Logic.HR.HREmpEduObject
<script type="text/javascript">

    $(document).ready(function () {
        $('#_btnBackAction').click(function () {
            window.location = "@Humica.EF.Models.SY.SYUrl.getBaseUrl()" + "@ViewData[Humica.EF.Models.SY.SYConstant.CURRENT_URL]";
        });
        $('#_btnSaveActionGrid').click(function () {
            $("form").submit();
        });
    });
</script>

@Html.DevExpress().FormLayout(settings =>
{


       settings.Name = "MaterialCreate";
       settings.AlignItemCaptionsInAllGroups = true;

       settings.Items.AddGroupItem(m => Model.Header, g =>
       {
           g.ColCount = 3;
           g.GroupBoxDecoration = GroupBoxDecoration.None;
           g.SettingsItemCaptions.HorizontalAlign = FormLayoutHorizontalAlign.Left;

           g.Items.Add(m =>
           {
               m.Caption = Humica.EF.Models.SY.SYSettings.getLabel("EmpCode");
           })
                .SetNestedContent(() =>
                {
                    Html.DevExpress().TextBoxFor(i => i.HeaderStaff.EmpCode, s =>
                    {
                        s.ReadOnly = true;
                        s.ShowModelErrors = true;
                        s.Properties.ValidationSettings.ErrorDisplayMode = ErrorDisplayMode.ImageWithTooltip;
                        s.Properties.ValidationSettings.SetFocusOnError = true;
                        s.Properties.ValidationSettings.ErrorText = "*";
                    }).Render();
                });
           g.Items.Add(m =>
           {
               m.Caption = Humica.EF.Models.SY.SYSettings.getLabel("AllName");

           })
               .SetNestedContent(() =>
               {
                   Html.DevExpress().TextBoxFor(i => i.HeaderStaff.AllName, s =>
                   {
                       s.ReadOnly = true;
                       s.Properties.ValidationSettings.ErrorDisplayMode = ErrorDisplayMode.ImageWithTooltip;
                       s.Properties.ValidationSettings.SetFocusOnError = true;
                       s.Properties.ValidationSettings.ErrorText = "*";
                   }).Render();
               });
           g.Items.Add(m =>
           {
               m.Caption = Humica.EF.Models.SY.SYSettings.getLabel("EmployeeType");

           })
                .SetNestedContent(() =>
                {
                    Html.DevExpress().TextBoxFor(i => i.HeaderStaff.EmployeeType, s =>
                    {
                        s.ReadOnly = true;
                        s.ShowModelErrors = true;
                        s.Properties.ValidationSettings.ErrorDisplayMode = ErrorDisplayMode.ImageWithTooltip;
                        s.Properties.ValidationSettings.SetFocusOnError = true;
                        s.Properties.ValidationSettings.ErrorText = "*";
                    }).Render();
                });
           g.Items
              .Add(m =>
              {
                  m.Caption = Humica.EF.Models.SY.SYSettings.getLabel("Division");
              })
              .SetNestedContent(() =>
              {
                  Html.DevExpress().TextBoxFor(i => i.HeaderStaff.DivisionDesc, s =>
                  {
                      s.ReadOnly = true;
                      s.ShowModelErrors = true;
                      s.Properties.ValidationSettings.ErrorDisplayMode = ErrorDisplayMode.ImageWithTooltip;
                      s.Properties.ValidationSettings.SetFocusOnError = true;
                      s.Properties.ValidationSettings.ErrorText = "*";
                  }).Render();
              });
           g.Items.Add(m =>
           {
               m.Caption = Humica.EF.Models.SY.SYSettings.getLabel("Department");
           })
           .SetNestedContent(() =>
           {
               Html.DevExpress().TextBoxFor(i => i.HeaderStaff.Department, s =>
               {
                   s.ReadOnly = true;
                   s.ShowModelErrors = true;
                   s.Properties.ValidationSettings.ErrorDisplayMode = ErrorDisplayMode.ImageWithTooltip;
                   s.Properties.ValidationSettings.SetFocusOnError = true;
                   s.Properties.ValidationSettings.ErrorText = "*";
               }).Render();
           });
           g.Items.Add(m =>
           {
               m.Caption = Humica.EF.Models.SY.SYSettings.getLabel("Section");
           })
           .SetNestedContent(() =>
           {
               Html.DevExpress().TextBoxFor(i => i.HeaderStaff.Section, s =>
               {
                   s.ReadOnly = true;
                   s.ShowModelErrors = true;
                   s.Properties.ValidationSettings.ErrorDisplayMode = ErrorDisplayMode.ImageWithTooltip;
                   s.Properties.ValidationSettings.SetFocusOnError = true;
                   s.Properties.ValidationSettings.ErrorText = "*";
               }).Render();
           });
           g.Items.Add(m =>
           {
               m.Caption = Humica.EF.Models.SY.SYSettings.getLabel("LevelCode");
           })
              .SetNestedContent(() =>
              {
                  Html.DevExpress().TextBoxFor(i => i.HeaderStaff.Level, s =>
                  {
                      s.ReadOnly = true;
                      s.ShowModelErrors = true;
                      s.Properties.ValidationSettings.ErrorDisplayMode = ErrorDisplayMode.ImageWithTooltip;
                      s.Properties.ValidationSettings.SetFocusOnError = true;
                      s.Properties.ValidationSettings.ErrorText = "*";
                  }).Render();
              });
           g.Items.Add(m =>
           {
               m.Caption = Humica.EF.Models.SY.SYSettings.getLabel("Position");
           })
             .SetNestedContent(() =>
             {
                 Html.DevExpress().TextBoxFor(i => i.HeaderStaff.Position, s =>
                 {
                     s.ReadOnly = true;
                     s.ShowModelErrors = true;
                     s.Properties.ValidationSettings.ErrorDisplayMode = ErrorDisplayMode.ImageWithTooltip;
                     s.Properties.ValidationSettings.SetFocusOnError = true;
                     s.Properties.ValidationSettings.ErrorText = "*";
                 }).Render();
             });
           g.Items.Add(m =>
           {
               m.Caption = Humica.EF.Models.SY.SYSettings.getLabel("StartDate");
           })
            .SetNestedContent(() =>
            {
                Html.DevExpress().DateEditFor(i => i.HeaderStaff.StartDate, s =>
                {
                    s.ReadOnly = true;
                    s.ShowModelErrors = true;
                    s.Properties.ValidationSettings.ErrorDisplayMode = ErrorDisplayMode.ImageWithTooltip;
                    s.Properties.ValidationSettings.SetFocusOnError = true;
                    s.Properties.NullText = ViewData[Humica.EF.SYSConstant.DATE_FORMAT].ToString();
                    s.Properties.EditFormatString = ViewData[Humica.EF.SYSConstant.DATE_FORMAT].ToString();
                    s.Properties.DisplayFormatString = ViewData[Humica.EF.SYSConstant.DATE_FORMAT].ToString();
                    s.Properties.ValidationSettings.ErrorText = "*";
                }).Render();
            });
    });
}).GetHtml()
@Html.DevExpress().PageControl(settings =>
{
    settings.Name = "pcScrollingMaterial1";
    settings.Width = Unit.Percentage(100);

    settings.EnableTabScrolling = true;
    settings.TabAlign = TabAlign.Justify;

    settings.Styles.Tab.CssClass = "scrolling_Tab";
    settings.TabPages.Add(Humica.EF.Models.SY.SYSettings.getLabel("General")).SetContent(() =>
    {
        Html.DevExpress().FormLayout(s1 =>
        {
            s1.Name = "CreateStaff1";
            s1.AlignItemCaptionsInAllGroups = true;

            s1.Items.AddGroupItem(m => Model.Header, g =>
            {
                g.ColCount = 3;
                g.GroupBoxDecoration = GroupBoxDecoration.None;
                g.SettingsItemCaptions.HorizontalAlign = FormLayoutHorizontalAlign.Left;
                 g.Items.Add(m =>
           {
               m.Caption = Humica.EF.Models.SY.SYSettings.getLabel("Education Type");
           })
             .SetNestedContent(() =>
             {
                 Html.DevExpress().ComboBoxFor(i => i.Header.EduType, s =>
                 {
                     s.ShowModelErrors = true;
                     s.Properties.ValidationSettings.ErrorDisplayMode = ErrorDisplayMode.ImageWithTooltip;
                     s.Properties.ValidationSettings.SetFocusOnError = true;
                     s.Properties.ValidationSettings.ErrorText = "*";
                     s.Properties.TextField = "Description";
                     s.Properties.TextFormatString = "{1}";
                     s.Properties.ValueField = "Code";
                     s.Properties.Columns.Add("Code", Humica.EF.Models.SY.SYSettings.getLabel("Code"));
                     s.Properties.Columns.Add("Description", Humica.EF.Models.SY.SYSettings.getLabel("Description"));
                     s.Properties.NullText = Humica.EF.Models.SY.SYSettings.getLabel("_SELECT");
                 }).BindList(ViewData["HREmpEduType_LIST"]).Render();
             });
           g.Items.Add(m =>
           {
               m.Caption = Humica.EF.Models.SY.SYSettings.getLabel("StartDate");
           })
                   .SetNestedContent(() =>
                   {
                       Html.DevExpress().DateEditFor(i => i.Header.StartDate, s =>
                       {
                           s.ShowModelErrors = true;
                           s.Properties.ValidationSettings.ErrorDisplayMode = ErrorDisplayMode.ImageWithTooltip;
                           s.Properties.ValidationSettings.SetFocusOnError = true;
                           s.Properties.NullText = ViewData[Humica.EF.SYSConstant.DATE_FORMAT].ToString();
                           s.Properties.EditFormatString = ViewData[Humica.EF.SYSConstant.DATE_FORMAT].ToString();
                           s.Properties.DisplayFormatString = ViewData[Humica.EF.SYSConstant.DATE_FORMAT].ToString();
                           s.Properties.ValidationSettings.ErrorText = "*";
                       }).Render();
                   });
           g.Items.Add(m =>
           {
               m.Caption = Humica.EF.Models.SY.SYSettings.getLabel("EndDate");
           })
             .SetNestedContent(() =>
             {
                 Html.DevExpress().DateEditFor(i => i.Header.EndDate, s =>
                 {
                     s.ShowModelErrors = true;
                     s.Properties.ValidationSettings.ErrorDisplayMode = ErrorDisplayMode.ImageWithTooltip;
                     s.Properties.ValidationSettings.SetFocusOnError = true;
                     s.Properties.NullText = ViewData[Humica.EF.SYSConstant.DATE_FORMAT].ToString();
                     s.Properties.EditFormatString = ViewData[Humica.EF.SYSConstant.DATE_FORMAT].ToString();
                     s.Properties.DisplayFormatString = ViewData[Humica.EF.SYSConstant.DATE_FORMAT].ToString();
                     s.Properties.ValidationSettings.ErrorText = "*";
                 }).Render();
             });
           g.Items.Add(m =>
           {
               m.Caption = Humica.EF.Models.SY.SYSettings.getLabel("Education Institution");
           })
            .SetNestedContent(() =>
            {
                Html.DevExpress().TextBoxFor(i => i.Header.EdcCenter, s =>
                {
                    s.ShowModelErrors = true;
                    s.Properties.ValidationSettings.ErrorDisplayMode = ErrorDisplayMode.ImageWithTooltip;
                    s.Properties.ValidationSettings.SetFocusOnError = true;
                    s.Properties.ValidationSettings.ErrorText = "*";
                }).Render();
            });
           g.Items.Add(m =>
           {
               m.Caption = Humica.EF.Models.SY.SYSettings.getLabel("Major");
           })
            .SetNestedContent(() =>
            {
                Html.DevExpress().TextBoxFor(i => i.Header.Major, s =>
                {
                    s.ShowModelErrors = true;
                    s.Properties.ValidationSettings.ErrorDisplayMode = ErrorDisplayMode.ImageWithTooltip;
                    s.Properties.ValidationSettings.SetFocusOnError = true;
                    s.Properties.ValidationSettings.ErrorText = "*";
                }).Render();
            });
           g.Items.Add(m =>
           {
               m.Caption = Humica.EF.Models.SY.SYSettings.getLabel("Status");
           })
           .SetNestedContent(() =>
           {
               Html.DevExpress().TextBoxFor(i => i.Header.Result, s =>
               {
                   s.ShowModelErrors = true;
                   s.Properties.ValidationSettings.ErrorDisplayMode = ErrorDisplayMode.ImageWithTooltip;
                   s.Properties.ValidationSettings.SetFocusOnError = true;
                   s.Properties.ValidationSettings.ErrorText = "*";
               }).Render();
           });
           g.Items.Add(m =>
           {
               m.Caption = Humica.EF.Models.SY.SYSettings.getLabel("Remark");
               m.ColSpan = 3;
           })
             .SetNestedContent(() =>
          {
              Html.DevExpress().TextBoxFor(i => i.Header.Remark, s =>
              {
                  s.Width = Unit.Percentage(100);
                  s.ShowModelErrors = true;
                  s.Properties.ValidationSettings.ErrorDisplayMode = ErrorDisplayMode.ImageWithTooltip;
                  s.Properties.ValidationSettings.SetFocusOnError = true;
                  s.Properties.ValidationSettings.ErrorText = "*";
              }).Render();
          });
        g.Items.Add(m =>
        {
            m.Caption = Humica.EF.Models.SY.SYSettings.getLabel("Attach File");
        })
        .SetNestedContent(() =>
        {
            Html.DevExpress().UploadControl(ss =>
            {
                ss.ShowProgressPanel = true;
                ss.CallbackRouteValues = new { Controller = "HREmpEdu", Action = "UploadControlCallbackActionImage" };
                ss.Name = "UploadControl";
                ss.UploadMode = UploadControlUploadMode.Auto;
                ss.AutoStartUpload = true;
                ss.Width = 120;
                ss.DialogTriggerID = "externalDropZone";
                ss.AdvancedModeSettings.EnableDragAndDrop = false;
                ss.AdvancedModeSettings.EnableMultiSelect = false;
                ss.ShowTextBox = false;
                ss.ShowUploadButton = false;
                ss.ShowAddRemoveButtons = true;
                ss.ShowProgressPanel = false;
                ss.ShowClearFileSelectionButton = false;
                ss.AdvancedModeSettings.EnableFileList = true;
                ss.AdvancedModeSettings.FileListPosition = UploadControlFileListPosition.Top;
                ss.AdvancedModeSettings.ExternalDropZoneID = "externalDropZone";
                ss.AdvancedModeSettings.DropZoneText = "";
                ss.ValidationSettings.MaxFileSize = 100000000;
                ss.BrowseButton.Image.IconID = IconID.ActionsNew16x16;
                ss.UploadButton.Text = String.Empty;
                ss.ValidationSettings.AllowedFileExtensions = new string[] { ".jpg", ".jpeg", ".jpe", ".gif", ".bmp", ".png", ".pdf", ".doc", ".docx", ".xls", ".xlsx" };
                ss.ValidationSettings.ErrorStyle.CssClass = "validationMessage";
                ss.BrowseButton.Text = Humica.EF.Models.SY.SYSettings.getLabel("");
            }).Render();
            Html.DevExpress().HyperLinkFor(i => i.Header.AttachFile,
                 s =>
                 {
                     s.Name = "file_uploaded";
                     s.ToolTip = "File";
                     s.Properties.Target = "_BLANK";
                     s.ClientVisible = true;

                     s.Properties.Text = Humica.EF.Models.SY.SYSettings.getLabel("View");
                 }).GetHtml();
        });
            });
        }).GetHtml();
    });
    settings.TabPages.Add(Humica.EF.Models.SY.SYSettings.getLabel("History")).SetContent(() =>
    {
        Html.RenderPartial("GridItems", Model);
    });
}).GetHtml()
