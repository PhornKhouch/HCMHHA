@{
    Html.EnableUnobtrusiveJavaScript();
    var grid = Html.DevExpress().GridView(
    settings =>
    {
        settings.Name = "gridTaskSummary";
        settings.KeyFieldName = "TranNo";
        settings.Width = Unit.Percentage(100);
        settings.SettingsEditing.Mode = GridViewEditingMode.Inline;
        settings.SettingsEditing.NewItemRowPosition = GridViewNewItemRowPosition.Bottom;
        settings.SettingsBehavior.AllowSort = true;
        settings.CallbackRouteValues = new { Controller = "HRKPIImplement", Action = "GridTaskSummary" };

        settings.CommandColumn.Visible = false;
        settings.CommandColumn.ShowDeleteButton = true;
        settings.CommandColumn.ShowNewButtonInHeader = true;
        settings.CommandColumn.ShowCancelButton = true;
        settings.CommandColumn.ShowEditButton = true;
        settings.SettingsBehavior.AllowFocusedRow = true;

        settings.Columns.Add(column =>
        {
            column.Width = 150;
            column.FieldName = "EmpCode";
            column.Caption = Humica.EF.Models.SY.SYSettings.getLabel("EmpCode");
        });
        settings.Columns.Add(column =>
        {
            column.Caption = Humica.EF.Models.SY.SYSettings.getLabel("EmployeeName");
            column.Width = 250;
            column.FieldName = "EmployeeName";
            column.ColumnType = MVCxGridViewColumnType.TextBox;
        });
        settings.Columns.Add(column =>
        {
            column.Caption = Humica.EF.Models.SY.SYSettings.getLabel("Position");
            column.Width = 250;
            column.FieldName = "Position";
            var txtEditProperties = column.PropertiesEdit as TextEditProperties;
            txtEditProperties.ClientInstanceName = "txtPosition";
        });
        settings.Columns.Add(column =>
        {
            column.Width = 100;
            column.Caption = Humica.EF.Models.SY.SYSettings.getLabel("Actual");
            column.FieldName = "Actual";
            column.ReadOnly = true;
            column.ColumnType = MVCxGridViewColumnType.SpinEdit;
            var spinEditProperties = column.PropertiesEdit as SpinEditProperties;
            spinEditProperties.DisplayFormatString = "N2";
            spinEditProperties.Width = Unit.Percentage(100);
            spinEditProperties.MinValue = 0;
            spinEditProperties.MaxValue = 99999999999;
            spinEditProperties.Style.HorizontalAlign = System.Web.UI.WebControls.HorizontalAlign.Right;
        });
        settings.Columns.Add(column =>
        {
            column.Width = 125;
            column.Caption = Humica.EF.Models.SY.SYSettings.getLabel("Achievement") +" %";
            column.FieldName = "Achievement";
            column.ReadOnly = true;
            column.ColumnType = MVCxGridViewColumnType.SpinEdit;
            var spinEditProperties = column.PropertiesEdit as SpinEditProperties;
            spinEditProperties.DisplayFormatString = "P2";
            spinEditProperties.Width = Unit.Percentage(100);
            spinEditProperties.MinValue = 0;
            spinEditProperties.MaxValue = 99999999999;
            spinEditProperties.Style.HorizontalAlign = System.Web.UI.WebControls.HorizontalAlign.Right;

        });


        settings.SettingsEditing.BatchEditSettings.EditMode = GridViewBatchEditMode.Cell;

        settings.SettingsBehavior.AllowFocusedRow = true;

        settings.Settings.ShowHeaderFilterButton = true;

        settings.CommandColumn.FixedStyle = GridViewColumnFixedStyle.Left;

        settings.Settings.HorizontalScrollBarMode = ScrollBarMode.Visible;
        settings.Settings.VerticalScrollBarMode = ScrollBarMode.Visible;

        settings.Settings.VerticalScrollableHeight = Humica.EF.MD.SYSession.PageHieigh;

        settings.SettingsPager.PageSize = 200;
        settings.SettingsBehavior.AllowFocusedRow = true;

        settings.SettingsBehavior.ColumnResizeMode = ColumnResizeMode.Control;

        settings.CellEditorInitialize = (sender, e) =>
        {
            ASPxEdit editor = (ASPxEdit)e.Editor;
            editor.ValidationSettings.Display = Display.Dynamic;
            e.Editor.ReadOnly = false;
            if (e.KeyValue != null)
            {
                if (e.Column.FieldName != "EmpCode")
                {
                    e.Editor.ReadOnly = true;
                }
            }
        };
    });
    if (ViewData["EditError"] != null)
    {
        grid.SetEditErrorText((string)ViewData["EditError"]);
    }
}
@grid.Bind(Model).GetHtml()