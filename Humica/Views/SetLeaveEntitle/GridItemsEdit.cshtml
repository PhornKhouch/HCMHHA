
@{
    var grid = Html.DevExpress().GridView(
    settings =>
    {
        settings.Name = "gridViewItemTime";
        settings.KeyFieldName = "LineItem";
        settings.EnableTheming = true;
        settings.EnableRowsCache = true;
        settings.Width = Unit.Percentage(100);
        settings.SettingsEditing.Mode = GridViewEditingMode.Inline;
        settings.SettingsEditing.BatchEditSettings.EditMode = GridViewBatchEditMode.Cell;
        settings.SettingsEditing.NewItemRowPosition = GridViewNewItemRowPosition.Bottom;


        settings.CallbackRouteValues = new { Controller = "SetLeaveEntitle", Action = "GridItemsEdit" };

        settings.SettingsBehavior.AllowSort = false;

        settings.CommandColumn.Visible = false;
        settings.SettingsBehavior.AllowFocusedRow = true;

        settings.CommandColumn.FixedStyle = GridViewColumnFixedStyle.Left;
        settings.CommandColumn.Width = 100;

        settings.Columns.Add(column =>
        {
            column.Width = 70;
            column.Caption = Humica.EF.Models.SY.SYSettings.getLabel("No");
            column.FieldName = "LineItem";
        });
        settings.Columns.Add(column =>
        {
            column.Caption = Humica.EF.Models.SY.SYSettings.getLabel("Leave Type");
            column.Width = 130;
            column.FieldName = "LeaveCode";
            column.ColumnType = MVCxGridViewColumnType.ComboBox;
            var textProperties = column.PropertiesEdit as ComboBoxProperties;
            textProperties.DataSource = ViewData["LEAVETYPE_LIST"];
            textProperties.TextFormatString = "{0}";
            textProperties.ValueField = "Code";
            textProperties.Columns.Add("Description", Humica.EF.Models.SY.SYSettings.getLabel("Description"));
            textProperties.ValueType = typeof(string);
            textProperties.Width = Unit.Percentage(100);

        });

        settings.Columns.Add(column =>
        {
            column.Caption = Humica.EF.Models.SY.SYSettings.getLabel("FromMonth");
            column.FieldName = "FromMonth";
            column.ColumnType = MVCxGridViewColumnType.SpinEdit;

            var spinEditProperties = column.PropertiesEdit as SpinEditProperties;
            spinEditProperties.DisplayFormatString = "N0";
            spinEditProperties.NumberType = SpinEditNumberType.Integer;
            spinEditProperties.Width = Unit.Percentage(100);
            spinEditProperties.DisplayFormatInEditMode = true;
            spinEditProperties.MinValue = 0;
            spinEditProperties.MaxValue = 1000000;
            spinEditProperties.Style.HorizontalAlign = System.Web.UI.WebControls.HorizontalAlign.Right;

        });
        settings.Columns.Add(column =>
        {
            column.Caption = Humica.EF.Models.SY.SYSettings.getLabel("ToMonth");
            column.FieldName = "ToMonth";
            column.ColumnType = MVCxGridViewColumnType.SpinEdit;

            var spinEditProperties = column.PropertiesEdit as SpinEditProperties;
            spinEditProperties.DisplayFormatString = "N0";
            spinEditProperties.NumberType = SpinEditNumberType.Integer;
            spinEditProperties.Width = Unit.Percentage(100);
            spinEditProperties.DisplayFormatInEditMode = true;
            spinEditProperties.MinValue = 0;
            spinEditProperties.MaxValue = 1000000;
            spinEditProperties.Style.HorizontalAlign = System.Web.UI.WebControls.HorizontalAlign.Right;

        });
        settings.Columns.Add(column =>
        {
            column.Caption = Humica.EF.Models.SY.SYSettings.getLabel("Entitle");
            column.FieldName = "Entitle";
            column.ColumnType = MVCxGridViewColumnType.SpinEdit;

            var spinEditProperties = column.PropertiesEdit as SpinEditProperties;
            spinEditProperties.DisplayFormatString = "N2";
            spinEditProperties.Width = Unit.Percentage(100);
            spinEditProperties.DisplayFormatInEditMode = true;
            spinEditProperties.MinValue = 0;
            spinEditProperties.MaxValue = 1000000;
            spinEditProperties.Style.HorizontalAlign = System.Web.UI.WebControls.HorizontalAlign.Right;

        });
        settings.Columns.Add(column =>
        {
            column.Caption = Humica.EF.Models.SY.SYSettings.getLabel("SeniorityBalance");
            column.FieldName = "SeniorityBalance";
            column.ColumnType = MVCxGridViewColumnType.SpinEdit;

            var spinEditProperties = column.PropertiesEdit as SpinEditProperties;
            spinEditProperties.DisplayFormatString = "N2";
            spinEditProperties.Width = Unit.Percentage(100);
            spinEditProperties.DisplayFormatInEditMode = true;
            spinEditProperties.MinValue = 0;
            spinEditProperties.MaxValue = 1000000;
            spinEditProperties.Style.HorizontalAlign = System.Web.UI.WebControls.HorizontalAlign.Right;

        });
        settings.Columns.Add(column =>
        {
            column.Caption = Humica.EF.Models.SY.SYSettings.getLabel("IsProRate");
            column.FieldName = "IsProRate";
            column.ColumnType = MVCxGridViewColumnType.CheckBox;

        });
        settings.Columns.Add(column =>
        {
            column.Width = 250;
            column.FieldName = "Remark";
            column.Caption = Humica.EF.Models.SY.SYSettings.getLabel("Remark");
        });


        settings.Settings.HorizontalScrollBarMode = ScrollBarMode.Visible;

        settings.SettingsPager.PageSize = 200;
        settings.SettingsBehavior.AllowFocusedRow = true;

        settings.SettingsBehavior.ColumnResizeMode = ColumnResizeMode.Control;

        settings.CellEditorInitialize = (s, e) =>
        {
            ASPxEdit editor = (ASPxEdit)e.Editor;
            editor.ValidationSettings.Display = Display.Dynamic;
            if (e.KeyValue == null)
            {
                if (e.Column.FieldName == "LineItem")
                {
                    editor.ReadOnly = true;
                    editor.Value = -1;
                }
                if (e.Column.FieldName == "IsProRate")
                {
                    e.Editor.Value = false;
                }
            }
        };
    });

    if (ViewData["EditError"] != null)
    {
        grid.SetEditErrorText((string)ViewData["EditError"]);
    }

  }

@grid.Bind(Model).GetHtml()
