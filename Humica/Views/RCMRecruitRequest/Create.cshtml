@model Humica.Logic.RCM.RCMRecruitRequestObject

<script type="text/javascript">
    var JDCode = "@Model.Header.JDCode";
    $(document).ready(function () {
         $('#_btnBackAction').click(function () {
             window.location = "@Humica.EF.Models.SY.SYUrl.getBaseUrl()" + "@ViewData[Humica.EF.Models.SY.SYConstant.CURRENT_URL]";
         });
         $('#_btnSaveActionGrid').click(function () {
             $("form").submit();
         });
     });
    function SelectJD(s, e) {
        selectedIDs = s.GetSelectedItem().GetColumnText(0);
        ShowData();
    }
    function ShowData() {
        $.ajax({
            type: 'post',
            url: _baseUrl + '/HRM/RCM/RCMRecruitRequest/ShowData',
            data: { 'Code': selectedIDs, 'Action': 'Create' },
            success: function (data) {
                if (data.MS == "@Humica.EF.SYSConstant.OK") {

                    txtJobRespon.SetValue(data.JobRespon);
                    txtJobRequire.SetValue(data.JobRequire);
                }
                else {
                    AlertMessage(data.MS);
                }
            },
            error: function (XMLHttpRequest, textStatus, errorThrown) {
                AlertMessage(XMLHttpRequest.responseText);
            }
        });
    }
    function SelectPosition(s, e) {
        selectedIDs = s.GetSelectedItem().GetColumnText(0);
        SelectPosition_();
    }
    function selectDepartment(s, e) {
        $.ajax({
            type: 'post',
            url: _baseUrl + '/HRM/RCM/RCMRecruitRequest/JobType',
            data: { 'code': s.GetValue(), 'addType': 'Department' },
            success: function (data) {
                cboPosition.PerformCallback();
            }
        });
    }
    function SelectPosition_() {
        $.ajax({
            type: 'post',
            url: _baseUrl + '/HRM/RCM/RCMRecruitRequest/JobType',
            data: { 'Code': selectedIDs, 'addType': '' },
            success: function (data) {
                if (data.MS == "@Humica.EF.SYSConstant.OK") {
                    JBID.PerformCallback();
                }
                else {
                    AlertMessage(data.MS);
                }
            },
            error: function (XMLHttpRequest, textStatus, errorThrown) {
                AlertMessage(XMLHttpRequest.responseText);
            }
        });
    }
    function initPost(s, e) {
         $.ajax({
            type: 'post',
             url: _baseUrl + '/HRM/RCM/RCMRecruitRequest/GetJD',
             data: { 'Code': s.GetValue() },
            success: function (data) {
                if (data.MS == "@Humica.EF.SYSConstant.OK") {
                    JBID.PerformCallback();
                    JBID.SetValue(JDCode);   
                }
            }
        });
    }
    function selectParam(s, e) {
        $.ajax({
            type: 'post',
            url: _baseUrl + '/HRM/RCM/RCMRecruitRequest/SelectParam',
            data: { 'DocType': "RRF01", 'location': txtMissionType.GetValue() },
            success: function (data) {
                if (data.MS != "OK") {
                    AlertMessage(data.MS);
                } else {
                    GridItemViewApproval.Refresh();
                }
            }
        });
    }
    function approverChange(s, e) {
        ApproverName.SetValue(s.GetSelectedItem().GetColumnText(1));
        gridLevel.SetValue(s.GetSelectedItem().GetColumnText(2));

    }

</script>


@*Html.Partial("RequestFormInfor", Model)*@
@Html.DevExpress().FormLayout(settings =>
{
    settings.Name = "RequestFormInfor";
    settings.AlignItemCaptionsInAllGroups = true;
    settings.Width = Unit.Percentage(90);

    settings.Items.AddGroupItem(m => Model.Header, g =>
    {
        g.ColCount = 3;
        g.GroupBoxDecoration = GroupBoxDecoration.None;
        g.SettingsItemCaptions.HorizontalAlign = FormLayoutHorizontalAlign.Left;
        g.Items.Add(m =>
        {
            m.Caption = Humica.EF.Models.SY.SYSettings.getLabel("Branch") + "*";
            m.CaptionStyle.ForeColor = System.Drawing.Color.Red;
        }).SetNestedContent(() =>
        {
            Html.DevExpress().ComboBoxFor(i => i.Header.Branch, s =>
            {
                s.Width = Unit.Percentage(100);
                s.ShowModelErrors = true;
                s.Properties.ValidationSettings.ErrorDisplayMode = ErrorDisplayMode.ImageWithTooltip;
                s.Properties.ValidationSettings.SetFocusOnError = true;
                s.Properties.ValidationSettings.ErrorText = "*";
                s.Properties.ClientInstanceName = "txtMissionType";
                s.Properties.ValueField = "Code";
                s.Properties.TextField = "Description";
                s.Properties.TextFormatString = "{0}:{1}";
                s.Properties.Columns.Add("Code", Humica.EF.Models.SY.SYSettings.getLabel("Code"));
                s.Properties.Columns.Add("Description", Humica.EF.Models.SY.SYSettings.getLabel("Description"), 200);
                //s.Properties.NullText = Humica.EF.Models.SY.SYSettings.getLabel("_SELECT");
                s.Properties.NullText = Humica.EF.Models.SY.SYSettings.getLabel((List<Humica.EF.MD.CFForm>)
                    ViewData[Humica.EF.SYSConstant.LIST_CONF_FORM], "_SELECT");
                s.Properties.ClientSideEvents.ValueChanged = "selectParam";
            }).BindList(ViewData["BRANCHES_SELECT"]).Render();
        });
        g.Items.Add(m =>
        {
            m.Caption = Humica.EF.Models.SY.SYSettings.getLabel("Department") + "*";
            m.CaptionStyle.ForeColor = System.Drawing.Color.Red;
        }).SetNestedContent(() =>
        {
            Html.DevExpress().ComboBoxFor(i => i.Header.DEPT, s =>
            {
                s.Width = Unit.Percentage(100);
                s.ShowModelErrors = true;
                s.Properties.ValidationSettings.ErrorDisplayMode = ErrorDisplayMode.ImageWithTooltip;
                s.Properties.ValidationSettings.SetFocusOnError = true;
                s.Properties.ValidationSettings.ErrorText = "*";
                s.Properties.ValueField = "Code";
                s.Properties.TextField = "Description";
                s.Properties.TextFormatString = "{0}:{1}";
                s.Properties.Columns.Add("Code", Humica.EF.Models.SY.SYSettings.getLabel("Code"));
                s.Properties.Columns.Add("Description", Humica.EF.Models.SY.SYSettings.getLabel("Description"), 200);
                s.Properties.NullText = Humica.EF.Models.SY.SYSettings.getLabel("_SELECT");
                s.Properties.ClientSideEvents.SelectedIndexChanged = "selectDepartment";
            }).BindList(ViewData["DEPARTMENT_SELECT"]).Render();
        });
        g.Items.Add(m =>
        {
            m.Caption = Humica.EF.Models.SY.SYSettings.getLabel("Status");
        }).SetNestedContent(() =>
        {
            Html.DevExpress().TextBoxFor(i => i.Header.Status, s =>
            {
                s.ReadOnly = true;
                s.Width = Unit.Percentage(100);
                s.Properties.ClientInstanceName = "txtStatus";
                s.Properties.ValidationSettings.ErrorDisplayMode = ErrorDisplayMode.ImageWithTooltip;
                s.Properties.ValidationSettings.SetFocusOnError = true;
                s.Properties.ValidationSettings.ErrorText = "*";
            }).Render();
        });
        g.Items.Add(m =>
        {
            m.Caption = Humica.EF.Models.SY.SYSettings.getLabel("Section");
        }).SetNestedContent(() =>
        {
            Html.DevExpress().ComboBoxFor(i => i.Header.Sect, s =>
            {
                s.Width = Unit.Percentage(100);
                s.ShowModelErrors = true;
                s.Properties.ValidationSettings.ErrorDisplayMode = ErrorDisplayMode.ImageWithTooltip;
                s.Properties.ValidationSettings.SetFocusOnError = true;
                s.Properties.ValidationSettings.ErrorText = "*";
                s.Properties.ValueField = "Code";
                s.Properties.TextField = "Description";
                s.Properties.TextFormatString = "{0}:{1}";
                s.Properties.Columns.Add("Code", Humica.EF.Models.SY.SYSettings.getLabel("Code"));
                s.Properties.Columns.Add("Description", Humica.EF.Models.SY.SYSettings.getLabel("Description"), 200);
                s.Properties.NullText = Humica.EF.Models.SY.SYSettings.getLabel("_SELECT");
            }).BindList(ViewData["SECTION_SELECT"]).Render();
        });
        g.Items.Add(m =>
        {
            m.Caption = Humica.EF.Models.SY.SYSettings.getLabel("Position") + "*";
            m.CaptionStyle.ForeColor = System.Drawing.Color.Red;
        }).SetNestedContent(() =>
        {
            Html.DevExpress().ComboBoxFor(i => i.Header.POST, s =>
            {
                s.Width = Unit.Percentage(100);
                s.Properties.ClientInstanceName = "cboPosition";
                s.CallbackRouteValues = new { Controller = "RCMRecruitRequest", Action = "GetPosition" };
                s.ShowModelErrors = true;
                s.Properties.ValidationSettings.ErrorDisplayMode = ErrorDisplayMode.ImageWithTooltip;
                s.Properties.ValidationSettings.SetFocusOnError = true;
                s.Properties.AllowNull = true;
                s.Properties.ValidationSettings.ErrorText = "*";
                s.Properties.TextFormatString = "{1}";
                s.Properties.ValueField = "Code";
                s.Properties.TextField = "Description";
                s.Properties.Columns.Add("Code", Humica.EF.Models.SY.SYSettings.getLabel("Code"), 70);
                s.Properties.Columns.Add("Description", Humica.EF.Models.SY.SYSettings.getLabel("Description"), 250);
                s.Properties.NullText = Humica.EF.Models.SY.SYSettings.getLabel("_SELECT");
                s.Properties.ClientSideEvents.SelectedIndexChanged = "SelectPosition";
                //s.Properties.ClientSideEvents.Init = "initPost";
            }).BindList(Humica.Logic.RCM.RCMRecruitRequestObject.GetPosition()).Render();
            //Html.DevExpress().ComboBoxFor(i => i.Header.POST, s =>
            //{
            //    s.Width = Unit.Percentage(100);
            //    s.ShowModelErrors = true;
            //    s.Properties.ClientSideEvents.SelectedIndexChanged = "SelectPosition";
            //    s.Properties.ValidationSettings.ErrorDisplayMode = ErrorDisplayMode.ImageWithTooltip;
            //    s.Properties.ValidationSettings.SetFocusOnError = true;
            //    s.Properties.ValidationSettings.ErrorText = "*";
            //    s.Properties.ValueField = "Code";
            //    s.Properties.TextField = "Description";
            //    s.Properties.TextFormatString = "{0}:{1}";
            //    s.Properties.Columns.Add("Code", Humica.EF.Models.SY.SYSettings.getLabel("Code"));
            //    s.Properties.Columns.Add("Description", Humica.EF.Models.SY.SYSettings.getLabel("Description"), 200);
            //    s.Properties.NullText = Humica.EF.Models.SY.SYSettings.getLabel("_SELECT");
            //    s.Properties.ClientSideEvents.Init = "initPost";
            //}).BindList(ViewData["POSITION_SELECT"]).Render();
        });
        g.Items.Add(m =>
        {
            m.Caption = Humica.EF.Models.SY.SYSettings.getLabel("Level");
        }).SetNestedContent(() =>
        {
            Html.DevExpress().ComboBoxFor(i => i.Header.JobLevel, s =>
            {
                s.Width = Unit.Percentage(100);
                s.ShowModelErrors = true;
                s.Properties.ValidationSettings.ErrorDisplayMode = ErrorDisplayMode.ImageWithTooltip;
                s.Properties.ValidationSettings.SetFocusOnError = true;
                s.Properties.ValidationSettings.ErrorText = "*";
                s.Properties.ValueField = "Code";
                s.Properties.TextField = "Description";
                s.Properties.TextFormatString = "{0}:{1}";
                s.Properties.Columns.Add("Code", Humica.EF.Models.SY.SYSettings.getLabel("Code"));
                s.Properties.Columns.Add("SecDescription", Humica.EF.Models.SY.SYSettings.getLabel("Description"), 200);
                s.Properties.NullText = Humica.EF.Models.SY.SYSettings.getLabel("_SELECT");
            }).BindList(ViewData["LEVEL_SELECT"]).Render();
        });
        g.Items.Add(m =>
        {
            m.Caption = Humica.EF.Models.SY.SYSettings.getLabel("Recruit Type");
        }).SetNestedContent(() =>
        {
            Html.DevExpress().ComboBoxFor(i => i.Header.RecruitType, s =>
            {
                s.Width = Unit.Percentage(100);
                s.ShowModelErrors = true;
                s.Properties.ValidationSettings.ErrorDisplayMode = ErrorDisplayMode.ImageWithTooltip;
                s.Properties.ValidationSettings.SetFocusOnError = true;
                s.Properties.ValidationSettings.ErrorText = "*";
                s.Properties.ValueField = "SelectValue";
                s.Properties.TextField = "SelectText";
                s.Properties.NullText = Humica.EF.Models.SY.SYSettings.getLabel("_SELECT");
            }).BindList(ViewData["RECRUITTYPE_SELECT"]).Render();
        });
        g.Items.Add(m =>
        {
            m.Caption = Humica.EF.Models.SY.SYSettings.getLabel("Recruit For");
        }).SetNestedContent(() =>
        {
            Html.DevExpress().ComboBoxFor(i => i.Header.RecruitFor, s =>
            {
                s.Width = Unit.Percentage(100);
                s.ShowModelErrors = true;
                s.Properties.ValidationSettings.ErrorDisplayMode = ErrorDisplayMode.ImageWithTooltip;
                s.Properties.ValidationSettings.SetFocusOnError = true;
                s.Properties.ValidationSettings.ErrorText = "*";
                s.Properties.ValueField = "SelectValue";
                s.Properties.TextField = "SelectText";
                s.Properties.NullText = Humica.EF.Models.SY.SYSettings.getLabel("_SELECT");
            }).BindList(ViewData["RECRUITFOR_SELECT"]).Render();
        });
        g.Items.Add(m =>
        {
            m.Caption = Humica.EF.Models.SY.SYSettings.getLabel("Number of Recruitment") + "*";
            m.CaptionStyle.ForeColor = System.Drawing.Color.Red;
        }).SetNestedContent(() =>
        {
            Html.DevExpress().SpinEditFor(i => i.Header.NoOfRecruit, s =>
            {
                s.Width = Unit.Percentage(100);
                s.Properties.ClientInstanceName = "spNoOfRecruit";
                s.Properties.ValidationSettings.ErrorDisplayMode = ErrorDisplayMode.ImageWithTooltip;
                s.Properties.ValidationSettings.SetFocusOnError = true;
                s.Properties.ValidationSettings.ErrorText = "*";
                s.ControlStyle.HorizontalAlign = HorizontalAlign.Right;
            }).Render();
        });
        g.Items.Add(m =>
        {
            m.Caption = Humica.EF.Models.SY.SYSettings.getLabel("Gender");
        }).SetNestedContent(() =>
        {
            Html.DevExpress().ComboBoxFor(i => i.Header.Gender, s =>
            {
                s.Width = Unit.Percentage(100);
                s.ShowModelErrors = true;
                s.Properties.ValidationSettings.ErrorDisplayMode = ErrorDisplayMode.ImageWithTooltip;
                s.Properties.ValidationSettings.SetFocusOnError = true;
                s.Properties.ValidationSettings.ErrorText = "*";
                s.Properties.ValueField = "SelectValue";
                s.Properties.TextField = "SelectText";
                s.Properties.NullText = Humica.EF.Models.SY.SYSettings.getLabel("_SELECT");
            }).BindList(ViewData["GENDER_SELECT"]).Render();
        });
        g.Items.Add(m =>
        {
            m.Caption = Humica.EF.Models.SY.SYSettings.getLabel("Working Type");
        }).SetNestedContent(() =>
        {
            Html.DevExpress().ComboBoxFor(i => i.Header.WorkingType, s =>
            {
                s.Width = Unit.Percentage(100);
                s.ShowModelErrors = true;
                s.Properties.ValidationSettings.ErrorDisplayMode = ErrorDisplayMode.ImageWithTooltip;
                s.Properties.ValidationSettings.SetFocusOnError = true;
                s.Properties.ValidationSettings.ErrorText = "*";
                s.Properties.ValueField = "Code";
                s.Properties.TextField = "Description";
                s.Properties.NullText = Humica.EF.Models.SY.SYSettings.getLabel("_SELECT");
            }).BindList(ViewData["WORKINGTYPE_SELECT"]).Render();
        });
        g.Items.Add(m =>
        {
            m.Caption = Humica.EF.Models.SY.SYSettings.getLabel("Staff Type");
        }).SetNestedContent(() =>
        {
            Html.DevExpress().ComboBoxFor(i => i.Header.StaffType, s =>
            {
                s.Width = Unit.Percentage(100);
                s.ShowModelErrors = true;
                s.Properties.ValidationSettings.ErrorDisplayMode = ErrorDisplayMode.ImageWithTooltip;
                s.Properties.ValidationSettings.SetFocusOnError = true;
                s.Properties.ValidationSettings.ErrorText = "*";
                s.Properties.ValueField = "SelectValue";
                s.Properties.TextField = "SelectText";
                s.Properties.NullText = Humica.EF.Models.SY.SYSettings.getLabel("_SELECT");
            }).BindList(ViewData["STAFFTYPE_SELECT"]).Render();
        });
        g.Items.Add(m =>
        {
            m.Caption = Humica.EF.Models.SY.SYSettings.getLabel("Term of Employment");
        }).SetNestedContent(() =>
        {
            Html.DevExpress().ComboBoxFor(i => i.Header.TermEmp, s =>
            {
                s.Width = Unit.Percentage(100);
                s.ShowModelErrors = true;
                s.Properties.ClientInstanceName = "txtTermEmp";
                s.Properties.ValidationSettings.ErrorDisplayMode = ErrorDisplayMode.ImageWithTooltip;
                s.Properties.ValidationSettings.SetFocusOnError = true;
                s.Properties.ValidationSettings.ErrorText = "*";
                s.Properties.ValueField = "SelectValue";
                s.Properties.TextField = "SelectText";
                s.Properties.NullText = Humica.EF.Models.SY.SYSettings.getLabel("_SELECT");
            }).BindList(ViewData["TERM_SELECT"]).Render();
        });
        //g.Items.Add(m =>
        //{
        //    m.Caption = Humica.EF.Models.SY.SYSettings.getLabel("Contract FromDate");
        //}).SetNestedContent(() =>
        //{
        //    Html.DevExpress().DateEditFor(i => i.Header.ContFromDate, s =>
        //    {
        //        s.Width = Unit.Percentage(100);
        //        s.Properties.ClientInstanceName = "dtConFrom";
        //        s.ShowModelErrors = true;
        //        s.Properties.ValidationSettings.ErrorDisplayMode = ErrorDisplayMode.ImageWithTooltip;
        //        s.Properties.ValidationSettings.SetFocusOnError = true;
        //        s.Properties.NullText = ViewData[Humica.EF.SYSConstant.DATE_FORMAT].ToString();
        //        s.Properties.EditFormatString = ViewData[Humica.EF.SYSConstant.DATE_FORMAT].ToString();
        //        s.Properties.DisplayFormatString = ViewData[Humica.EF.SYSConstant.DATE_FORMAT].ToString();
        //        s.Properties.ValidationSettings.ErrorText = "*";
        //    }).Render();
        //});
        //g.Items.Add(m =>
        //{
        //    m.Caption = Humica.EF.Models.SY.SYSettings.getLabel("Contract ToDate");
        //}).SetNestedContent(() =>
        //{
        //    Html.DevExpress().DateEditFor(i => i.Header.ContToDate, s =>
        //    {
        //        s.Width = Unit.Percentage(100);
        //        s.Properties.ClientInstanceName = "dtConTo";
        //        s.ShowModelErrors = true;
        //        s.Properties.ValidationSettings.ErrorDisplayMode = ErrorDisplayMode.ImageWithTooltip;
        //        s.Properties.ValidationSettings.SetFocusOnError = true;
        //        s.Properties.NullText = ViewData[Humica.EF.SYSConstant.DATE_FORMAT].ToString();
        //        s.Properties.EditFormatString = ViewData[Humica.EF.SYSConstant.DATE_FORMAT].ToString();
        //        s.Properties.DisplayFormatString = ViewData[Humica.EF.SYSConstant.DATE_FORMAT].ToString();
        //        s.Properties.ValidationSettings.ErrorText = "*";
        //    }).Render();
        //});
        //g.Items.Add(m =>
        //{
        //    m.Caption = Humica.EF.Models.SY.SYSettings.getLabel("Gender");
        //    m.RowSpan = 3;
        //})
        //.SetNestedContent(() =>
        //{
        //    Html.DevExpress().RadioButtonListFor(i => i.Header.Gender, s =>
        //    {
        //        s.Properties.Items.Add("Female", "F");
        //        s.Properties.Items.Add("Male", "M");
        //        s.Properties.Items.Add("Both", "B");
        //    }).Render();
        //});
        //g.Items.Add(m =>
        //{
        //    m.Caption = Humica.EF.Models.SY.SYSettings.getLabel("Gender");
        //}).SetNestedContent(() =>
        //{
        //    Html.DevExpress().RadioButtonListFor(i => i.Header.Gender, s =>
        //    {
        //        s.Width = Unit.Pixel(120);
        //        s.Properties.RepeatColumns = 3;
        //        s.Properties.Items.Add("Both", "B");
        //        s.Properties.Items.Add("Female", "F");
        //        s.Properties.Items.Add("Male", "M");
        //    }).Render();
        //});
        g.Items.Add(m =>
        {
            m.Caption = Humica.EF.Models.SY.SYSettings.getLabel("ProposedSalaryFrom");
        }).SetNestedContent(() =>
        {
            Html.DevExpress().SpinEditFor(i => i.Header.ProposedSalaryFrom, s =>
            {
                s.Width = Unit.Percentage(100);
                s.Properties.ClientInstanceName = "spFromSalary";
                s.Properties.ValidationSettings.ErrorDisplayMode = ErrorDisplayMode.ImageWithTooltip;
                s.Properties.ValidationSettings.SetFocusOnError = true;
                s.Properties.ValidationSettings.ErrorText = "*";
                s.Properties.DisplayFormatString = "N2";
                s.ControlStyle.HorizontalAlign = HorizontalAlign.Right;
            }).Render();
        });
        g.Items.Add(m =>
        {
            m.Caption = Humica.EF.Models.SY.SYSettings.getLabel("To");
        }).SetNestedContent(() =>
        {
            Html.DevExpress().SpinEditFor(i => i.Header.ProposedSalaryTo, s =>
            {
                s.Width = Unit.Percentage(100);
                s.Properties.ClientInstanceName = "spToSalary";
                s.Properties.ValidationSettings.ErrorDisplayMode = ErrorDisplayMode.ImageWithTooltip;
                s.Properties.ValidationSettings.SetFocusOnError = true;
                s.Properties.ValidationSettings.ErrorText = "*";
                s.Properties.DisplayFormatString = "N2";
                s.ControlStyle.HorizontalAlign = HorizontalAlign.Right;
            }).Render();
        });
        g.Items.Add(m =>
        {
            m.Caption = Humica.EF.Models.SY.SYSettings.getLabel("Expected Date");
        }).SetNestedContent(() =>
        {
            Html.DevExpress().DateEditFor(i => i.Header.ExpectedDate, s =>
            {
                s.Width = Unit.Percentage(100);
                s.Properties.ClientInstanceName = "dtExpected";
                s.ShowModelErrors = true;
                s.Properties.ValidationSettings.ErrorDisplayMode = ErrorDisplayMode.ImageWithTooltip;
                s.Properties.ValidationSettings.SetFocusOnError = true;
                s.Properties.NullText = ViewData[Humica.EF.SYSConstant.DATE_FORMAT].ToString();
                s.Properties.EditFormatString = ViewData[Humica.EF.SYSConstant.DATE_FORMAT].ToString();
                s.Properties.DisplayFormatString = ViewData[Humica.EF.SYSConstant.DATE_FORMAT].ToString();
                s.Properties.ValidationSettings.ErrorText = "*";
            }).Render();
        });
        g.Items.Add(m =>
        {
            m.Caption = Humica.EF.Models.SY.SYSettings.getLabel("Requested By") + "*";
            m.CaptionStyle.ForeColor = System.Drawing.Color.Red;
        }).SetNestedContent(() =>
        {
            Html.DevExpress().ComboBoxFor(i => i.Header.RequestedBy, s =>
            {
                s.Width = Unit.Percentage(100);
                s.Properties.ValidationSettings.ErrorDisplayMode = ErrorDisplayMode.ImageWithTooltip;
                s.Properties.ValidationSettings.SetFocusOnError = true;
                s.Properties.ValidationSettings.ErrorText = "*";
                s.Properties.ValidationSettings.Display = Display.None;
                s.Properties.TextFormatString = "{0}:{1}";
                s.Properties.ClientInstanceName = "cbRequestBy";
                s.Properties.ValueField = "EmpCode";
                s.Properties.DropDownStyle = DropDownStyle.DropDownList;
                s.Properties.Columns.Add("EmpCode", Humica.EF.Models.SY.SYSettings.getLabel("Employee Code"));
                s.Properties.Columns.Add("AllName", Humica.EF.Models.SY.SYSettings.getLabel("Employee Name"), 200);
                s.Properties.NullText = Humica.EF.Models.SY.SYSettings.getLabel("_SELECT");
            }).BindList(ViewData["EMPCODE_SELECT"]).Render();
        });
        //g.Items.Add(m =>
        //{
        //    m.Caption = Humica.EF.Models.SY.SYSettings.getLabel("Checked By");
        //}).SetNestedContent(() =>
        //{
        //    Html.DevExpress().ComboBoxFor(i => i.Header.CheckBY, s =>
        //    {
        //        s.Width = Unit.Percentage(100);
        //        s.Properties.ValidationSettings.ErrorDisplayMode = ErrorDisplayMode.ImageWithTooltip;
        //        s.Properties.ValidationSettings.SetFocusOnError = true;
        //        s.Properties.ValidationSettings.ErrorText = "*";
        //        s.Properties.ValidationSettings.Display = Display.None;
        //        s.Properties.TextFormatString = "{0}:{1}";
        //        s.Properties.ClientInstanceName = "cbCheckBy";
        //        s.Properties.ValueField = "EmpCode";
        //        s.Properties.DropDownStyle = DropDownStyle.DropDownList;
        //        s.Properties.Columns.Add("EmpCode", Humica.EF.Models.SY.SYSettings.getLabel("Employee Code"), 120);
        //        s.Properties.Columns.Add("AllName", Humica.EF.Models.SY.SYSettings.getLabel("Employee Name"), 200);
        //        s.Properties.NullText = Humica.EF.Models.SY.SYSettings.getLabel("_SELECT");
        //        s.Properties.AllowNull = true;
        //    }).BindList(ViewData["EMPCODE_SELECT"]).Render();
        //});

        //g.Items.Add(m =>
        //{
        //    m.Caption = Humica.EF.Models.SY.SYSettings.getLabel("Acknowledged By");
        //}).SetNestedContent(() =>
        //{
        //    Html.DevExpress().ComboBoxFor(i => i.Header.AckedBy, s =>
        //    {
        //        s.Width = Unit.Percentage(100);
        //        s.Properties.ValidationSettings.ErrorDisplayMode = ErrorDisplayMode.ImageWithTooltip;
        //        s.Properties.ValidationSettings.SetFocusOnError = true;
        //        s.Properties.ValidationSettings.ErrorText = "*";
        //        s.Properties.ValidationSettings.Display = Display.None;
        //        s.Properties.TextFormatString = "{0}:{1}";
        //        s.Properties.ClientInstanceName = "cbAckBy";
        //        s.Properties.ValueField = "EmpCode";
        //        s.Properties.DropDownStyle = DropDownStyle.DropDownList;
        //        s.Properties.Columns.Add("EmpCode", Humica.EF.Models.SY.SYSettings.getLabel("Employee Code"), 120);
        //        s.Properties.Columns.Add("AllName", Humica.EF.Models.SY.SYSettings.getLabel("Employee Name"), 200);
        //        s.Properties.NullText = Humica.EF.Models.SY.SYSettings.getLabel("_SELECT");
        //        s.Properties.AllowNull = true;
        //    }).BindList(ViewData["EMPCODE_SELECT"]).Render();
        //});
        //g.Items.Add(m =>
        //{
        //    m.Caption = Humica.EF.Models.SY.SYSettings.getLabel("Approved By");
        //}).SetNestedContent(() =>
        //{
        //    Html.DevExpress().ComboBoxFor(i => i.Header.ApprovedBy, s =>
        //    {
        //        //s.ReadOnly = true;
        //        s.Width = Unit.Percentage(100);
        //        s.Properties.ValidationSettings.ErrorDisplayMode = ErrorDisplayMode.ImageWithTooltip;
        //        s.Properties.ValidationSettings.SetFocusOnError = true;
        //        s.Properties.ValidationSettings.ErrorText = "*";
        //        s.Properties.ValidationSettings.Display = Display.None;
        //        s.Properties.ClientInstanceName = "cbAckBy";
        //        s.Properties.TextFormatString = "{0}:{1}";
        //        s.Properties.ValueField = "EmpCode";
        //        s.Properties.DropDownStyle = DropDownStyle.DropDownList;
        //        s.Properties.Columns.Add("EmpCode", Humica.EF.Models.SY.SYSettings.getLabel("Employee Code"));
        //        s.Properties.Columns.Add("AllName", Humica.EF.Models.SY.SYSettings.getLabel("Employee Name"), 200);
        //    }).BindList(ViewData["EMPCODE_SELECT"]).Render();
        //});
        g.Items.Add(m =>
        {
            m.Caption = Humica.EF.Models.SY.SYSettings.getLabel("Requested Date");
        }).SetNestedContent(() =>
        {
            Html.DevExpress().DateEditFor(i => i.Header.RequestedDate, s =>
            {
                s.Width = Unit.Percentage(100);
                s.Properties.ClientInstanceName = "dtRequested";
                s.ShowModelErrors = true;
                s.Properties.ValidationSettings.ErrorDisplayMode = ErrorDisplayMode.ImageWithTooltip;
                s.Properties.ValidationSettings.SetFocusOnError = true;
                s.Properties.NullText = ViewData[Humica.EF.SYSConstant.DATE_FORMAT].ToString();
                s.Properties.EditFormatString = ViewData[Humica.EF.SYSConstant.DATE_FORMAT].ToString();
                s.Properties.DisplayFormatString = ViewData[Humica.EF.SYSConstant.DATE_FORMAT].ToString();
                s.Properties.ValidationSettings.ErrorText = "*";
            }).Render();
        });

        g.Items.Add(m =>
        {
            m.Caption = Humica.EF.Models.SY.SYSettings.getLabel("Approved Date");
        }).SetNestedContent(() =>
        {
            Html.DevExpress().DateEditFor(i => i.Header.ApprovedDate, s =>
            {
                s.ReadOnly = true;
                s.Width = Unit.Percentage(100);
                s.Properties.ClientInstanceName = "dtApproved";
                s.ShowModelErrors = true;
                s.Properties.ValidationSettings.ErrorDisplayMode = ErrorDisplayMode.ImageWithTooltip;
                s.Properties.ValidationSettings.SetFocusOnError = true;
                s.Properties.EditFormatString = ViewData[Humica.EF.SYSConstant.DATE_FORMAT].ToString();
                s.Properties.DisplayFormatString = ViewData[Humica.EF.SYSConstant.DATE_FORMAT].ToString();
                s.Properties.ValidationSettings.ErrorText = "*";
            }).Render();
        });
    });

}).GetHtml()

@Html.DevExpress().PageControl(
   settings =>
   {
       settings.Name = "pcScrollingWorkCalendar";
       settings.Width = Unit.Percentage(100);

       settings.EnableTabScrolling = true;
       settings.TabAlign = TabAlign.Justify;

       settings.Styles.Tab.CssClass = "scrolling_Tab";
       settings.TabPages.Add(Humica.EF.Models.SY.SYSettings.getLabel((List<Humica.EF.MD.CFForm>)
       ViewData[Humica.EF.SYSConstant.LIST_CONF_FORM], "JD")).SetContent(() =>
       {
           Html.RenderPartial("TabJD", Model);
       });
       settings.TabPages.Add(Humica.EF.Models.SY.SYSettings.getLabel((List<Humica.EF.MD.CFForm>)
        ViewData[Humica.EF.SYSConstant.LIST_CONF_FORM], "ApprovalDetail")).SetContent(() =>
        {
            Html.RenderPartial("GridApproval", Model.ListApproval);
        });

   }).GetHtml()
