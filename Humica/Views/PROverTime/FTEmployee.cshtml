@model Humica.Logic.PR.PROverTimeObject

@{


    Html.DevExpress().FormLayout(settings =>
    {

        settings.Name = "FTEmployee";
        settings.AlignItemCaptionsInAllGroups = true;

        settings.Items.AddGroupItem(m => Model, g =>
        {

            g.ColCount = 2;
            g.GroupBoxDecoration = GroupBoxDecoration.None;
            g.SettingsItemCaptions.HorizontalAlign = FormLayoutHorizontalAlign.Left;
            g.Items.Add(m =>
            {
                m.Caption = Humica.EF.Models.SY.SYSettings.getLabel("EmpCode");

            })
          .SetNestedContent(() =>
          {
              Html.DevExpress().ComboBoxFor(i => i.EmpCode, s =>
              {
                  s.ShowModelErrors = true;
                  s.Properties.ClientSideEvents.SelectedIndexChanged = "SelectChangeCbo";
                  s.Properties.ClientInstanceName = "cboEmpCode";
                  s.Properties.ValidationSettings.ErrorDisplayMode = ErrorDisplayMode.ImageWithTooltip;
                  s.Properties.ValidationSettings.SetFocusOnError = true;
                  s.Properties.ValidationSettings.ErrorText = "*";
                  s.Properties.TextField = "AllName";
                  s.Properties.TextFormatString = "{0}";
                  s.Properties.ValueField = "EmpCode";
                  s.Properties.Columns.Add("EmpCode", Humica.EF.Models.SY.SYSettings.getLabel("EmpCode"));
                  s.Properties.Columns.Add("AllName", Humica.EF.Models.SY.SYSettings.getLabel("AllName"));
                  s.Properties.Columns.Add("OthAllName", Humica.EF.Models.SY.SYSettings.getLabel("OthAllName"));
                  s.Properties.Columns.Add("JobCode", Humica.EF.Models.SY.SYSettings.getLabel("Position"));
                  s.Properties.NullText = Humica.EF.Models.SY.SYSettings.getLabel("_SELECT");
              }).BindList(ViewData["STAFF_SELECT"]).Render();
          });
            g.Items.Add(m =>
            {
                m.Caption = Humica.EF.Models.SY.SYSettings.getLabel("AllName");
            })
                .SetNestedContent(() =>
                {
                    Html.DevExpress().TextBoxFor(i => i.EmpName, s =>
                    {
                        s.Properties.ClientInstanceName = "txtAllName";
                        s.ReadOnly = true;
                        s.Properties.ValidationSettings.ErrorDisplayMode = ErrorDisplayMode.ImageWithTooltip;
                        s.Properties.ValidationSettings.SetFocusOnError = true;
                        s.Properties.ValidationSettings.ErrorText = "*";
                    }).Render();
                });



            g.Items
            .Add(m =>
            {
                m.Caption = Humica.EF.Models.SY.SYSettings.getLabel((List<Humica.EF.MD.CFForm>
        )ViewData[Humica.EF.SYSConstant.LIST_CONF_FORM], "FromDate");

            })
                .SetNestedContent(() =>
                {
                    Html.DevExpress().DateEditFor(i => Model.Fromdate, s =>
                    {
                        s.ShowModelErrors = true;
                        s.Properties.ValidationSettings.ErrorDisplayMode = ErrorDisplayMode.ImageWithTooltip;
                        s.Properties.ValidationSettings.SetFocusOnError = true;
                        s.Properties.ValidationSettings.ErrorText = "*";
                        s.Properties.NullText = ViewData[Humica.EF.SYSConstant.DATE_FORMAT].ToString();
                        s.Properties.EditFormatString = ViewData[Humica.EF.SYSConstant.DATE_FORMAT].ToString();
                        s.Properties.DisplayFormatString = ViewData[Humica.EF.SYSConstant.DATE_FORMAT].ToString();
                    }).Render();
                });

            g.Items
          .Add(m =>
          {
              m.Caption = Humica.EF.Models.SY.SYSettings.getLabel((List<Humica.EF.MD.CFForm>
      )ViewData[Humica.EF.SYSConstant.LIST_CONF_FORM], "ToDate");

          })
              .SetNestedContent(() =>
              {
                  Html.DevExpress().DateEditFor(i => Model.ToDate, s =>
                  {
                      s.ShowModelErrors = true;
                      s.Properties.ValidationSettings.ErrorDisplayMode = ErrorDisplayMode.ImageWithTooltip;
                      s.Properties.ValidationSettings.SetFocusOnError = true;
                      s.Properties.ValidationSettings.ErrorText = "*";
                      s.Properties.NullText = ViewData[Humica.EF.SYSConstant.DATE_FORMAT].ToString();
                      s.Properties.EditFormatString = ViewData[Humica.EF.SYSConstant.DATE_FORMAT].ToString();
                      s.Properties.DisplayFormatString = ViewData[Humica.EF.SYSConstant.DATE_FORMAT].ToString();
                  }).Render();
              });


            g.Items.Add(m =>
            {
                m.Caption = Humica.EF.Models.SY.SYSettings.getLabel("OT Type");

            })
          .SetNestedContent(() =>
          {
              Html.DevExpress().ComboBoxFor(i => i.OTType, s =>
              {
                  s.ShowModelErrors = true;
                  s.Properties.ClientSideEvents.SelectedIndexChanged = "CboChangeOTType";
                  s.Properties.ClientInstanceName = "cboOTType";
                  s.Properties.ValidationSettings.ErrorDisplayMode = ErrorDisplayMode.ImageWithTooltip;
                  s.Properties.ValidationSettings.SetFocusOnError = true;
                  s.Properties.ValidationSettings.ErrorText = "*";
                  s.Properties.TextField = "OTType";
                  s.Properties.TextFormatString = "{1}";
                  s.Properties.ValueField = "OTCode";
                  s.Properties.Columns.Add("OTCode", Humica.EF.Models.SY.SYSettings.getLabel("Code"));
                  s.Properties.Columns.Add("OTType", Humica.EF.Models.SY.SYSettings.getLabel("Description"));
                  s.Properties.NullText = Humica.EF.Models.SY.SYSettings.getLabel("_SELECT");
              }).BindList(ViewData["OTType_SELECT"]).Render();
          });


            g.Items
          .Add(m =>
          {
              m.Caption = "";

          })
            .SetNestedContent(() =>
            {

                Html.DevExpress().Button(
                    s =>
                    {
                        s.Name = "_btnRunReport";
                        s.ToolTip = Humica.EF.Models.SY.SYSettings.getLabel("Go");
                        s.RenderMode = ButtonRenderMode.Button;
                        s.Text = Humica.EF.Models.SY.SYSettings.getLabel("Go");
                        s.UseSubmitBehavior = true;
                        s.Images.Image.IconID = IconID.ActionsApply16x16;
                    }).GetHtml();
            });

        });
    }).GetHtml();

}