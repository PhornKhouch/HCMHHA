@{
    var grid = Html.DevExpress().GridView(
    settings =>
    {
        settings.Name = "gridViewItem12";
        settings.KeyFieldName = "CostCenterType";
        settings.EnableTheming = true;
        settings.EnableRowsCache = true;
        settings.Width = Unit.Percentage(100);
        settings.SettingsEditing.Mode = GridViewEditingMode.Inline;
        settings.SettingsEditing.BatchEditSettings.EditMode = GridViewBatchEditMode.Cell;
        settings.SettingsEditing.NewItemRowPosition = GridViewNewItemRowPosition.Bottom;


        settings.CallbackRouteValues = new { Controller = "PRCostCenterGroup", Action = "GridItems" };

        settings.SettingsEditing.AddNewRowRouteValues = new { Controller = "PRCostCenterGroup", Action = "CreateD" };
        settings.SettingsEditing.UpdateRowRouteValues = new { Controller = "PRCostCenterGroup", Action = "EditD" };
        settings.SettingsEditing.DeleteRowRouteValues = new { Controller = "PRCostCenterGroup", Action = "DeleteD" };

        settings.SettingsBehavior.AllowSort = false;

        settings.CommandColumn.Visible = true;
        settings.CommandColumn.ShowDeleteButton = true;
        //settings.SettingsDataSecurity.AllowReadUnlistedFieldsFromClientApi = DefaultBoolean.True;
        settings.SettingsContextMenu.Enabled = true;
        settings.SettingsContextMenu.RowMenuItemVisibility.DeleteRow = false;
        settings.SettingsContextMenu.RowMenuItemVisibility.EditRow = false;
        settings.SettingsContextMenu.RowMenuItemVisibility.NewRow = false;
        settings.Settings.ShowHeaderFilterButton = true;
        settings.SettingsPopup.HeaderFilter.Height = 200;

        settings.CommandColumn.ShowNewButtonInHeader = true;
        settings.CommandColumn.ShowCancelButton = true;
        settings.CommandColumn.ShowEditButton = true;
        settings.SettingsBehavior.AllowFocusedRow = true;
        settings.SettingsBehavior.ConfirmDelete = true;
        settings.CommandColumn.FixedStyle = GridViewColumnFixedStyle.Left;

        settings.SettingsPager.PageSizeItemSettings.Visible = true;

        // settings.CommandColumn.Width = 80;


        settings.Columns.Add(column =>
        {
            column.Caption = Humica.EF.Models.SY.SYSettings.getLabel("CostCenterType");
            column.Width = 130;
            column.FieldName = "CostCenterType";
            column.ColumnType = MVCxGridViewColumnType.ComboBox;
            var textProperties = column.PropertiesEdit as ComboBoxProperties;
            textProperties.DataSource = ViewData["CostCenter_LIST"];
            textProperties.ClientSideEvents.SelectedIndexChanged = "SelectCostCenter";
            textProperties.TextFormatString = "{0}";
            textProperties.ValueField = "Code";
            textProperties.Columns.Add("Code", Humica.EF.Models.SY.SYSettings.getLabel("Code"), 100);
            textProperties.Columns.Add("Description", Humica.EF.Models.SY.SYSettings.getLabel("Description"),200);
            textProperties.ValueType = typeof(string);
            textProperties.Width = Unit.Percentage(100);

        });
        settings.Columns.Add(column =>
        {
            column.ReadOnly = true;
            column.Width = 250;
            column.FieldName = "Description";
            column.Caption = Humica.EF.Models.SY.SYSettings.getLabel("Description");
            column.ColumnType = MVCxGridViewColumnType.TextBox;
            var spinEditProperties = column.PropertiesEdit as TextBoxProperties;
            column.PropertiesEdit.ClientInstanceName = "txtDescription";
        });
        settings.Columns.Add(column =>
        {
            column.Caption = Humica.EF.Models.SY.SYSettings.getLabel("Charge");
            column.FieldName = "Charge";
            column.ColumnType = MVCxGridViewColumnType.SpinEdit;

            var spinEditProperties = column.PropertiesEdit as SpinEditProperties;
            spinEditProperties.DisplayFormatString = "N0";
            spinEditProperties.NumberType = SpinEditNumberType.Integer;
            spinEditProperties.Width = Unit.Percentage(100);
            spinEditProperties.DisplayFormatInEditMode = true;
            spinEditProperties.MinValue = 0;
            spinEditProperties.MaxValue = 1000000;
            spinEditProperties.Style.HorizontalAlign = System.Web.UI.WebControls.HorizontalAlign.Right;

        });
        settings.Columns.Add(column =>
        {
            column.Width = 250;
            column.FieldName = "Remark";
            column.Caption = Humica.EF.Models.SY.SYSettings.getLabel("Remark");
        });
        settings.Settings.HorizontalScrollBarMode = ScrollBarMode.Visible;
        // settings.Settings.VerticalScrollBarMode = ScrollBarMode.Visible;

        settings.SettingsPager.PageSize = 200;
        settings.SettingsBehavior.AllowFocusedRow = true;

        settings.SettingsBehavior.ColumnResizeMode = ColumnResizeMode.Control;

        settings.CellEditorInitialize = (s, e) =>
        {
            if (e.Column.FieldName == "LineItem"

                )
            {
                ASPxEdit editor = (ASPxEdit)e.Editor;
                editor.ValidationSettings.Display = Display.None;
                editor.ReadOnly = true;
                editor.Value = -1;
            }
        };
    });

    if (ViewData["EditError"] != null)
    {
        grid.SetEditErrorText((string)ViewData["EditError"]);
    }

}

@grid.Bind(Model).GetHtml()
