@model Humica.Logic.Att.ATEmpSchObject

@Html.DevExpress().FormLayout(settings =>
{


    settings.Name = "FTFilter";
    settings.AlignItemCaptionsInAllGroups = true;

    int width = 150;

    settings.Items.AddGroupItem(m => Model.FMonthly, g =>
    {
        g.ColCount = 3;
        g.GroupBoxDecoration = GroupBoxDecoration.None;
        g.SettingsItemCaptions.HorizontalAlign = FormLayoutHorizontalAlign.Left;
        g.Items.Add(m =>
        {
            m.Caption = Humica.EF.Models.SY.SYSettings.getLabel("Branch");
        })
            .SetNestedContent(() =>
            {
                Html.DevExpress().ComboBoxFor(i => Model.FMonthly.Branch, s =>
                {
                    s.ShowModelErrors = true;
                    s.Properties.ValidationSettings.ErrorDisplayMode = ErrorDisplayMode.ImageWithTooltip;
                    s.Properties.ValidationSettings.SetFocusOnError = true;
                    s.Properties.ValidationSettings.ErrorText = "*";
                    s.Properties.TextFormatString = "{0}";
                    s.Properties.ValueField = "Code";
                    s.Properties.TextField = "Description";
                    s.Properties.NullText = Humica.EF.Models.SY.SYSettings.getLabel("_SELECT");
                }).BindList(ViewData["BRANCHES_SELECT"]).Render();
            });

        g.Items.Add(m =>
        {
            m.Caption = Humica.EF.Models.SY.SYSettings.getLabel("Division");
        })
       .SetNestedContent(() =>
       {
           Html.DevExpress().ComboBoxFor(i => Model.FMonthly.Division, s =>
           {
               s.ShowModelErrors = true;
               s.Properties.ValidationSettings.ErrorDisplayMode = ErrorDisplayMode.ImageWithTooltip;
               s.Properties.ValidationSettings.SetFocusOnError = true;
               s.Properties.ValidationSettings.ErrorText = "*";
               s.Properties.TextFormatString = "{0}";
               s.Properties.ValueField = "Code";
               s.Properties.TextField = "Description";
               s.Properties.NullText = Humica.EF.Models.SY.SYSettings.getLabel("_SELECT");
           }).BindList(ViewData["DIVISION_SELECT"]).Render();
       });
        g.Items.Add(m =>
        {
            m.Caption = Humica.EF.Models.SY.SYSettings.getLabel("Location");
        })
         .SetNestedContent(() =>
         {
             Html.DevExpress().ComboBoxFor(i => Model.FMonthly.Location, s =>
             {
                 s.ShowModelErrors = true;
                 s.Properties.AllowNull = true;
                 s.Properties.ValidationSettings.ErrorDisplayMode = ErrorDisplayMode.ImageWithTooltip;
                 s.Properties.ValidationSettings.SetFocusOnError = true;
                 s.Properties.ValidationSettings.ErrorText = "*";
                 s.Properties.TextFormatString = "{0}";
                 s.Properties.ValueField = "Code";
                 s.Properties.TextField = "Description";
                 s.Properties.NullText = Humica.EF.Models.SY.SYSettings.getLabel("_SELECT");
             }).BindList(ViewData["LOCATION_SELECT"]).Render();
         });
        g.Items.Add(m =>
        {
            m.Caption = Humica.EF.Models.SY.SYSettings.getLabel("Department");
        })
            .SetNestedContent(() =>
            {
                Html.DevExpress().ComboBoxFor(i => Model.FMonthly.Department, s =>
                {
                    s.ShowModelErrors = true;
                    s.Properties.ValidationSettings.ErrorDisplayMode = ErrorDisplayMode.ImageWithTooltip;
                    s.Properties.ValidationSettings.SetFocusOnError = true;
                    s.Properties.ValidationSettings.ErrorText = "*";
                    s.Properties.TextFormatString = "{0}";
                    s.Properties.ValueField = "Code";
                    s.Properties.TextField = "Description";
                    s.Properties.NullText = Humica.EF.Models.SY.SYSettings.getLabel("_SELECT");
                }).BindList(ViewData["DEPARTMENT_SELECT"]).Render();
            });

        g.Items.Add(m =>
        {
            m.Caption = Humica.EF.Models.SY.SYSettings.getLabel("InMonth");
        })
            .SetNestedContent(() =>
            {
                Html.DevExpress().DateEditFor(i => Model.FMonthly.InMonth, s =>
                {
                    s.ShowModelErrors = true;
                    s.Properties.ValidationSettings.ErrorDisplayMode = ErrorDisplayMode.ImageWithTooltip;
                    s.Properties.ValidationSettings.SetFocusOnError = true;
                    s.Properties.ValidationSettings.ErrorText = "*";
                    s.Properties.NullText = ViewData[Humica.EF.SYSConstant.DATE_FORMAT_PERIOD].ToString();
                    s.Properties.EditFormatString = ViewData[Humica.EF.SYSConstant.DATE_FORMAT_PERIOD].ToString();
                    s.Properties.DisplayFormatString = ViewData[Humica.EF.SYSConstant.DATE_FORMAT_PERIOD].ToString();
                }).Render();
            });

        g.Items.Add(m =>
        {
            m.Caption = "";
        })
          .SetNestedContent(() =>
          {
              Html.DevExpress().Button(
                  s =>
                  {
                      s.Name = "_btnRunReport";
                      s.ToolTip = Humica.EF.Models.SY.SYSettings.getLabel("Go");
                      s.RenderMode = ButtonRenderMode.Button;
                      s.Text = Humica.EF.Models.SY.SYSettings.getLabel("Go");
                      s.UseSubmitBehavior = true;
                      s.Images.Image.IconID = IconID.ActionsApply16x16;
                  }).GetHtml();
          });

    });

}).Bind(Model).GetHtml()