@model Humica.Logic.Att.ATEmpSchObject

<script type="text/javascript">
    var status = "@Model.RosterHeader.Status";
     $(document).ready(function () {
        $('#_btnBackAction').click(function () {
            window.location = "@Humica.EF.Models.SY.SYUrl.getBaseUrl()" + "@ViewData[Humica.EF.Models.SY.SYConstant.CURRENT_URL]";
        });

     });
</script>


@*@Html.DevExpress().FormLayout(settings =>
{
    settings.Name = "Details";
    settings.AlignItemCaptionsInAllGroups = true;
    settings.Width = Unit.Percentage(80);
    settings.Items.AddGroupItem(m => Model.RosterHeader, g =>
    {
        g.ColCount = 2;
        g.GroupBoxDecoration = GroupBoxDecoration.None;
        g.SettingsItemCaptions.HorizontalAlign = FormLayoutHorizontalAlign.Left;
        g.Items.Add(m =>
        {
            m.Caption = Humica.EF.Models.SY.SYSettings.getLabel("UploadBy");
        })
           .SetNestedContent(() =>
           {
               Html.DevExpress().TextBoxFor(i => i.RosterHeader.UploadBy, s =>
               {
                   s.ReadOnly = true;
                   s.Properties.ValidationSettings.ErrorDisplayMode = ErrorDisplayMode.ImageWithTooltip;
                   s.Properties.ValidationSettings.SetFocusOnError = true;
                   s.Properties.ValidationSettings.ErrorText = "*";
               }).Render();
           });
        g.Items.Add(m =>
        {
            m.Caption = Humica.EF.Models.SY.SYSettings.getLabel("UploadDate");
        })
        .SetNestedContent(() =>
        {
            Html.DevExpress().DateEditFor(i => i.RosterHeader.UploadDate, s =>
            {
                s.ReadOnly = true;
                s.ShowModelErrors = true;
                s.Properties.ValidationSettings.ErrorDisplayMode = ErrorDisplayMode.ImageWithTooltip;
                s.Properties.ValidationSettings.SetFocusOnError = true;
                s.Properties.NullText = ViewData[Humica.EF.SYSConstant.DATE_FORMAT].ToString();
                s.Properties.DisplayFormatString = ViewData[Humica.EF.SYSConstant.DATE_FORMAT].ToString();
                s.Properties.ValidationSettings.ErrorText = "*";
            }).Render();
        });
        g.Items.Add(m =>
        {
            m.Caption = Humica.EF.Models.SY.SYSettings.getLabel("InMonth");
        })
       .SetNestedContent(() =>
       {
           Html.DevExpress().DateEditFor(i => i.RosterHeader.InMonth, s =>
           {
               s.ReadOnly = true;
               s.ShowModelErrors = true;
               s.Properties.ValidationSettings.ErrorDisplayMode = ErrorDisplayMode.ImageWithTooltip;
               s.Properties.ValidationSettings.SetFocusOnError = true;
               s.Properties.NullText = ViewData[Humica.EF.SYSConstant.DATE_FORMAT].ToString();
               s.Properties.DisplayFormatString = "MMMM yyyy";
               s.Properties.ValidationSettings.ErrorText = "*";
           }).Render();
       });
        g.Items.Add(m =>
        {
            m.Caption = Humica.EF.Models.SY.SYSettings.getLabel("Status");
        })
           .SetNestedContent(() =>
           {
               Html.DevExpress().TextBoxFor(i => i.RosterHeader.Status, s =>
               {
                   s.ReadOnly = true;
                   s.Properties.ClientInstanceName = "txtStatus";
                   s.Properties.ValidationSettings.ErrorDisplayMode = ErrorDisplayMode.ImageWithTooltip;
                   s.Properties.ValidationSettings.SetFocusOnError = true;
                   s.Properties.ValidationSettings.ErrorText = "*";
               }).Render();
           });
    });
}).GetHtml()*@


@Html.DevExpress().PageControl(settings =>
{
    settings.Name = "pcScrollingMaterial1";
    settings.Width = Unit.Percentage(100);
    settings.EnableTabScrolling = true;
    settings.TabAlign = TabAlign.Justify;
    settings.Styles.Tab.CssClass = "scrolling_Tab";
    settings.TabPages.Add(Humica.EF.Models.SY.SYSettings.getLabel("ApprovalDetail")).SetContent(() =>
        {
            Html.RenderPartial("GridApprovalDetail", Model.ListApproval);
        });
}).GetHtml()


