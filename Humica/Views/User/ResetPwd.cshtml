@model Humica.EF.Models.SY.SYUserObject

<script type="text/javascript">

    $(document).ready(function () {
        $('#_btnBackAction').click(function () {
            window.location = "@Humica.EF.Models.SY.SYUrl.getBaseUrl()"+"@ViewData[Humica.EF.Models.SY.SYConstant.CURRENT_URL].ToString()";
        });
        $('#_btnSaveActionGrid').click(function () {
            $('form').submit();
        });
    });

</script>



<script type="text/javascript" src="~/Content/NUser.js">

</script>


@Html.DevExpress().FormLayout(settings =>
   {


       settings.Name = "ChangePassword";
       settings.AlignItemCaptionsInAllGroups = true;

       settings.Items.AddGroupItem(m => Model.User, g =>
       {
           g.ColCount = 2;
           g.GroupBoxDecoration = GroupBoxDecoration.None;
           g.SettingsItemCaptions.HorizontalAlign = FormLayoutHorizontalAlign.Right;


           g.Items
               .Add(m =>
               {
                   m.Caption = Humica.EF.Models.SY.SYSettings.getLabel((List<Humica.EF.MD.CFForm>)
                       ViewData[Humica.EF.SYSConstant.LIST_CONF_FORM], "UserName");

               })
               .SetNestedContent(() =>
               {
                   Html.DevExpress().TextBoxFor(i => i.UserObject.UserName, s =>
                   {
                       s.Enabled = false;
                       s.ShowModelErrors = true;
                       s.Properties.ValidationSettings.ErrorDisplayMode = ErrorDisplayMode.ImageWithTooltip;
                       s.Properties.ValidationSettings.SetFocusOnError = true;
                       s.Properties.ValidationSettings.ErrorText = "*";
                   }).Render();
               });

           g.Items
             .Add(m =>
             {
                 m.Caption = Humica.EF.Models.SY.SYSettings.getLabel((List<Humica.EF.MD.CFForm>)
                     ViewData[Humica.EF.SYSConstant.LIST_CONF_FORM], "LoginName");

             })
             .SetNestedContent(() =>
             {
                 Html.DevExpress().TextBoxFor(i => i.UserObject.LoginName, s =>
                 {
                     s.ShowModelErrors = true;
                     s.Properties.ValidationSettings.ErrorDisplayMode = ErrorDisplayMode.ImageWithTooltip;
                     s.Properties.ValidationSettings.SetFocusOnError = true;
                     s.Properties.ValidationSettings.ErrorText = "*";
                 }).Render();
             });

       });


       settings.Items.AddGroupItem(m => Model.User, g =>
       {
           g.ColCount = 2;
           g.GroupBoxDecoration = GroupBoxDecoration.None;
           g.SettingsItemCaptions.HorizontalAlign = FormLayoutHorizontalAlign.Right;

           g.Items
           .Add(m =>
           {
               m.Caption = Humica.EF.Models.SY.SYSettings.getLabel((List<Humica.EF.MD.CFForm>)
                   ViewData[Humica.EF.SYSConstant.LIST_CONF_FORM], "Password");

           })
           .SetNestedContent(() =>
           {
               Html.DevExpress().TextBoxFor(i => i.UserObject.Password, s =>
               {
                   s.ShowModelErrors = true;
                   s.Properties.ValidationSettings.ErrorDisplayMode = ErrorDisplayMode.ImageWithTooltip;
                   s.Properties.Password = s.Name.Contains("Password");
                   s.Properties.ValidationSettings.SetFocusOnError = true;
                   s.Properties.ValidationSettings.ErrorText = "*";
               }).Render();
           });

           g.Items
         .Add(m =>
         {
             m.Caption = Humica.EF.Models.SY.SYSettings.getLabel((List<Humica.EF.MD.CFForm>)
                 ViewData[Humica.EF.SYSConstant.LIST_CONF_FORM], "RePassword");

         })
         .SetNestedContent(() =>
         {
             Html.DevExpress().TextBox(s =>
             {
                 s.Name = "RePassword";
                 s.ShowModelErrors = true;
                 s.Properties.ValidationSettings.ErrorDisplayMode = ErrorDisplayMode.ImageWithTooltip;
                 s.Properties.Password = s.Name.Contains("Password");
                 s.Properties.ValidationSettings.SetFocusOnError = true;
                 s.Properties.ValidationSettings.ErrorText = "*";
             }).Render();
         });


       });

   }).GetHtml()
























