@model Humica.Core.FT.FTFilterEmployee

@Html.DevExpress().FormLayout(settings =>
{


    settings.Name = "FTGernalAccounting";
    settings.AlignItemCaptionsInAllGroups = true;

    settings.Items.AddGroupItem(m => Model, g =>
    {
        g.ColCount = 2;
        g.GroupBoxDecoration = GroupBoxDecoration.None;
        g.SettingsItemCaptions.HorizontalAlign = FormLayoutHorizontalAlign.Left;
        g.Items.AddGroupItem(m => Model, g1 =>
        {
            g1.ColCount = 2;
            g1.GroupBoxDecoration = GroupBoxDecoration.None;
            g1.SettingsItemCaptions.HorizontalAlign = FormLayoutHorizontalAlign.Left;
            g1.Caption = "";
            g1.Items.Add(m =>
            {
                m.Caption = Humica.EF.Models.SY.SYSettings.getLabel("Branch");
            })
           .SetNestedContent(() =>
           {
               Html.DevExpress().ComboBoxFor(i => Model.Branch, s =>
               {
                   s.ShowModelErrors = true;
                   s.Properties.ValidationSettings.ErrorDisplayMode = ErrorDisplayMode.ImageWithTooltip;
                   s.Properties.ValidationSettings.SetFocusOnError = true;
                   s.Properties.ValidationSettings.ErrorText = "*";
                   s.Properties.TextFormatString = "{0}";
                   s.Properties.ValueField = "Code";
                   s.Properties.TextField = "Description";
                   s.Properties.NullText = Humica.EF.Models.SY.SYSettings.getLabel("_SELECT");
               }).BindList(ViewData["BRANCHES_SELECT"]).Render();
           });
            g1.Items.Add(m =>
            {
                m.Caption = Humica.EF.Models.SY.SYSettings.getLabel("Division");
            })
          .SetNestedContent(() =>
          {
              Html.DevExpress().DropDownEditFor(i => Model.Division, a =>
              {
                  a.Name = "checkComboBox";
                  // a.Width = 100;
                  //a.Properties.DropDownWindowStyle.BackColor = Color.FromArgb(0xEDEDED);

                  a.SetDropDownWindowTemplateContent(c =>
                  {
                      Html.DevExpress().ListBox(listBoxSettings =>
                      {
                          listBoxSettings.Name = "checkListBox";
                          listBoxSettings.ControlStyle.Border.BorderWidth = 0;
                          listBoxSettings.ControlStyle.BorderBottom.BorderWidth = 1;
                          //listBoxSettings.ControlStyle.BorderBottom.BorderColor = Color.FromArgb(0xDCDCDC);
                          listBoxSettings.Height = Unit.Pixel(200);
                          listBoxSettings.Width = Unit.Percentage(100);

                          // listBoxSettings.Properties.EnableSelectAll = true;
                          //listBoxSettings.Properties.FilteringSettings.ShowSearchUI = true;
                          listBoxSettings.Properties.SelectionMode = ListEditSelectionMode.CheckColumn;
                          listBoxSettings.Properties.ValueField = "Code";
                          listBoxSettings.Properties.TextField = "Description";

                          listBoxSettings.Properties.ClientSideEvents.SelectedIndexChanged = "updateText";
                          listBoxSettings.Properties.ClientSideEvents.Init = "updateText";
                      }).BindList(ViewData["Division_SELECT"]).Render();

                      Html.DevExpress().TextBoxFor(i => Model.ListDivision, buttonSettings =>
                      {
                          buttonSettings.Properties.ClientInstanceName = "txtDivision";
                          buttonSettings.ClientVisible = false;
                      }).Render();
                  });
                  a.Properties.AnimationType = AnimationType.None;
                  a.Properties.ClientSideEvents.TextChanged = "synchronizeListBoxValues";
                  a.Properties.ClientSideEvents.DropDown = "synchronizeListBoxValues";
              }).Render();

          });
            g1.Items.Add(m =>
            {
                m.Caption = Humica.EF.Models.SY.SYSettings.getLabel("Department");
            })
                .SetNestedContent(() =>
                {
                    Html.DevExpress().ComboBoxFor(i => Model.Department, s =>
                    {
                        s.ShowModelErrors = true;
                        s.Properties.ValidationSettings.ErrorDisplayMode = ErrorDisplayMode.ImageWithTooltip;
                        s.Properties.ValidationSettings.SetFocusOnError = true;
                        s.Properties.ValidationSettings.ErrorText = "*";
                        s.Properties.TextFormatString = "{0}";
                        s.Properties.ValueField = "Code";
                        s.Properties.TextField = "Description";
                        s.Properties.NullText = Humica.EF.Models.SY.SYSettings.getLabel("_SELECT");
                    }).BindList(ViewData["DEPARTMENT_SELECT"]).Render();
                });
            g1.Items.Add(m =>
            {
                m.Caption = Humica.EF.Models.SY.SYSettings.getLabel("Section");
            })
                .SetNestedContent(() =>
                {
                    Html.DevExpress().ComboBoxFor(i => Model.Section, s =>
                    {
                        s.ShowModelErrors = true;
                        s.Properties.ValidationSettings.ErrorDisplayMode = ErrorDisplayMode.ImageWithTooltip;
                        s.Properties.ValidationSettings.SetFocusOnError = true;
                        s.Properties.ValidationSettings.ErrorText = "*";
                        s.Properties.TextFormatString = "{0}";
                        s.Properties.ValueField = "Code";
                        s.Properties.TextField = "Description";
                        s.Properties.NullText = Humica.EF.Models.SY.SYSettings.getLabel("_SELECT");
                    }).BindList(ViewData["SECTION_SELECT"]).Render();
                });
            g1.Items.Add(m =>
            {
                m.Caption = Humica.EF.Models.SY.SYSettings.getLabel("Position");
            })
                .SetNestedContent(() =>
                {
                    Html.DevExpress().ComboBoxFor(i => Model.Position, s =>
                    {
                        s.ShowModelErrors = true;
                        s.Properties.ValidationSettings.ErrorDisplayMode = ErrorDisplayMode.ImageWithTooltip;
                        s.Properties.ValidationSettings.SetFocusOnError = true;
                        s.Properties.ValidationSettings.ErrorText = "*";
                        s.Properties.TextFormatString = "{0}";
                        s.Properties.ValueField = "Code";
                        s.Properties.TextField = "Description";
                        s.Properties.NullText = Humica.EF.Models.SY.SYSettings.getLabel("_SELECT");
                    }).BindList(ViewData["POSITION_SELECT"]).Render();
                });
            g1.Items.Add(m =>
            {
                m.Caption = Humica.EF.Models.SY.SYSettings.getLabel("LevelCode");
            })
                .SetNestedContent(() =>
                {
                    Html.DevExpress().ComboBoxFor(i => Model.Level, s =>
                    {
                        s.ShowModelErrors = true;
                        s.Properties.ValidationSettings.ErrorDisplayMode = ErrorDisplayMode.ImageWithTooltip;
                        s.Properties.ValidationSettings.SetFocusOnError = true;
                        s.Properties.ValidationSettings.ErrorText = "*";
                        s.Properties.TextFormatString = "{0}";
                        s.Properties.ValueField = "Code";
                        s.Properties.TextField = "Description";
                        s.Properties.NullText = Humica.EF.Models.SY.SYSettings.getLabel("_SELECT");
                    }).BindList(ViewData["LEVEL_SELECT"]).Render();
                });

            g1.Items.Add(m =>
            {
                m.Caption = Humica.EF.Models.SY.SYSettings.getLabel("InMonth");
            })
               .SetNestedContent(() =>
               {
                   Html.DevExpress().DateEditFor(i => Model.InMonth, s =>
                   {
                       s.ShowModelErrors = true;
                       s.Properties.ValidationSettings.ErrorDisplayMode = ErrorDisplayMode.ImageWithTooltip;
                       s.Properties.ValidationSettings.SetFocusOnError = true;
                       s.Properties.ValidationSettings.ErrorText = "*";
                       s.Properties.PickerType = DatePickerType.Months;
                       s.Properties.NullText = ViewData[Humica.EF.SYSConstant.DATE_FORMAT_PERIOD].ToString();
                       s.Properties.EditFormatString = ViewData[Humica.EF.SYSConstant.DATE_FORMAT_PERIOD].ToString();
                       s.Properties.DisplayFormatString = ViewData[Humica.EF.SYSConstant.DATE_FORMAT_PERIOD].ToString();
                   }).Render();
               });

        });
    });


}).Bind(Model).GetHtml()