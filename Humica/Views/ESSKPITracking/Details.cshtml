@model Humica.Performance.IClsKPITracking
<script type="text/javascript">
    var status = "@Model.HeaderKPITracking.Status";
    $(document).ready(function () {
        $('#_btnBackAction').click(function () {
            window.location = "@Humica.EF.Models.SY.SYUrl.getBaseUrl()" + "@ViewData[Humica.EF.Models.SY.SYConstant.CURRENT_URL]";
        });
        $('#_btnDeleteAction').click(function () {
            ss = 4;
            if (status == "@Humica.EF.SYDocumentStatus.PENDING.ToString()") {
                ConfirmMessage("@Humica.EF.Models.SY.SYMessages.getMessage("DELETE_C", Humica.EF.MD.SYSession.getSessionUser().Lang)");
            }
            else {
                AlertMessage("@Humica.EF.Models.SY.SYMessages.getMessage("DOC_INV", Humica.EF.MD.SYSession.getSessionUser().Lang)");
            }
        });
        $('#_bthEditAction').click(function () {
            if (status == "@Humica.EF.SYDocumentStatus.PENDING.ToString()") {
                window.location = "@Humica.EF.Models.SY.SYUrl.getBaseUrl()" + "@ViewData[Humica.EF.Models.SY.SYConstant.CURRENT_URL]" + "Edit?id=@ViewData[Humica.EF.Models.SY.SYConstant.PARAM_ID].ToString()";
            }
            else {
                AlertMessage("@Humica.EF.Models.SY.SYMessages.getMessage("DOC_INV", Humica.EF.MD.SYSession.getSessionUser().Lang)");
            }
        });
    });
    function _clickMenuAction(s, e) {
        if (e.item.name == "_mnRequest") {
            ss = 2;
            if (status == "@Humica.EF.SYDocumentStatus.OPEN.ToString()") {
                ConfirmMessage("@Humica.EF.Models.SY.SYMessages.getMessage("REQUEST_C", Humica.EF.MD.SYSession.getSessionUser().Lang)");
            }
            else {
                AlertMessage("@Humica.EF.Models.SY.SYMessages.getMessage("DOC_INV", Humica.EF.MD.SYSession.getSessionUser().Lang)");
            }
        }
        if (e.item.name == "_mnApprove") {
            ss = 3;
            if (status == "@Humica.EF.SYDocumentStatus.PENDING.ToString()") {
                ConfirmMessage("@Humica.EF.Models.SY.SYMessages.getMessage("APPROVE_C", Humica.EF.MD.SYSession.getSessionUser().Lang)");
            }
            else {
                AlertMessage("@Humica.EF.Models.SY.SYMessages.getMessage("DOC_INV", Humica.EF.MD.SYSession.getSessionUser().Lang)");
            }
        }
    }
    function _clickConfirm(s, e) {
        if (s.GetText() == "@Humica.EF.Models.SY.SYConstant.OK") {
            if (ss == 4) {
                window.location = "@Humica.EF.Models.SY.SYUrl.getBaseUrl()" + "@ViewData[Humica.EF.Models.SY.SYConstant.CURRENT_URL]" + "Delete?id=@ViewData[Humica.EF.Models.SY.SYConstant.PARAM_ID].ToString()";
            }
        }
        if (ss == 2) {
            window.location = "@Humica.EF.Models.SY.SYUrl.getBaseUrl()" + "@ViewData[Humica.EF.Models.SY.SYConstant.CURRENT_URL]" + "RequestForApproval?id=@ViewData[Humica.EF.Models.SY.SYConstant.PARAM_ID].ToString()";
        }
        if (ss == 3) {
            window.location = "@Humica.EF.Models.SY.SYUrl.getBaseUrl()" + "@ViewData[Humica.EF.Models.SY.SYConstant.CURRENT_URL]" + "Approve?id=" + "@ViewData[Humica.EF.Models.SY.SYConstant.PARAM_ID].ToString()";
        }
    }


</script>
@Html.DevExpress().FormLayout(settings =>
{

    settings.Name = "MaterialCreate";
    settings.AlignItemCaptionsInAllGroups = true;

    settings.Items.AddGroupItem(m => Model.HeaderKPITracking, g =>
    {
        g.ColCount = 3;
        g.GroupBoxDecoration = GroupBoxDecoration.None;
        g.SettingsItemCaptions.HorizontalAlign = FormLayoutHorizontalAlign.Left;
        g.Items.Add(m =>
        {
            m.Caption = Humica.EF.Models.SY.SYSettings.getLabel("EmpCode");
        })
        .SetNestedContent(() =>
        {
            Html.DevExpress().TextBoxFor(i => i.HeaderKPITracking.EmpCode, s =>
            {
                s.ReadOnly = true;
                s.Width = Unit.Percentage(85);
                s.Properties.ClientInstanceName = "cboEmployee";
                s.ShowModelErrors = true;
                s.Properties.ValidationSettings.ErrorDisplayMode = ErrorDisplayMode.ImageWithTooltip;
                s.Properties.ValidationSettings.SetFocusOnError = true;
                s.Properties.ValidationSettings.ErrorText = "*";
                s.Properties.NullText = Humica.EF.Models.SY.SYSettings.getLabel("_SELECT");
            }).Render();
        });
        g.Items.Add(m =>
        {
            m.Caption = Humica.EF.Models.SY.SYSettings.getLabel("Employee Name");
        })
        .SetNestedContent(() =>
        {
            Html.DevExpress().TextBoxFor(i => i.HeaderKPITracking.EmpName, s =>
            {
                s.Width = Unit.Percentage(100);
                s.ShowModelErrors = true;
                s.ReadOnly = true;
                s.Properties.ClientInstanceName = "txtAllName";
                s.Properties.ValidationSettings.ErrorDisplayMode = ErrorDisplayMode.ImageWithTooltip;
                s.Properties.ValidationSettings.SetFocusOnError = true;
                s.Properties.ValidationSettings.ErrorText = "*";
            }).Render();
        });
        g.Items.Add(m =>
        {
            m.Caption = Humica.EF.Models.SY.SYSettings.getLabel("Status");
        }).SetNestedContent(() =>
        {
            Html.DevExpress().TextBoxFor(i => i.HeaderKPITracking.Status, s =>
            {
                s.Width = Unit.Percentage(100);
                s.ReadOnly = true;
                s.Properties.ValidationSettings.ErrorDisplayMode = ErrorDisplayMode.ImageWithTooltip;
                s.Properties.ValidationSettings.SetFocusOnError = true;
                s.Properties.ValidationSettings.ErrorText = "*";
            }).Render();
        });
        g.Items.Add(m =>
        {
            m.Caption = Humica.EF.Models.SY.SYSettings.getLabel("Department");
        })
        .SetNestedContent(() =>
        {
            Html.DevExpress().TextBoxFor(i => i.HeaderKPITracking.Department, s =>
            {
                s.Width = Unit.Percentage(100);
                s.ShowModelErrors = true;
                s.ReadOnly = true;
                s.Properties.ValidationSettings.ErrorDisplayMode = ErrorDisplayMode.ImageWithTooltip;
                s.Properties.ValidationSettings.SetFocusOnError = true;
                s.Properties.ValidationSettings.ErrorText = "*";
            }).Render();
        });
        g.Items.Add(m =>
        {
            m.Caption = Humica.EF.Models.SY.SYSettings.getLabel("Position");
        })
        .SetNestedContent(() =>
        {
            Html.DevExpress().TextBoxFor(i => i.HeaderKPITracking.Position, s =>
            {
                s.Width = Unit.Percentage(100);
                s.ShowModelErrors = true;
                s.ReadOnly = true;
                s.Properties.ClientInstanceName = "txtAllName";
                s.Properties.ValidationSettings.ErrorDisplayMode = ErrorDisplayMode.ImageWithTooltip;
                s.Properties.ValidationSettings.SetFocusOnError = true;
                s.Properties.ValidationSettings.ErrorText = "*";
            }).Render();
        });
        g.Items.Add(m =>
        {
            m.Caption = Humica.EF.Models.SY.SYSettings.getLabel("DocumentDate");
        })
        .SetNestedContent(() =>
        {
            Html.DevExpress().DateEditFor(i => i.HeaderKPITracking.DocumentDate, s =>
            {
                s.ReadOnly = true;
                s.ShowModelErrors = true;
                s.Properties.ValidationSettings.ErrorDisplayMode = ErrorDisplayMode.ImageWithTooltip;
                s.Properties.ValidationSettings.SetFocusOnError = true;
                s.Properties.NullText = ViewData[Humica.EF.SYSConstant.DATE_FORMAT].ToString();
                s.Properties.EditFormatString = ViewData[Humica.EF.SYSConstant.DATE_FORMAT].ToString();
                s.Properties.DisplayFormatString = ViewData[Humica.EF.SYSConstant.DATE_FORMAT].ToString();
                s.Properties.ValidationSettings.ErrorText = "*";
            }).Render();
        });
        g.Items.Add(m =>
        {
            m.Caption = Humica.EF.Models.SY.SYSettings.getLabel("KPI");
        })
        .SetNestedContent(() =>
        {
            Html.DevExpress().TextBoxFor(i => i.HeaderKPITracking.KPI, s =>
            {
                s.ReadOnly = true;
                s.Width = Unit.Percentage(100);
                s.ShowModelErrors = true;
                s.Properties.ValidationSettings.ErrorDisplayMode = ErrorDisplayMode.ImageWithTooltip;
                s.Properties.ValidationSettings.SetFocusOnError = true;
                s.Properties.ValidationSettings.ErrorText = "*";
            }).Render();
        });
        g.Items.Add(m =>
        {
            m.Caption = Humica.EF.Models.SY.SYSettings.getLabel("Measure");
        })
        .SetNestedContent(() =>
        {
            Html.DevExpress().TextBoxFor(i => i.HeaderKPITracking.Measure, s =>
            {
                s.ReadOnly = true;
                s.Properties.ClientInstanceName = "txtMeasure";
                s.Width = Unit.Percentage(100);
                s.ShowModelErrors = true;
                s.Properties.ValidationSettings.ErrorDisplayMode = ErrorDisplayMode.ImageWithTooltip;
                s.Properties.ValidationSettings.SetFocusOnError = true;
                s.Properties.ValidationSettings.ErrorText = "*";
            }).Render();
        });
        g.Items.Add(m =>
        {
            m.Caption = Humica.EF.Models.SY.SYSettings.getLabel("Target");
        })
        .SetNestedContent(() =>
        {
            Html.DevExpress().TextBoxFor(i => i.HeaderKPITracking.Target, s =>
            {
                s.ReadOnly = true;
                s.Properties.ClientInstanceName = "txtTarget";
                s.Width = Unit.Percentage(100);
                s.ShowModelErrors = true;
                s.Properties.ValidationSettings.ErrorDisplayMode = ErrorDisplayMode.ImageWithTooltip;
                s.Properties.ValidationSettings.SetFocusOnError = true;
                s.Properties.ValidationSettings.ErrorText = "*";
                s.Properties.DisplayFormatString = "N0";
                s.ControlStyle.HorizontalAlign = HorizontalAlign.Right;
            }).Render();
        });
        g.Items.Add(m =>
        {
            m.Caption = Humica.EF.Models.SY.SYSettings.getLabel("KPIDesciption");
            m.ColumnSpan = 2;
        })
        .SetNestedContent(() =>
        {
            Html.DevExpress().TextBoxFor(i => i.HeaderKPITracking.KPIDescription, s =>
            {
                s.ReadOnly = true;
                s.Width = Unit.Percentage(100);
                s.ShowModelErrors = true;
                s.Properties.ValidationSettings.ErrorDisplayMode = ErrorDisplayMode.ImageWithTooltip;
                s.Properties.ValidationSettings.SetFocusOnError = true;
                s.Properties.ValidationSettings.ErrorText = "*";
            }).Render();
        });
        g.Items.Add(m =>
        {
            m.Caption = Humica.EF.Models.SY.SYSettings.getLabel("Actual");
        })
        .SetNestedContent(() =>
        {
            Html.DevExpress().SpinEditFor(i => i.HeaderKPITracking.Actual, s =>
            {
                s.ReadOnly = true;
                s.Properties.ValidationSettings.ErrorDisplayMode = ErrorDisplayMode.ImageWithTooltip;
                s.Properties.ValidationSettings.SetFocusOnError = true;
                s.Properties.ValidationSettings.ErrorText = "*";
                s.ControlStyle.HorizontalAlign = HorizontalAlign.Right;
            }).Render();
        });
        g.Items.Add(m =>
        {
            m.Caption = Humica.EF.Models.SY.SYSettings.getLabel("Remark");
            m.ColumnSpan = 2;
        })
       .SetNestedContent(() =>
       {
           Html.DevExpress().MemoFor(i => i.HeaderKPITracking.Remark, s =>
           {
               s.ReadOnly = true;
               s.Width = Unit.Percentage(100);
               s.ShowModelErrors = true;
               s.Properties.ValidationSettings.ErrorDisplayMode = ErrorDisplayMode.ImageWithTooltip;
               s.Properties.ValidationSettings.SetFocusOnError = true;
               s.Properties.ValidationSettings.ErrorText = "*";
               s.Height = 100;
           }).Render();
       });
    });
}).GetHtml()
@Html.DevExpress().PageControl(settings =>
{
    settings.Name = "pcScrollingMaterial1";
    settings.Width = Unit.Percentage(100);

    settings.EnableTabScrolling = true;
    settings.TabAlign = TabAlign.Justify;

    settings.Styles.Tab.CssClass = "scrolling_Tab";

    settings.TabPages.Add(Humica.EF.Models.SY.SYSettings.getLabel("TimeSheet")).SetContent(() =>
    {
        Html.RenderPartial("GridItemsDetails", Model.ListTimeSheet);
    });
}).GetHtml()
