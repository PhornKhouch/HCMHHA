@model Humica.Logic.HR.HRFamilyObject
<script type="text/javascript">

    $(document).ready(function () {
        $('#_btnBackAction').click(function () {
            window.location = "@Humica.EF.Models.SY.SYUrl.getBaseUrl()" + "@ViewData[Humica.EF.Models.SY.SYConstant.CURRENT_URL]";
        });
        $('#_bthEditAction').click(function () {
            window.location = "@Humica.EF.Models.SY.SYUrl.getBaseUrl()" + "@ViewData[Humica.EF.Models.SY.SYConstant.CURRENT_URL]" + "Edit?id=@ViewData[Humica.EF.Models.SY.SYConstant.PARAM_ID].ToString()";
        });
       $('#_btnDeleteAction').click(function () {
            ss = 4;
            ConfirmMessage("@Humica.EF.Models.SY.SYMessages.getMessage("DELETE_C", Humica.EF.MD.SYSession.getSessionUser().Lang)");
        });
    });
    function _clickConfirm(s, e) {
        if (s.GetText() == "@Humica.EF.Models.SY.SYConstant.OK") {
            if (ss == 4) {
                window.location = "@Humica.EF.Models.SY.SYUrl.getBaseUrl()" + "@ViewData[Humica.EF.Models.SY.SYConstant.CURRENT_URL]" + "Delete?id=@ViewData[Humica.EF.Models.SY.SYConstant.PARAM_ID].ToString()";
            }
        }
    }
</script>

@Html.DevExpress().FormLayout(settings =>
{


    settings.Name = "MaterialCreate";
    settings.AlignItemCaptionsInAllGroups = true;

    settings.Items.AddGroupItem(m => Model.Header, g =>
    {
        g.ColCount = 3;
        g.GroupBoxDecoration = GroupBoxDecoration.None;
        g.SettingsItemCaptions.HorizontalAlign = FormLayoutHorizontalAlign.Left;

        g.Items.Add(m =>
        {
            m.Caption = Humica.EF.Models.SY.SYSettings.getLabel("EmpCode");
        })
        .SetNestedContent(() =>
        {
           Html.DevExpress().TextBoxFor(i => i.HeaderStaff.EmpCode, s =>
            {
                     s.ReadOnly = true;
                     s.ShowModelErrors = true;
                     s.Properties.ValidationSettings.ErrorDisplayMode = ErrorDisplayMode.ImageWithTooltip;
                     s.Properties.ValidationSettings.SetFocusOnError = true;
                     s.Properties.ValidationSettings.ErrorText = "*";
                 }).Render();
             });
        g.Items.Add(m =>
        {
            m.Caption = Humica.EF.Models.SY.SYSettings.getLabel("AllName");

        })
        .SetNestedContent(() =>
        {
            Html.DevExpress().TextBoxFor(i => i.HeaderStaff.AllName, s =>
            {
                s.ReadOnly = true;
                s.Properties.ValidationSettings.ErrorDisplayMode = ErrorDisplayMode.ImageWithTooltip;
                s.Properties.ValidationSettings.SetFocusOnError = true;
                s.Properties.ValidationSettings.ErrorText = "*";
            }).Render();
        });
        g.Items.Add(m =>
        {
            m.Caption = Humica.EF.Models.SY.SYSettings.getLabel("EmployeeType");
        })
        .SetNestedContent(() =>
        {
            Html.DevExpress().TextBoxFor(i => i.HeaderStaff.EmployeeType, s =>
            {
                s.ReadOnly = true;
                s.ShowModelErrors = true;
                s.Properties.ValidationSettings.ErrorDisplayMode = ErrorDisplayMode.ImageWithTooltip;
                s.Properties.ValidationSettings.SetFocusOnError = true;
                s.Properties.ValidationSettings.ErrorText = "*";
            }).Render();
        });
        g.Items.Add(m =>
        {
            m.Caption = Humica.EF.Models.SY.SYSettings.getLabel("Division");
        })
        .SetNestedContent(() =>
        {
            Html.DevExpress().TextBoxFor(i => i.HeaderStaff.DivisionDesc, s =>
            {
                s.ReadOnly = true;
                s.ShowModelErrors = true;
                s.Properties.ValidationSettings.ErrorDisplayMode = ErrorDisplayMode.ImageWithTooltip;
                s.Properties.ValidationSettings.SetFocusOnError = true;
                s.Properties.ValidationSettings.ErrorText = "*";
            }).Render();
        });
        g.Items.Add(m =>
        {
            m.Caption = Humica.EF.Models.SY.SYSettings.getLabel("Department");
        })
        .SetNestedContent(() =>
        {
            Html.DevExpress().TextBoxFor(i => i.HeaderStaff.Department, s =>
            {
                s.ReadOnly = true;
                s.ShowModelErrors = true;
                s.Properties.ValidationSettings.ErrorDisplayMode = ErrorDisplayMode.ImageWithTooltip;
                s.Properties.ValidationSettings.SetFocusOnError = true;
                s.Properties.ValidationSettings.ErrorText = "*";
            }).Render();
        });
        g.Items.Add(m =>
        {
            m.Caption = Humica.EF.Models.SY.SYSettings.getLabel("Section");
        })
        .SetNestedContent(() =>
        {
            Html.DevExpress().TextBoxFor(i => i.HeaderStaff.Section, s =>
            {
                s.ReadOnly = true;
                s.ShowModelErrors = true;
                s.Properties.ValidationSettings.ErrorDisplayMode = ErrorDisplayMode.ImageWithTooltip;
                s.Properties.ValidationSettings.SetFocusOnError = true;
                s.Properties.ValidationSettings.ErrorText = "*";
            }).Render();
        });
        g.Items.Add(m =>
        {
            m.Caption = Humica.EF.Models.SY.SYSettings.getLabel("LevelCode");
        })
        .SetNestedContent(() =>
        {
            Html.DevExpress().TextBoxFor(i => i.HeaderStaff.Level, s =>
            {
                s.ReadOnly = true;
                s.ShowModelErrors = true;
                s.Properties.ValidationSettings.ErrorDisplayMode = ErrorDisplayMode.ImageWithTooltip;
                s.Properties.ValidationSettings.SetFocusOnError = true;
                s.Properties.ValidationSettings.ErrorText = "*";
            }).Render();
        });
        g.Items.Add(m =>
        {
            m.Caption = Humica.EF.Models.SY.SYSettings.getLabel("Position");
        })
        .SetNestedContent(() =>
        {
            Html.DevExpress().TextBoxFor(i => i.HeaderStaff.Position, s =>
            {
                s.ReadOnly = true;
                s.ShowModelErrors = true;
                s.Properties.ValidationSettings.ErrorDisplayMode = ErrorDisplayMode.ImageWithTooltip;
                s.Properties.ValidationSettings.SetFocusOnError = true;
                s.Properties.ValidationSettings.ErrorText = "*";
            }).Render();
        });
        g.Items.Add(m =>
        {
            m.Caption = Humica.EF.Models.SY.SYSettings.getLabel("StartDate");
        })
        .SetNestedContent(() =>
        {
            Html.DevExpress().DateEditFor(i => i.HeaderStaff.StartDate, s =>
            {
                s.ReadOnly = true;
                s.ShowModelErrors = true;
                s.Properties.ValidationSettings.ErrorDisplayMode = ErrorDisplayMode.ImageWithTooltip;
                s.Properties.ValidationSettings.SetFocusOnError = true;
                s.Properties.NullText = ViewData[Humica.EF.SYSConstant.DATE_FORMAT].ToString();
                s.Properties.EditFormatString = ViewData[Humica.EF.SYSConstant.DATE_FORMAT].ToString();
                s.Properties.DisplayFormatString = ViewData[Humica.EF.SYSConstant.DATE_FORMAT].ToString();
                s.Properties.ValidationSettings.ErrorText = "*";
            }).Render();
        });
    });
}).GetHtml()
@Html.DevExpress().PageControl(settings =>
{
settings.Name = "pcScrollingMaterial1";
settings.Width = Unit.Percentage(100);

settings.EnableTabScrolling = true;
settings.TabAlign = TabAlign.Justify;

settings.Styles.Tab.CssClass = "scrolling_Tab";
settings.TabPages.Add(Humica.EF.Models.SY.SYSettings.getLabel("General")).SetContent(() =>
{
Html.DevExpress().FormLayout(s1 =>
{
s1.Name = "CreateStaff1";
s1.AlignItemCaptionsInAllGroups = true;

s1.Items.AddGroupItem(m => Model.Header, g =>
{
    g.ColCount = 2;
    g.GroupBoxDecoration = GroupBoxDecoration.None;
    g.Items.Add(m =>
    {
        m.Caption = Humica.EF.Models.SY.SYSettings.getLabel("Name");
    })
.SetNestedContent(() =>
{
Html.DevExpress().TextBoxFor(i => i.Header.RelName, s =>
{
    s.ReadOnly = true;
    s.ShowModelErrors = true;
    s.Properties.ValidationSettings.ErrorDisplayMode = ErrorDisplayMode.ImageWithTooltip;
    s.Properties.ValidationSettings.SetFocusOnError = true;
    s.Properties.ValidationSettings.ErrorText = "*";
}).Render();
});
    g.Items.Add(m =>
    {
        m.Caption = Humica.EF.Models.SY.SYSettings.getLabel("Relationship");
    })
    .SetNestedContent(() =>
    {
        Html.DevExpress().ComboBoxFor(i => i.Header.RelCode, s =>
        {
            s.ReadOnly = true;
            s.ShowModelErrors = true;
            s.Properties.ValidationSettings.ErrorDisplayMode = ErrorDisplayMode.ImageWithTooltip;
            s.Properties.ValidationSettings.SetFocusOnError = true;
            s.Properties.ValidationSettings.ErrorText = "*";
            s.Properties.TextField = "Description";
            s.Properties.TextFormatString = "{1}";
            s.Properties.ValueField = "Code";
            s.Properties.Columns.Add("Code", Humica.EF.Models.SY.SYSettings.getLabel("Code"));
            s.Properties.Columns.Add("Description", Humica.EF.Models.SY.SYSettings.getLabel("Description"));
            s.Properties.NullText = Humica.EF.Models.SY.SYSettings.getLabel("_SELECT");
        }).BindList(ViewData["RelationshipType_LIST"]).Render();
    });
    g.Items.Add(m =>
    {
        m.Caption = Humica.EF.Models.SY.SYSettings.getLabel("Sex");
    })
    .SetNestedContent(() =>
    {
        Html.DevExpress().ComboBoxFor(i => i.Header.Sex, s =>
        {
            s.ReadOnly = true;
            s.ShowModelErrors = true;
            s.Properties.ValidationSettings.ErrorDisplayMode = ErrorDisplayMode.ImageWithTooltip;
            s.Properties.ValidationSettings.SetFocusOnError = true;
            s.Properties.ValidationSettings.ErrorText = "*";

            s.Properties.TextFormatString = "{0}";
            s.Properties.ValueField = "SelectValue";
            s.Properties.TextField = "SelectText";
            s.Properties.NullText = Humica.EF.Models.SY.SYSettings.getLabel("_SELECT");
        }).BindList(ViewData["GENDER_SELECT"]).Render();
    });
    g.Items.Add(m =>
    {
        m.Caption = Humica.EF.Models.SY.SYSettings.getLabel("DOB");
    })
    .SetNestedContent(() =>
    {
        Html.DevExpress().DateEditFor(i => i.Header.DateOfBirth, s =>
        {
            s.ReadOnly = true;
            s.ShowModelErrors = true;
            s.Properties.ValidationSettings.ErrorDisplayMode = ErrorDisplayMode.ImageWithTooltip;
            s.Properties.ValidationSettings.SetFocusOnError = true;
            s.Properties.NullText = ViewData[Humica.EF.SYSConstant.DATE_FORMAT].ToString();
            s.Properties.EditFormatString = ViewData[Humica.EF.SYSConstant.DATE_FORMAT].ToString();
            s.Properties.DisplayFormatString = ViewData[Humica.EF.SYSConstant.DATE_FORMAT].ToString();
            s.Properties.ValidationSettings.ErrorText = "*";
        }).Render();
    });
    g.Items.Add(m =>
    {
        m.Caption = Humica.EF.Models.SY.SYSettings.getLabel("National ID Card");
    })
   .SetNestedContent(() =>
   {
       Html.DevExpress().TextBoxFor(i => i.Header.IDCard, s =>
       {
           s.ReadOnly = true;
           s.ShowModelErrors = true;
           s.Properties.ValidationSettings.ErrorDisplayMode = ErrorDisplayMode.ImageWithTooltip;
           s.Properties.ValidationSettings.SetFocusOnError = true;
           s.Properties.ValidationSettings.ErrorText = "*";
       }).Render();
   });
    g.Items.Add(m =>
    {
        m.Caption = Humica.EF.Models.SY.SYSettings.getLabel("Phone");
    })
    .SetNestedContent(() =>
    {
        Html.DevExpress().TextBoxFor(i => i.Header.PhoneNo, s =>
        {
            s.ReadOnly = true;
            s.ShowModelErrors = true;
            s.Properties.MaskSettings.Mask = "999-000-0009";
            s.Properties.MaskSettings.IncludeLiterals = MaskIncludeLiteralsMode.None;
            // s.Properties.MaskSettings.ShowHints = true;
            // s.Properties.MaskSettings.ErrorText = "Invalid Phone Number";
        }).Render();
    });
    g.Items.Add(m =>
    {
        m.Caption = Humica.EF.Models.SY.SYSettings.getLabel("Occupation");
    })
   .SetNestedContent(() =>
   {
       Html.DevExpress().TextBoxFor(i => i.Header.Occupation, s =>
       {
           s.ReadOnly = true;
           s.ShowModelErrors = true;
           s.Properties.ValidationSettings.ErrorDisplayMode = ErrorDisplayMode.ImageWithTooltip;
           s.Properties.ValidationSettings.SetFocusOnError = true;
           s.Properties.ValidationSettings.ErrorText = "*";
       }).Render();
   });

    g.Items.Add(m =>
    {
        m.Caption = Humica.EF.Models.SY.SYSettings.getLabel("Tax Deduction Family");
    })
    .SetNestedContent(() =>
    {
        Html.DevExpress().CheckBoxFor(i => i.Header.TaxDeduc, s =>
        {
            s.ReadOnly = true;
            s.Properties.ValidationSettings.ErrorDisplayMode = ErrorDisplayMode.ImageWithTooltip;
            s.Properties.ValidationSettings.SetFocusOnError = true;
            s.Properties.ValidationSettings.ErrorText = "*";
        }).Render();
    });
    g.Items.Add(m =>
    {
        m.Caption = Humica.EF.Models.SY.SYSettings.getLabel("In School");
    })
    .SetNestedContent(() =>
    {
        Html.DevExpress().CheckBoxFor(i => i.Header.InSchool, s =>
        {
            s.ReadOnly = true;
            s.Properties.ValidationSettings.ErrorDisplayMode = ErrorDisplayMode.ImageWithTooltip;
            s.Properties.ValidationSettings.SetFocusOnError = true;
            s.Properties.ValidationSettings.ErrorText = "*";
        }).Render();
    });
    g.Items.Add(m =>
    {
        m.Caption = Humica.EF.Models.SY.SYSettings.getLabel("Child");
    })
   .SetNestedContent(() =>
   {
       Html.DevExpress().CheckBoxFor(i => i.Header.Child, s =>
       {
           s.ReadOnly = true;
           s.Properties.ValidationSettings.ErrorDisplayMode = ErrorDisplayMode.ImageWithTooltip;
           s.Properties.ValidationSettings.SetFocusOnError = true;
           s.Properties.ValidationSettings.ErrorText = "*";
       }).Render();
   });
    g.Items.AddEmptyItem();
    g.Items.Add(m =>
    {
        m.Caption = Humica.EF.Models.SY.SYSettings.getLabel("Spouse");
    })
    .SetNestedContent(() =>
    {
        Html.DevExpress().CheckBoxFor(i => i.Header.Spouse, s =>
        {
            s.ReadOnly = true;
            s.Properties.ValidationSettings.ErrorDisplayMode = ErrorDisplayMode.ImageWithTooltip;
            s.Properties.ValidationSettings.SetFocusOnError = true;
            s.Properties.ValidationSettings.ErrorText = "*";
        }).Render();
    });
                g.Items.Add(m =>
                {
                    m.Caption = Humica.EF.Models.SY.SYSettings.getLabel("Attach File");
                })
            .SetNestedContent(() =>
            {
            var fileNames = Model.Header.AttachFile.Split(new[] { ';' }, StringSplitOptions.RemoveEmptyEntries);

            foreach (var fileName in fileNames)
            {
            if (!string.IsNullOrEmpty(fileName))
            {
             var hyperlinkHtml = Html.DevExpress().HyperLink(
                 s =>
                 {
                     s.ToolTip = System.IO.Path.GetFileName(fileName); 
                     s.ClientVisible = true;
                     s.Properties.Target = "_BLANK";
                     s.NavigateUrl = fileName;
                     s.Properties.Text = System.IO.Path.GetFileName(fileName); 
                 }).GetHtml();       
             ViewContext.Writer.Write("<br/>");
                     }
                 }
             });
            });
        }).GetHtml();
    });
    settings.TabPages.Add(Humica.EF.Models.SY.SYSettings.getLabel("History")).SetContent(() =>

{
     Html.RenderPartial("GridItems", Model);
 });
}).GetHtml()