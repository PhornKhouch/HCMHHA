@model Humica.Logic.PR.PROverTimeObject

@Html.DevExpress().FormLayout(settings =>
{


    settings.Name = "FTFilterEmployee";
    settings.AlignItemCaptionsInAllGroups = true;
    settings.Items.AddGroupItem(m => Model._Filter, g =>
    {
        g.ColCount = 3;
        g.GroupBoxDecoration = GroupBoxDecoration.None;
        g.SettingsItemCaptions.HorizontalAlign = FormLayoutHorizontalAlign.Left;
        g.Items.Add(m =>
        {
            m.Caption = Humica.EF.Models.SY.SYSettings.getLabel("Branch");
        })
            .SetNestedContent(() =>
            {
                Html.DevExpress().ComboBoxFor(i => Model._Filter.Branch, s =>
                {
                    s.ShowModelErrors = true;
                    s.Properties.ValidationSettings.ErrorDisplayMode = ErrorDisplayMode.ImageWithTooltip;
                    s.Properties.ValidationSettings.SetFocusOnError = true;
                    s.Properties.ValidationSettings.ErrorText = "*";
                    s.Properties.TextFormatString = "{0}";
                    s.Properties.ValueField = "Code";
                    s.Properties.TextField = "Description";
                    s.Properties.NullText = Humica.EF.Models.SY.SYSettings.getLabel("_SELECT");
                }).BindList(ViewData["BRANCHES_SELECT"]).Render();
            });
        g.Items.Add(m =>
        {
            m.Caption = Humica.EF.Models.SY.SYSettings.getLabel("Division");
        })
           .SetNestedContent(() =>
           {
               Html.DevExpress().ComboBoxFor(i => Model._Filter.Division, s =>
               {
                   s.ShowModelErrors = true;
                   s.Properties.ValidationSettings.ErrorDisplayMode = ErrorDisplayMode.ImageWithTooltip;
                   s.Properties.ValidationSettings.SetFocusOnError = true;
                   s.Properties.ValidationSettings.ErrorText = "*";
                   s.Properties.TextFormatString = "{0}";
                   s.Properties.ValueField = "Code";
                   s.Properties.TextField = "Description";
                   s.Properties.NullText = Humica.EF.Models.SY.SYSettings.getLabel("_SELECT");
               }).BindList(ViewData["DIVISION_SELECT"]).Render();
           });
        g.Items.Add(m =>
        {
            m.Caption = Humica.EF.Models.SY.SYSettings.getLabel("Department");
        })
            .SetNestedContent(() =>
            {
                Html.DevExpress().ComboBoxFor(i => Model._Filter.Department, s =>
                {
                    s.ShowModelErrors = true;
                    s.Properties.ValidationSettings.ErrorDisplayMode = ErrorDisplayMode.ImageWithTooltip;
                    s.Properties.ValidationSettings.SetFocusOnError = true;
                    s.Properties.ValidationSettings.ErrorText = "*";
                    s.Properties.TextFormatString = "{0}";
                    s.Properties.ValueField = "Code";
                    s.Properties.TextField = "Description";
                    s.Properties.NullText = Humica.EF.Models.SY.SYSettings.getLabel("_SELECT");
                }).BindList(ViewData["DEPARTMENT_SELECT"]).Render();
            });
        g.Items.Add(m =>
        {
            m.Caption = Humica.EF.Models.SY.SYSettings.getLabel("Section");
        })
            .SetNestedContent(() =>
            {
                Html.DevExpress().ComboBoxFor(i => Model._Filter.Section, s =>
                {
                    s.ShowModelErrors = true;
                    s.Properties.ValidationSettings.ErrorDisplayMode = ErrorDisplayMode.ImageWithTooltip;
                    s.Properties.ValidationSettings.SetFocusOnError = true;
                    s.Properties.ValidationSettings.ErrorText = "*";
                    s.Properties.TextFormatString = "{0}";
                    s.Properties.ValueField = "Code";
                    s.Properties.TextField = "Description";
                    s.Properties.NullText = Humica.EF.Models.SY.SYSettings.getLabel("_SELECT");
                }).BindList(ViewData["SECTION_SELECT"]).Render();
            });
        g.Items.Add(m =>
        {
            m.Caption = Humica.EF.Models.SY.SYSettings.getLabel("Position");
        })
            .SetNestedContent(() =>
            {
                Html.DevExpress().ComboBoxFor(i => Model._Filter.Position, s =>
                {
                    s.ShowModelErrors = true;
                    s.Properties.ValidationSettings.ErrorDisplayMode = ErrorDisplayMode.ImageWithTooltip;
                    s.Properties.ValidationSettings.SetFocusOnError = true;
                    s.Properties.ValidationSettings.ErrorText = "*";
                    s.Properties.TextFormatString = "{0}";
                    s.Properties.ValueField = "Code";
                    s.Properties.TextField = "Description";
                    s.Properties.NullText = Humica.EF.Models.SY.SYSettings.getLabel("_SELECT");
                }).BindList(ViewData["POSITION_SELECT"]).Render();
            });
        g.Items.Add(m =>
        {
            m.Caption = Humica.EF.Models.SY.SYSettings.getLabel("Level");
        })
           .SetNestedContent(() =>
           {
               Html.DevExpress().ComboBoxFor(i => Model._Filter.Level, s =>
               {
                   s.ShowModelErrors = true;
                   s.Properties.ValidationSettings.ErrorDisplayMode = ErrorDisplayMode.ImageWithTooltip;
                   s.Properties.ValidationSettings.SetFocusOnError = true;
                   s.Properties.ValidationSettings.ErrorText = "*";
                   s.Properties.TextFormatString = "{0}";
                   s.Properties.ValueField = "Code";
                   s.Properties.TextField = "Description";
                   s.Properties.NullText = Humica.EF.Models.SY.SYSettings.getLabel("_SELECT");
               }).BindList(ViewData["LEVEL_SELECT"]).Render();
           });
        g.Items.Add(m =>
        {
            m.Caption = Humica.EF.Models.SY.SYSettings.getLabel("Shift");
        })
        .SetNestedContent(() =>
        {
            Html.DevExpress().ComboBoxFor(i => Model._Filter.Shift, s =>
            {
                s.ShowModelErrors = true;
                s.Properties.ValidationSettings.ErrorDisplayMode = ErrorDisplayMode.ImageWithTooltip;
                s.Properties.ValidationSettings.SetFocusOnError = true;
                s.Properties.ValidationSettings.ErrorText = "*";
                s.Properties.TextFormatString = "{0}";
                s.Properties.ValueField = "Code";
                s.Properties.TextField = "Description";
                s.Properties.NullText = Humica.EF.Models.SY.SYSettings.getLabel("_SELECT");
                s.Properties.AllowNull = true;
            }).BindList(ViewData["SHIFT_SELECT"]).Render();
        });
        g.Items.Add(m =>
        {
            m.Caption = Humica.EF.Models.SY.SYSettings.getLabel("InDate");
        })
        .SetNestedContent(() =>
        {
            Html.DevExpress().DateEditFor(i => Model._Filter.InDate, s =>
            {
                s.Properties.ClientInstanceName = "txtInDate";
                s.ShowModelErrors = true;
                s.Properties.ValidationSettings.ErrorDisplayMode = ErrorDisplayMode.ImageWithTooltip;
                s.Properties.ValidationSettings.SetFocusOnError = true;
                s.Properties.ValidationSettings.ErrorText = "*";
                s.Properties.NullText = ViewData[Humica.EF.SYSConstant.DATE_FORMAT].ToString();
                s.Properties.EditFormatString = ViewData[Humica.EF.SYSConstant.DATE_FORMAT].ToString();
                s.Properties.DisplayFormatString = ViewData[Humica.EF.SYSConstant.DATE_FORMAT].ToString();
            }).Render();
        });
        g.Items.AddEmptyItem();


        g.Items.Add(m =>
        {
            m.Caption = "";
        })
          .SetNestedContent(() =>
          {
              Html.DevExpress().Button(
                  s =>
                  {
                      s.Name = "_btnRunReport";
                      s.ToolTip = Humica.EF.Models.SY.SYSettings.getLabel("Go");
                      s.RenderMode = ButtonRenderMode.Button;
                      s.Text = Humica.EF.Models.SY.SYSettings.getLabel("Go");
                      s.UseSubmitBehavior = true;
                      s.Images.Image.IconID = IconID.ActionsApply16x16;
                  }).GetHtml();
          });
    });
    settings.Items.AddGroupItem(m => Model._Filter, g =>
    {
        g.ColCount = 2;
        g.GroupBoxDecoration = GroupBoxDecoration.HeadingLine;
        g.Caption = Humica.EF.Models.SY.SYSettings.getLabel("Assign");
        g.SettingsItemCaptions.HorizontalAlign = FormLayoutHorizontalAlign.Left;
        g.Items.Add(m =>
        {
            m.Caption = Humica.EF.Models.SY.SYSettings.getLabel("StartTime") + "*";
        })
            .SetNestedContent(() =>
            {
                Html.DevExpress().TimeEditFor(i => Model._Filter.StartTime, s =>
                {
                    s.Properties.ClientInstanceName = "txtFromDate";
                    s.Properties.DisplayFormatString = "h:mm tt";
                    s.Properties.EditFormat = EditFormat.Time;
                    s.Properties.ClientSideEvents.ValueChanged = "OnClientValueChanged";
                }).Render();
            });
        g.Items.Add(m =>
        {
            m.Caption = Humica.EF.Models.SY.SYSettings.getLabel("RequestBy");
        })
       .SetNestedContent(() =>
       {
           Html.DevExpress().ComboBoxFor(i => Model.HeaderOT.RequestBy, s =>
           {
               s.Properties.ClientInstanceName = "txtRequestBy";
               s.ShowModelErrors = true;
               s.Properties.ValidationSettings.ErrorDisplayMode = ErrorDisplayMode.ImageWithTooltip;
               s.Properties.ValidationSettings.SetFocusOnError = true;
               s.Properties.ValidationSettings.ErrorText = "*";
               s.Properties.TextFormatString = "{0}";
               s.Properties.ValueField = "EmpCode";
               s.Properties.TextField = "AllName";
               s.Properties.NullText = Humica.EF.Models.SY.SYSettings.getLabel("_SELECT");
               s.Properties.AllowNull = true;
           }).BindList(ViewData["STAFF_SELECT"]).Render();
       });
        g.Items.Add(m =>
        {
            m.Caption = Humica.EF.Models.SY.SYSettings.getLabel("EndTime") + "*";
        })
        .SetNestedContent(() =>
        {
            Html.DevExpress().TimeEditFor(i => Model._Filter.EndTime, s =>
            {
                s.Properties.ClientInstanceName = "txtToDate";
                s.Properties.DisplayFormatString = "h:mm tt";
                s.Properties.EditFormat = EditFormat.Time;
                s.Properties.ClientSideEvents.ValueChanged = "OnClientValueChanged";
            }).Render();
        });
        g.Items.Add(m =>
        {
            m.Caption = Humica.EF.Models.SY.SYSettings.getLabel("Total Hours");
        })
          .SetNestedContent(() =>
          {
              Html.DevExpress().TextBoxFor(i => Model._Filter.TotalHours, s =>
              {
                  s.Properties.ClientInstanceName = "txtHour";
                  s.ReadOnly = true;
                  s.ShowModelErrors = true;
                  s.Properties.ValidationSettings.ErrorDisplayMode = ErrorDisplayMode.ImageWithTooltip;
                  s.Properties.ValidationSettings.SetFocusOnError = true;
                  s.Properties.ValidationSettings.ErrorText = "*";
                  s.Properties.DisplayFormatString = "N2";
              }).Render();
          });

        g.Items.Add(m =>
        {
            m.Caption = Humica.EF.Models.SY.SYSettings.getLabel("BreakTime(min)");
        })
          .SetNestedContent(() =>
          {
              Html.DevExpress().SpinEditFor(i => Model._Filter.BreakTime, s =>
              {
                  s.Properties.ClientInstanceName = "txtBreakTime";
                  s.Properties.ValidationSettings.ErrorDisplayMode = ErrorDisplayMode.ImageWithTooltip;
                  s.Properties.ValidationSettings.SetFocusOnError = true;
                  s.Properties.ValidationSettings.ErrorText = "*";
                  s.Properties.DisplayFormatString = "N2";
                  s.Properties.ClientSideEvents.ValueChanged = "OnClientValueChanged";
                  s.ControlStyle.HorizontalAlign = HorizontalAlign.Right;
              }).Render();
          });
        g.Items.Add(m =>
        {
            m.Caption = Humica.EF.Models.SY.SYSettings.getLabel("Reason");
            m.ColSpan = 2;
        })
         .SetNestedContent(() =>
         {
             Html.DevExpress().TextBoxFor(i => Model._Filter.Remark, s =>
             {
                 s.Properties.ClientInstanceName = "txtRemark";
                 s.Width = Unit.Percentage(85);
                 s.ShowModelErrors = true;
                 s.Properties.ValidationSettings.ErrorDisplayMode = ErrorDisplayMode.ImageWithTooltip;
                 s.Properties.ValidationSettings.SetFocusOnError = true;
                 s.Properties.ValidationSettings.ErrorText = "*";
                 s.Properties.DisplayFormatString = "N2";
             }).Render();
         });
    });
}).Bind(Model).GetHtml()