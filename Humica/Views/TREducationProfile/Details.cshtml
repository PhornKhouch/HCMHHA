@model Humica.Training.TREduProfileObject
<script type="text/javascript">

    $(document).ready(function () {
        $('#_btnBackAction').click(function () {
            window.location = "@Humica.EF.Models.SY.SYUrl.getBaseUrl()" + "@ViewData[Humica.EF.Models.SY.SYConstant.CURRENT_URL]";
        });
        $('#_bthEditAction').click(function () {
            window.location = "@Humica.EF.Models.SY.SYUrl.getBaseUrl()" + "@ViewData[Humica.EF.Models.SY.SYConstant.CURRENT_URL]" + "Edit?id=@ViewData[Humica.EF.Models.SY.SYConstant.PARAM_ID].ToString()";
        });
         $('#_btnDeleteAction').click(function () {
            ss = 4;
            ConfirmMessage("@Humica.EF.Models.SY.SYMessages.getMessage("DELETE_C", Humica.EF.MD.SYSession.getSessionUser().Lang)");
        });
    });
    function _clickConfirm(s, e) {
        if (s.GetText() == "@Humica.EF.Models.SY.SYConstant.OK") {
            if (ss == 4) {
                window.location = "@Humica.EF.Models.SY.SYUrl.getBaseUrl()" + "@ViewData[Humica.EF.Models.SY.SYConstant.CURRENT_URL]" + "Delete?id=@ViewData[Humica.EF.Models.SY.SYConstant.PARAM_ID].ToString()";
            }
        }
    }
</script>

@Html.DevExpress().FormLayout(settings =>
{
    settings.Name = "MaterialCreate";
    settings.AlignItemCaptionsInAllGroups = true;

    settings.Items.AddGroupItem(m => Model.Header, g =>
    {
        g.ColCount = 2;
        g.GroupBoxDecoration = GroupBoxDecoration.None;
        g.SettingsItemCaptions.HorizontalAlign = FormLayoutHorizontalAlign.Left;

        g.Items.Add(m =>
        {
            m.Caption = Humica.EF.Models.SY.SYSettings.getLabel("EmpCode");

        })
             .SetNestedContent(() =>
             {
                 Html.DevExpress().TextBoxFor(i => i.Header.EmpCode, s =>
                 {
                     s.ReadOnly = true;
                     s.ShowModelErrors = true;
                     s.Properties.ValidationSettings.ErrorDisplayMode = ErrorDisplayMode.ImageWithTooltip;
                     s.Properties.ValidationSettings.SetFocusOnError = true;
                     s.Properties.ValidationSettings.ErrorText = "*";
                 }).Render();
             });
        g.Items.Add(m =>
        {
            m.Caption = Humica.EF.Models.SY.SYSettings.getLabel("AllName");
        })
        .SetNestedContent(() =>
        {
            Html.DevExpress().TextBoxFor(i => i.Header.EmpName, s =>
            {
                s.ReadOnly = true;
                s.Properties.ValidationSettings.ErrorDisplayMode = ErrorDisplayMode.ImageWithTooltip;
                s.Properties.ValidationSettings.SetFocusOnError = true;
                s.Properties.ValidationSettings.ErrorText = "*";
            }).Render();
        });
        g.Items.Add(m =>
        {
            m.Caption = Humica.EF.Models.SY.SYSettings.getLabel("QualificationType");
        })
          .SetNestedContent(() =>
          {
              Html.DevExpress().ComboBoxFor(i => i.Header.QualificationType, s =>
              {
                  s.ReadOnly = true;
                  s.ShowModelErrors = true;
                  s.Properties.ValidationSettings.ErrorDisplayMode = ErrorDisplayMode.ImageWithTooltip;
                  s.Properties.ValidationSettings.SetFocusOnError = true;
                  s.Properties.ValidationSettings.ErrorText = "*";
                  s.Properties.TextField = "Description";
                  s.Properties.TextFormatString = "{1}";
                  s.Properties.ValueField = "Code";
                  s.Properties.Columns.Add("Code", Humica.EF.Models.SY.SYSettings.getLabel("Code"));
                  s.Properties.Columns.Add("Description", Humica.EF.Models.SY.SYSettings.getLabel("Description"), 200);
                  s.Properties.NullText = Humica.EF.Models.SY.SYSettings.getLabel("_SELECT");
              }).BindList(ViewData["QUALI_TYPE"]).Render();
          });
        g.Items.Add(m =>
        {
            m.Caption = Humica.EF.Models.SY.SYSettings.getLabel("QualificationClass");
        })
      .SetNestedContent(() =>
      {
          Html.DevExpress().ComboBoxFor(i => i.Header.QualificationClass, s =>
          {
              s.ReadOnly = true;
              s.ShowModelErrors = true;
              s.Properties.ValidationSettings.ErrorDisplayMode = ErrorDisplayMode.ImageWithTooltip;
              s.Properties.ValidationSettings.SetFocusOnError = true;
              s.Properties.ValidationSettings.ErrorText = "*";
              s.Properties.TextField = "Description";
              s.Properties.TextFormatString = "{1}";
              s.Properties.ValueField = "Code";
              s.Properties.Columns.Add("Code", Humica.EF.Models.SY.SYSettings.getLabel("Code"));
              s.Properties.Columns.Add("Description", Humica.EF.Models.SY.SYSettings.getLabel("Description"), 200);
              s.Properties.NullText = Humica.EF.Models.SY.SYSettings.getLabel("_SELECT");
          }).BindList(ViewData["QUALI_CLASS"]).Render();
      });
        g.Items.Add(m =>
        {
            m.Caption = Humica.EF.Models.SY.SYSettings.getLabel("QualificationName");
        })
       .SetNestedContent(() =>
       {
           Html.DevExpress().ComboBoxFor(i => i.Header.QualificationName, s =>
           {
               s.ReadOnly = true;
               s.ShowModelErrors = true;
               s.Properties.ValidationSettings.ErrorDisplayMode = ErrorDisplayMode.ImageWithTooltip;
               s.Properties.ValidationSettings.SetFocusOnError = true;
               s.Properties.ValidationSettings.ErrorText = "*";
               s.Properties.TextField = "Description";
               s.Properties.TextFormatString = "{1}";
               s.Properties.ValueField = "Code";
               s.Properties.Columns.Add("Code", Humica.EF.Models.SY.SYSettings.getLabel("Code"));
               s.Properties.Columns.Add("Description", Humica.EF.Models.SY.SYSettings.getLabel("Description"), 200);
               s.Properties.NullText = Humica.EF.Models.SY.SYSettings.getLabel("_SELECT");
           }).BindList(ViewData["QUALI_NAME"]).Render();
       });
        g.Items.Add(m =>
        {
            m.Caption = Humica.EF.Models.SY.SYSettings.getLabel("FirstSubject");
        })
       .SetNestedContent(() =>
       {
           Html.DevExpress().TextBoxFor(i => i.Header.FirstSubject, s =>
           {
               s.ReadOnly = true;
               s.ShowModelErrors = true;
               s.Properties.ValidationSettings.ErrorDisplayMode = ErrorDisplayMode.ImageWithTooltip;
               s.Properties.ValidationSettings.SetFocusOnError = true;
               s.Properties.ValidationSettings.ErrorText = "*";
           }).Render();
       });
        g.Items.Add(m =>
        {
            m.Caption = Humica.EF.Models.SY.SYSettings.getLabel("SecondSubject");
        })
       .SetNestedContent(() =>
       {
           Html.DevExpress().TextBoxFor(i => i.Header.SecondSubject, s =>
           {
               s.ReadOnly = true;
               s.ShowModelErrors = true;
               s.Properties.ValidationSettings.ErrorDisplayMode = ErrorDisplayMode.ImageWithTooltip;
               s.Properties.ValidationSettings.SetFocusOnError = true;
               s.Properties.ValidationSettings.ErrorText = "*";
           }).Render();
       });
        g.Items.Add(m =>
        {
            m.Caption = Humica.EF.Models.SY.SYSettings.getLabel("DateAwarded");
        })
          .SetNestedContent(() =>
          {
              Html.DevExpress().DateEditFor(i => i.Header.DateAwarded, s =>
              {
                  s.ReadOnly = true;
                  s.ShowModelErrors = true;
                  s.Properties.ValidationSettings.ErrorDisplayMode = ErrorDisplayMode.ImageWithTooltip;
                  s.Properties.ValidationSettings.SetFocusOnError = true;
                  s.Properties.NullText = ViewData[Humica.EF.SYSConstant.DATE_FORMAT].ToString();
                  s.Properties.EditFormatString = ViewData[Humica.EF.SYSConstant.DATE_FORMAT].ToString();
                  s.Properties.DisplayFormatString = ViewData[Humica.EF.SYSConstant.DATE_FORMAT].ToString();
                  s.Properties.ValidationSettings.ErrorText = "*";
              }).Render();
          });
        g.Items.Add(m =>
        {
            m.Caption = Humica.EF.Models.SY.SYSettings.getLabel("AwardingInstitution");
            m.ColumnSpan = 2;
        })
        .SetNestedContent(() =>
        {
            Html.DevExpress().TextBoxFor(i => i.Header.AwardingInstitution, s =>
            {
                s.ReadOnly = true;
                s.Width = Unit.Percentage(100);
                s.ShowModelErrors = true;
                s.Properties.ValidationSettings.ErrorDisplayMode = ErrorDisplayMode.ImageWithTooltip;
                s.Properties.ValidationSettings.SetFocusOnError = true;
                s.Properties.ValidationSettings.ErrorText = "*";
            }).Render();
        });
        g.Items.Add(m =>
        {
            m.Caption = Humica.EF.Models.SY.SYSettings.getLabel("Attach File");
        })
        .SetNestedContent(() =>
        {
            Html.DevExpress().HyperLink(
                 s =>
                 {
                     s.ToolTip = "File";
                     s.ClientVisible = true;
                     s.Properties.Target = "_BLANK";
                     s.NavigateUrl = Model.Header.AttachFile;
                     s.Properties.Text = Humica.EF.Models.SY.SYSettings.getLabel("View");
                 }).GetHtml();
        });
    });
}).GetHtml()