@model Humica.Logic.PR.PRSVCValueObject

<script type="text/javascript">
    var Resign;
    $(document).ready(function () {
        $('#_btnBackAction').click(function () {
            window.location = "@Humica.EF.Models.SY.SYUrl.getBaseUrl()" + "@ViewData[Humica.EF.Models.SY.SYConstant.CURRENT_URL]";
        });
        $('#_btnSaveActionGrid').click(function () {
            $("form").submit();
        });
    });
</script>
<style>
</style>


@{

            Html.DevExpress().FormLayout(settings =>
            {
                settings.Name = "LeaveRequest";
                settings.AlignItemCaptionsInAllGroups = true;

                settings.Items.AddGroupItem(m => Model, g =>
                {
                    g.ColCount = 2;
                    g.GroupBoxDecoration = GroupBoxDecoration.None;
                    g.SettingsItemCaptions.HorizontalAlign = FormLayoutHorizontalAlign.Left;
                    g.Items.Add(m =>
                    {
                        m.Caption = Humica.EF.Models.SY.SYSettings.getLabel("InMonth");
                    })
                     .SetNestedContent(() =>
                     {
                         Html.DevExpress().DateEditFor(i => i.Header.TranDate, s =>
                         {
                             s.ReadOnly = true;
                             s.Properties.ValidationSettings.ErrorDisplayMode = ErrorDisplayMode.ImageWithTooltip;
                             s.Properties.NullText = "MMMM-yyyy";
                             s.Properties.EditFormatString = "MMMM-yyyy";
                             s.Properties.DisplayFormatString = "MMMM-yyyy";
                             s.Properties.ValidationSettings.ErrorText = "*";
                         }).Render();
                     }); g.Items.Add(m =>
                     {
                         m.Caption = Humica.EF.Models.SY.SYSettings.getLabel("Amount");
                     })
                    .SetNestedContent(() =>
                    {
                        Html.DevExpress().SpinEditFor(i => i.Header.Amount, s =>
                        {
                            s.Properties.ValidationSettings.ErrorDisplayMode = ErrorDisplayMode.ImageWithTooltip;
                            s.Properties.ValidationSettings.SetFocusOnError = true;
                            s.Properties.ValidationSettings.ErrorText = "*";
                            s.Properties.DisplayFormatString = "N2";
                            s.ControlStyle.HorizontalAlign = HorizontalAlign.Right;
                        }).Render();
                    });
                    g.Items.Add(m =>
                    {
                        m.Caption = Humica.EF.Models.SY.SYSettings.getLabel("Remark");
                        m.ColSpan = 2;
                    })
                .SetNestedContent(() =>
                {
                    Html.DevExpress().TextBoxFor(i => i.Header.Remark, s =>
                    {
                        s.Width = Unit.Percentage(100);
                        s.Properties.ValidationSettings.ErrorDisplayMode = ErrorDisplayMode.ImageWithTooltip;
                        s.Properties.ValidationSettings.SetFocusOnError = true;
                        s.Properties.ValidationSettings.ErrorText = "*";
                    }).Render();
                });
                });
            }).GetHtml();
}
