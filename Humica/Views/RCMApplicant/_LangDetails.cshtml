@{
    var grid = Html.DevExpress().GridView(
       settings =>
       {

           settings.Name = "_LangDetails";
           settings.KeyFieldName = "Lang";

           settings.Width = Unit.Percentage(100);
           settings.SettingsEditing.Mode = GridViewEditingMode.Inline;

           settings.CallbackRouteValues = new { Controller = "RCMApplicant", Action = "_LangDetails" };

           settings.SettingsBehavior.AllowSort = false;

           settings.CommandColumn.Visible = false;
           settings.CommandColumn.ShowNewButtonInHeader = false;
           settings.CommandColumn.ShowCancelButton = false;
           settings.CommandColumn.ShowEditButton = false;
           settings.SettingsBehavior.AllowFocusedRow = false;
           settings.SettingsBehavior.ConfirmDelete = false;
           settings.CommandColumn.FixedStyle = GridViewColumnFixedStyle.Left;

           settings.SettingsPager.PageSizeItemSettings.Visible = true;

           settings.Columns.Add(column =>
           {
               column.ReadOnly = true;
               column.FieldName = "Lang";
               column.Width = 150;
               column.Caption = Humica.EF.Models.SY.SYSettings.getLabel("Languages");
               column.ColumnType = MVCxGridViewColumnType.ComboBox;
               var textProperties = column.PropertiesEdit as ComboBoxProperties;
               textProperties.ValidationSettings.Display = Display.None;
               textProperties.DataSource = ViewData["LANG_SELECT"];
               textProperties.TextField = "Description";
               textProperties.ValueField = "Code";
               textProperties.ValueType = typeof(string);
           });

           settings.Columns.Add(column =>
           {
               column.FieldName = "Speaking";
               column.Width = 150;
               column.Caption = Humica.EF.Models.SY.SYSettings.getLabel("Speaking");
               column.ColumnType = MVCxGridViewColumnType.TextBox;

           });

           settings.Columns.Add(column =>
           {
               column.FieldName = "Listening";
               column.Width = 150;
               column.Caption = Humica.EF.Models.SY.SYSettings.getLabel("Listening");
               column.ColumnType = MVCxGridViewColumnType.TextBox;

           });

           settings.Columns.Add(column =>
           {
               column.FieldName = "Reading";
               column.Width = 150;
               column.Caption = Humica.EF.Models.SY.SYSettings.getLabel("Reading");
               column.ColumnType = MVCxGridViewColumnType.TextBox;

           });

           settings.Columns.Add(column =>
           {
               column.FieldName = "Writing";
               column.Width = 150;
               column.Caption = Humica.EF.Models.SY.SYSettings.getLabel("Writing");
               column.ColumnType = MVCxGridViewColumnType.TextBox;

           });


           settings.SettingsSearchPanel.Visible = false;
           settings.SettingsBehavior.ColumnResizeMode = ColumnResizeMode.Control;
           settings.Settings.HorizontalScrollBarMode = ScrollBarMode.Visible;
           settings.Settings.VerticalScrollBarMode = ScrollBarMode.Visible;
           settings.Settings.VerticalScrollableHeight = Humica.EF.MD.SYSession.PageHieigh;
           settings.SettingsBehavior.ConfirmDelete = true;
           settings.SettingsPager.PageSize = 50;
           settings.SettingsBehavior.AllowFocusedRow = true;

           settings.CustomJSProperties = (sender, e) =>
           {
               e.Properties["cpVisibleRowCount"] = (sender as MVCxGridView).VisibleRowCount;
           };

           settings.CellEditorInitialize = (s, e) =>
           {
               ASPxEdit editor = (ASPxEdit)e.Editor;
               editor.ValidationSettings.Display = Display.Dynamic;
               if (e.KeyValue != null)
               {
                   if (e.Column.FieldName == "Lang")
                   {
                       e.Editor.ReadOnly = true;
                   }
               }
           };
       });

    if (ViewData["EditError"] != null)
    {
        grid.SetEditErrorText((string)ViewData["EditError"]);
    }
}

@grid.Bind(Model.ListLang).GetHtml()


