@model Humica.Logic.RCM.RCMApplicantObject

@Html.DevExpress().FormLayout(settings =>
{
    settings.Name = "ApplicantInforDetails";
    settings.AlignItemCaptionsInAllGroups = true;
    settings.Items.AddGroupItem(m => Model.Header, g =>
    {
        g.ColCount = 3;
        g.GroupBoxDecoration = GroupBoxDecoration.None;
        g.SettingsItemCaptions.HorizontalAlign = FormLayoutHorizontalAlign.Left;
        g.Width = Unit.Percentage(100);
        g.Items.Add(m =>
        {
            m.Caption = Humica.EF.Models.SY.SYSettings.getLabel("Vacancy") + "*";
            m.CaptionStyle.ForeColor = System.Drawing.Color.Red;
        }).SetNestedContent(() =>
        {
            Html.DevExpress().ComboBoxFor(i => i.Header.VacNo, s =>
            {
                s.ReadOnly = true;
                s.ShowModelErrors = true;
                s.Properties.ValidationSettings.ErrorDisplayMode = ErrorDisplayMode.ImageWithTooltip;
                s.Properties.ValueField = "Code";
                s.Properties.TextField = "Code";
                s.Properties.TextFormatString = "{0}:{1}";
                s.Properties.Columns.Add("Code", Humica.EF.Models.SY.SYSettings.getLabel("Code"));
                s.Properties.Columns.Add("Description", Humica.EF.Models.SY.SYSettings.getLabel("Description"));
                s.Properties.NullText = Humica.EF.Models.SY.SYSettings.getLabel("_SELECT");
            }).BindList(ViewData["VACANCY_SELECT"]).Render();
        });
        g.Items.Add(m =>
        {
            m.Caption = Humica.EF.Models.SY.SYSettings.getLabel("Apply Date");
        }).SetNestedContent(() =>
        {
            Html.DevExpress().DateEditFor(i => i.Header.ApplyDate, s =>
            {
                s.ReadOnly = true;
                s.Properties.ClientInstanceName = "dtApplyDate";
                s.ShowModelErrors = true;
                s.Properties.ValidationSettings.ErrorDisplayMode = ErrorDisplayMode.ImageWithTooltip;
                s.Properties.ValidationSettings.SetFocusOnError = true;
                s.Properties.NullText = ViewData[Humica.EF.SYSConstant.DATE_FORMAT].ToString();
                s.Properties.EditFormatString = ViewData[Humica.EF.SYSConstant.DATE_FORMAT].ToString();
                s.Properties.DisplayFormatString = ViewData[Humica.EF.SYSConstant.DATE_FORMAT].ToString();
                s.Properties.ValidationSettings.ErrorText = "*";
            }).Render();
        });
        g.Items.Add(m =>
        {
            m.Caption = Humica.EF.Models.SY.SYSettings.getLabel("Apply Branch");
        }).SetNestedContent(() =>
        {
            Html.DevExpress().ComboBoxFor(i => i.Header.ApplyBranch, s =>
            {
                s.ReadOnly = true;
                s.ShowModelErrors = true;
                s.Properties.ClientInstanceName = "txtBranch";
                s.Properties.ValidationSettings.ErrorDisplayMode = ErrorDisplayMode.ImageWithTooltip;
                s.Properties.ValidationSettings.SetFocusOnError = true;
                s.Properties.ValidationSettings.ErrorText = "*";
                s.Properties.ValueField = "Code";
                s.Properties.TextField = "Description";
            }).BindList(ViewData["BRANCHES_SELECT"]).Render();
        });
        g.Items.Add(m =>
        {
            m.Caption = Humica.EF.Models.SY.SYSettings.getLabel("First Name") + "*";
            m.CaptionStyle.ForeColor = System.Drawing.Color.Red;
        }).SetNestedContent(() =>
        {
            Html.DevExpress().TextBoxFor(i => i.Header.FirstName, s =>
            {
                s.ReadOnly = true;
                s.Properties.ClientInstanceName = "txtfname";
                s.Properties.ValidationSettings.ErrorDisplayMode = ErrorDisplayMode.ImageWithTooltip;
                s.Properties.ValidationSettings.SetFocusOnError = true;
                s.Properties.ValidationSettings.ErrorText = "*";
            }).Render();
        });
        g.Items.Add(m =>
        {
            m.Caption = Humica.EF.Models.SY.SYSettings.getLabel("Last Name") + "*";
            m.CaptionStyle.ForeColor = System.Drawing.Color.Red;
        }).SetNestedContent(() =>
        {
            Html.DevExpress().TextBoxFor(i => i.Header.LastName, s =>
            {
                s.ReadOnly = true;
                s.Properties.ClientInstanceName = "txtlname";
                s.Properties.ValidationSettings.ErrorDisplayMode = ErrorDisplayMode.ImageWithTooltip;
                s.Properties.ValidationSettings.SetFocusOnError = true;
                s.Properties.ValidationSettings.ErrorText = "*";
            }).Render();
        });
        g.Items.Add(m =>
        {
            m.Caption = Humica.EF.Models.SY.SYSettings.getLabel("Apply Position");
        }).SetNestedContent(() =>
        {
            Html.DevExpress().ComboBoxFor(i => i.Header.ApplyPosition, s =>
            {
                s.Width = Unit.Percentage(100);
                s.ReadOnly = true;
                s.ShowModelErrors = true;
                s.Properties.ClientInstanceName = "txtPosition";
                s.Properties.ValidationSettings.ErrorDisplayMode = ErrorDisplayMode.ImageWithTooltip;
                s.Properties.ValidationSettings.SetFocusOnError = true;
                s.Properties.ValidationSettings.ErrorText = "*";
                s.Properties.ValueField = "Code";
                s.Properties.TextField = "Description";
            }).BindList(ViewData["POSITION_SELECT"]).Render();
        });
        g.Items.Add(m =>
        {
            m.Caption = Humica.EF.Models.SY.SYSettings.getLabel("OthFirstName");
        }).SetNestedContent(() =>
        {
            Html.DevExpress().TextBoxFor(i => i.Header.OthFirstName, s =>
            {
                s.Width = Unit.Percentage(100);
                s.ReadOnly = true;
                s.Properties.ValidationSettings.ErrorDisplayMode = ErrorDisplayMode.ImageWithTooltip;
                s.Properties.ValidationSettings.SetFocusOnError = true;
                s.Properties.ValidationSettings.ErrorText = "*";
            }).Render();
        });
        g.Items.Add(m =>
        {
            m.Caption = Humica.EF.Models.SY.SYSettings.getLabel("OthLastName");
        }).SetNestedContent(() =>
        {
            Html.DevExpress().TextBoxFor(i => i.Header.OthLastName, s =>
            {
                s.Width = Unit.Percentage(100);
                s.ReadOnly = true;
                s.Properties.ValidationSettings.ErrorDisplayMode = ErrorDisplayMode.ImageWithTooltip;
                s.Properties.ValidationSettings.SetFocusOnError = true;
                s.Properties.ValidationSettings.ErrorText = "*";
            }).Render();
        });
        g.Items.Add(m =>
        {
            m.Caption = Humica.EF.Models.SY.SYSettings.getLabel("Apply Department");
        }).SetNestedContent(() =>
        {
            Html.DevExpress().ComboBoxFor(i => i.Header.ApplyDept, s =>
            {
                s.Width = Unit.Percentage(100);
                s.ReadOnly = true;
                s.ShowModelErrors = true;
                s.Properties.ClientInstanceName = "txtDept";
                s.Properties.ValidationSettings.ErrorDisplayMode = ErrorDisplayMode.ImageWithTooltip;
                s.Properties.ValidationSettings.SetFocusOnError = true;
                s.Properties.ValidationSettings.ErrorText = "*";
                s.Properties.ValueField = "Code";
                s.Properties.TextField = "Description";
            }).BindList(ViewData["DEPARTMENT_SELECT"]).Render();
        });
        g.Items.Add(m =>
        {
            m.Caption = Humica.EF.Models.SY.SYSettings.getLabel("Gender");
        }).SetNestedContent(() =>
        {
            Html.DevExpress().ComboBoxFor(i => i.Header.Gender, s =>
            {
                s.Width = Unit.Percentage(100);
                s.ReadOnly = true;
                s.ShowModelErrors = true;
                s.Properties.ClientInstanceName = "cboGender";
                s.Properties.ValidationSettings.ErrorDisplayMode = ErrorDisplayMode.ImageWithTooltip;
                s.Properties.ValidationSettings.SetFocusOnError = true;
                s.Properties.ValidationSettings.ErrorText = "*";
                s.Properties.ValueField = "SelectValue";
                s.Properties.TextField = "SelectText";
                s.Properties.NullText = Humica.EF.Models.SY.SYSettings.getLabel("_SELECT");
            }).BindList(ViewData["GENDER_SELECT"]).Render();
        });
        g.Items.Add(m =>
        {
            m.Caption = Humica.EF.Models.SY.SYSettings.getLabel("Date of Birth");
        }).SetNestedContent(() =>
        {
            Html.DevExpress().DateEditFor(i => i.Header.DOB, s =>
            {
                s.Width = Unit.Percentage(100);
                s.ReadOnly = true;
                s.Properties.ClientInstanceName = "dtDOB";
                s.ShowModelErrors = true;
                s.Properties.ValidationSettings.ErrorDisplayMode = ErrorDisplayMode.ImageWithTooltip;
                s.Properties.ValidationSettings.SetFocusOnError = true;
                s.Properties.NullText = ViewData[Humica.EF.SYSConstant.DATE_FORMAT].ToString();
                s.Properties.EditFormatString = ViewData[Humica.EF.SYSConstant.DATE_FORMAT].ToString();
                s.Properties.DisplayFormatString = ViewData[Humica.EF.SYSConstant.DATE_FORMAT].ToString();
                s.Properties.ValidationSettings.ErrorText = "*";
            }).Render();
        });
        g.Items.Add(m =>
        {
            m.Caption = Humica.EF.Models.SY.SYSettings.getLabel("Working Type");
        }).SetNestedContent(() =>
        {
            Html.DevExpress().ComboBoxFor(i => i.Header.WorkingType, s =>
            {
                s.Width = Unit.Percentage(100);
                s.ReadOnly = true;
                s.Properties.ClientInstanceName = "txtWorkingType";
                s.ShowModelErrors = true;
                s.Properties.ValidationSettings.ErrorDisplayMode = ErrorDisplayMode.ImageWithTooltip;
                s.Properties.ValidationSettings.SetFocusOnError = true;
                s.Properties.ValidationSettings.ErrorText = "*";
                s.Properties.ValueField = "Code";
                s.Properties.TextField = "Description";
                s.Properties.NullText = Humica.EF.Models.SY.SYSettings.getLabel("_SELECT");
            }).BindList(ViewData["WORKTYPE_SELECT"]).Render();
        });
        g.Items.Add(m =>
        {
            m.Caption = Humica.EF.Models.SY.SYSettings.getLabel("Title");
        }).SetNestedContent(() =>
        {
            Html.DevExpress().ComboBoxFor(i => i.Header.Title, s =>
            {
                s.Width = Unit.Percentage(100);
                s.ReadOnly = true;
                s.ShowModelErrors = true;
                s.Properties.ValidationSettings.ErrorDisplayMode = ErrorDisplayMode.ImageWithTooltip;
                s.Properties.ValidationSettings.SetFocusOnError = true;
                s.Properties.ValidationSettings.ErrorText = "*";
                s.Properties.TextFormatString = "{0}";
                s.Properties.ValueField = "SelectValue";
                s.Properties.TextField = "SelectText";
                s.Properties.NullText = Humica.EF.Models.SY.SYSettings.getLabel("_SELECT");
            }).BindList(ViewData["INITIAL_SELECT"]).Render();
        });
        g.Items.Add(m =>
        {
            m.Caption = Humica.EF.Models.SY.SYSettings.getLabel("Marital");
        }).SetNestedContent(() =>
        {
            Html.DevExpress().ComboBoxFor(i => i.Header.Marital, s =>
            {
                s.Width = Unit.Percentage(100);
                s.ReadOnly = true;
                s.ShowModelErrors = true;
                s.Properties.ValidationSettings.ErrorDisplayMode = ErrorDisplayMode.ImageWithTooltip;
                s.Properties.ValidationSettings.SetFocusOnError = true;
                s.Properties.ValidationSettings.ErrorText = "*";
                s.Properties.TextFormatString = "{0}";
                s.Properties.ValueField = "SelectValue";
                s.Properties.TextField = "SelectText";
                s.Properties.NullText = Humica.EF.Models.SY.SYSettings.getLabel("_SELECT");
            }).BindList(ViewData["MARITAL_SELECT"]).Render();
        });
        g.Items.Add(m =>
        {
            m.Caption = Humica.EF.Models.SY.SYSettings.getLabel("Nationality");
        }).SetNestedContent(() =>
        {
            Html.DevExpress().ComboBoxFor(i => i.Header.Nationality, s =>
            {
                s.Width = Unit.Percentage(100);
                s.ShowModelErrors = true;
                s.ReadOnly = true;
                s.Properties.AllowNull = true;
                s.Properties.ValidationSettings.ErrorDisplayMode = ErrorDisplayMode.ImageWithTooltip;
                s.Properties.ValidationSettings.SetFocusOnError = true;
                s.Properties.ValidationSettings.ErrorText = "*";
                s.Properties.TextFormatString = "{0},{1}";
                s.Properties.ValueField = "Code";
                s.Properties.TextField = "Description";
                s.Properties.NullText = Humica.EF.Models.SY.SYSettings.getLabel("_SELECT");
            }).BindList(ViewData["NATION_SELECT"]).Render();
        });
        g.Items.Add(m =>
        {
            m.Caption = Humica.EF.Models.SY.SYSettings.getLabel("Expect Salary");
        }).SetNestedContent(() =>
        {
            Html.DevExpress().SpinEditFor(i => i.Header.ExpectSalary, s =>
            {
                s.Width = Unit.Percentage(100);
                s.ReadOnly = true;
                s.Properties.ClientInstanceName = "spExpectSalary";
                s.Properties.ValidationSettings.ErrorDisplayMode = ErrorDisplayMode.ImageWithTooltip;
                s.Properties.ValidationSettings.SetFocusOnError = true;
                s.Properties.ValidationSettings.ErrorText = "*";
                s.Properties.DisplayFormatString = "N2";
                s.ControlStyle.HorizontalAlign = HorizontalAlign.Right;
            }).Render();
        });
        g.Items.Add(m =>
        {
            m.Caption = Humica.EF.Models.SY.SYSettings.getLabel("Phone");
        }).SetNestedContent(() =>
        {
            Html.DevExpress().TextBoxFor(i => i.Header.Phone1, s =>
            {
                s.Width = Unit.Percentage(100);
                s.ReadOnly = true;
                s.Properties.ClientInstanceName = "txtp1";
                s.Properties.ValidationSettings.ErrorDisplayMode = ErrorDisplayMode.ImageWithTooltip;
                s.Properties.ValidationSettings.SetFocusOnError = true;
                s.Properties.ValidationSettings.ErrorText = "*";
            }).Render();
        });
        g.Items.Add(m =>
        {
            m.Caption = Humica.EF.Models.SY.SYSettings.getLabel("Email");
        }).SetNestedContent(() =>
        {
            Html.DevExpress().TextBoxFor(i => i.Header.Email, s =>
            {
                s.Width = Unit.Percentage(100);
                s.ReadOnly = true;
                s.Properties.ClientInstanceName = "txtmail";
                s.Properties.ValidationSettings.ErrorDisplayMode = ErrorDisplayMode.ImageWithTooltip;
                s.Properties.ValidationSettings.SetFocusOnError = true;
                s.Properties.ValidationSettings.ErrorText = "*";
            }).Render();
        });
        g.Items.Add(m =>
        {
            m.Caption = Humica.EF.Models.SY.SYSettings.getLabel("Source");
        }).SetNestedContent(() =>
        {
            Html.DevExpress().ComboBoxFor(i => i.Header.Source, s =>
            {
                s.Width = Unit.Percentage(100);
                s.ReadOnly = true;
                s.ShowModelErrors = true;
                s.Properties.ClientInstanceName = "cboReceived";
                s.Properties.ValidationSettings.ErrorDisplayMode = ErrorDisplayMode.ImageWithTooltip;
                s.Properties.ValidationSettings.SetFocusOnError = true;
                s.Properties.ValidationSettings.ErrorText = "*";
                s.Properties.ValueField = "Code";
                s.Properties.TextField = "Company";
                s.Properties.NullText = Humica.EF.Models.SY.SYSettings.getLabel("_SELECT");
            }).BindList(ViewData["RECEIVED_SELECT"]).Render();
        });
        g.Items.Add(m =>
        {
            m.Caption = Humica.EF.Models.SY.SYSettings.getLabel("Last Salary");
        }).SetNestedContent(() =>
        {
            Html.DevExpress().SpinEditFor(i => i.Header.LastSalary, s =>
            {
                s.Width = Unit.Percentage(100);
                s.ReadOnly = true;
                s.Properties.ClientInstanceName = "spLastSalary";
                s.Properties.ValidationSettings.ErrorDisplayMode = ErrorDisplayMode.ImageWithTooltip;
                s.Properties.ValidationSettings.SetFocusOnError = true;
                s.Properties.ValidationSettings.ErrorText = "*";
                s.Properties.DisplayFormatString = "N2";
                s.ControlStyle.HorizontalAlign = HorizontalAlign.Right;
                s.Properties.NumberType = SpinEditNumberType.Float;
                s.Properties.MinValue = 1;
                s.Properties.MaxValue = 9999999999999;
            }).Render();
        });
        g.Items.Add(m =>
        {
            m.Caption = Humica.EF.Models.SY.SYSettings.getLabel("Permanent Address");
            m.ColSpan = 3;
        }).SetNestedContent(() =>
        {
            Html.DevExpress().TextBoxFor(i => i.Header.PermanentAddr, s =>
            {
                s.ReadOnly = true;
                s.Width = Unit.Percentage(100);
                s.Properties.ClientInstanceName = "txtPermanentAddr";
                s.Properties.ValidationSettings.ErrorDisplayMode = ErrorDisplayMode.ImageWithTooltip;
                s.Properties.ValidationSettings.SetFocusOnError = true;
                s.Properties.ValidationSettings.ErrorText = "*";
            }).Render();
        });
        g.Items.Add(m =>
        {
            m.Caption = Humica.EF.Models.SY.SYSettings.getLabel("Current Address");
            m.ColSpan = 3;
        }).SetNestedContent(() =>
        {
            Html.DevExpress().TextBoxFor(i => i.Header.CurAddr, s =>
            {
                s.ReadOnly = true;
                s.Width = Unit.Percentage(100);
                s.Properties.ClientInstanceName = "tztCurAddr";
                s.Properties.ValidationSettings.ErrorDisplayMode = ErrorDisplayMode.ImageWithTooltip;
                s.Properties.ValidationSettings.SetFocusOnError = true;
                s.Properties.ValidationSettings.ErrorText = "*";
            }).Render();
        });
        g.Items.Add(m =>
        {
            m.Caption = Humica.EF.Models.SY.SYSettings.getLabel("Attach CV");
        })
        .SetNestedContent(() =>
        {
            Html.DevExpress().HyperLink(s =>
            {
                s.Name = "view_file_uploaded";
                s.ToolTip = "File";
                s.ClientVisible = true;
                s.Properties.Target = "_BLANK";
                s.NavigateUrl = Model.Header.ResumeFile;
                s.Properties.Text = Humica.EF.Models.SY.SYSettings.getLabel("View");
            }).GetHtml();
        });
    });

}).GetHtml()

@Html.DevExpress().PageControl(settings =>
{
    settings.Name = "pcScrollingMaterialDetails";
    settings.Width = Unit.Percentage(100);
    settings.EnableTabScrolling = true;
    settings.TabAlign = TabAlign.Justify;
    settings.Styles.Tab.CssClass = "scrolling_Tab";
    //settings.TabPages.Add(Humica.EF.Models.SY.SYSettings.getLabel("Dependent")).SetContent(() =>
    //{
    //    @Html.RenderPartial("GridItemDependentDetails", Model);
    //});
    settings.TabPages.Add(Humica.EF.Models.SY.SYSettings.getLabel("Education Background")).SetContent(() =>
    {
        @Html.RenderPartial("_EduDetails", Model);
    });
    settings.TabPages.Add(Humica.EF.Models.SY.SYSettings.getLabel("Languages")).SetContent(() =>
    {
        @Html.RenderPartial("_LangDetails", Model);
    });
    settings.TabPages.Add(Humica.EF.Models.SY.SYSettings.getLabel("Training Course")).SetContent(() =>
    {
        @Html.RenderPartial("_TrainingDetails", Model);
    });
    settings.TabPages.Add(Humica.EF.Models.SY.SYSettings.getLabel("Working Experience")).SetContent(() =>
    {
        @Html.RenderPartial("_ExperienceDetails", Model);
    });
    settings.TabPages.Add(Humica.EF.Models.SY.SYSettings.getLabel("Reference")).SetContent(() =>
    {
        @Html.RenderPartial("_ReferenceDetails", Model);
    });
}).GetHtml()

