@model Humica.Training.TrainingInvitationObject
<script type="text/javascript">
    var selectedIDs = "";
    var selectedIDs_ = "";
    var ss;
    var status = "";
    $(document).ready(function (s, e) {
        $('#_btnImageView').click(function () {
            ss = 1;
            GridViewList.GetRowValues(GridViewList.GetFocusedRowIndex(), 'TrainNo;Status', OnGetRowValues);
        });
         $('#_btnImport').click(function () {
            window.location = "@Humica.EF.Models.SY.SYUrl.getBaseUrl()" + "@ViewData[Humica.EF.Models.SY.SYConstant.CURRENT_URL]" + "Import";
         })

        $('#_bthEditAction').click(function () {
            ss = 2;
            GridViewList.GetRowValues(GridViewList.GetFocusedRowIndex(), 'TrainNo;Status', OnGetRowValues);
        });

        $('#_btnDeleteAction').click(function () {
            ss = 41;
            GridViewList.GetRowValues(GridViewList.GetFocusedRowIndex(), 'TrainNo;Status', OnGetRowValues);
        });
    });
    $("#_btnNewAction").hide();
    function DbRowClick(s, e) {
        ss = 1;
        s.GetRowValues(s.GetFocusedRowIndex(), 'TrainNo;Status', OnGetRowValues);
    }
    function OnGetRowValues(values) {
        selectedIDs = values[0];
        status = values[1];
         if (ss == 1) {
             window.location = "@Humica.EF.Models.SY.SYUrl.getBaseUrl()" + "@ViewData[Humica.EF.Models.SY.SYConstant.CURRENT_URL]" + "Details?id=" + selectedIDs;
        }
         //Edit
        if (ss == 2) {
            if (status == "@Humica.EF.SYDocumentStatus.OPEN.ToString()") {
                window.location = "@Humica.EF.Models.SY.SYUrl.getBaseUrl()" + "@ViewData[Humica.EF.Models.SY.SYConstant.CURRENT_URL]" + "Edit?id=" + selectedIDs;
            }
            else {
                AlertMessage("@Humica.EF.Models.SY.SYMessages.getMessage("DOC_INV", Humica.EF.MD.SYSession.getSessionUser().Lang)");
            }
        }
        //delete
        if (ss == 41) {
            if (status == "@Humica.EF.SYDocumentStatus.OPEN.ToString()") {
                ConfirmMessage("@Humica.EF.Models.SY.SYMessages.getMessage("DELETE_C", Humica.EF.MD.SYSession.getSessionUser().Lang)");
            }
            else {
                AlertMessage("@Humica.EF.Models.SY.SYMessages.getMessage("DOC_INV", Humica.EF.MD.SYSession.getSessionUser().Lang)");
            }
        }
         //Approve
        if (ss == 6) {
            if (status == "@Humica.EF.SYDocumentStatus.PENDING.ToString()") {
                ConfirmMessage("@Humica.EF.Models.SY.SYMessages.getMessage("APPROVE_C", Humica.EF.MD.SYSession.getSessionUser().Lang)");
            }
            else {
                AlertMessage("@Humica.EF.Models.SY.SYMessages.getMessage("DOC_INV", Humica.EF.MD.SYSession.getSessionUser().Lang)");
            }
        }
        //Request
        if (ss == 7) {
            if (status == "@Humica.EF.SYDocumentStatus.OPEN.ToString()") {
                ConfirmMessage("@Humica.EF.Models.SY.SYMessages.getMessage("REQUEST_C", Humica.EF.MD.SYSession.getSessionUser().Lang)");
            }
            else {
                AlertMessage("@Humica.EF.Models.SY.SYMessages.getMessage("DOC_INV", Humica.EF.MD.SYSession.getSessionUser().Lang)");
            }
        }
         //Canel
        if (ss == 8) {
            if (!(status == "@Humica.EF.SYDocumentStatus.CANCELLED.ToString()" || status == "@Humica.EF.SYDocumentStatus.APPROVED.ToString()")) {
                ConfirmMessage("@Humica.EF.Models.SY.SYMessages.getMessage("CANCEL_A", Humica.EF.MD.SYSession.getSessionUser().Lang)");
            }
            else {
                AlertMessage("@Humica.EF.Models.SY.SYMessages.getMessage("DOC_INV", Humica.EF.MD.SYSession.getSessionUser().Lang)");
            }
        }
         //Release Document
        if (ss == 9) {
            if (status == "@Humica.EF.SYDocumentStatus.APPROVED.ToString()") {
                ConfirmMessage("@Humica.EF.Models.SY.SYMessages.getMessage("RELEASE_C", Humica.EF.MD.SYSession.getSessionUser().Lang)");
            }
            else {
                AlertMessage("@Humica.EF.Models.SY.SYMessages.getMessage("DOC_INV", Humica.EF.MD.SYSession.getSessionUser().Lang)");
            }
        }
        //Close
        if (ss == 10) {
            if (status == "@Humica.EF.SYDocumentStatus.RELEASED.ToString()") {
                ConfirmMessage("@Humica.EF.Models.SY.SYMessages.getMessage("CLOSED_C", Humica.EF.MD.SYSession.getSessionUser().Lang)");
            }
            else {
                AlertMessage("@Humica.EF.Models.SY.SYMessages.getMessage("DOC_INV", Humica.EF.MD.SYSession.getSessionUser().Lang)");
            }
        }

        @*if (ss == 6) {

            ConfirmMessage("@Humica.EF.Models.SY.SYMessages.getMessage("INVITE_C", Humica.EF.MD.SYSession.getSessionUser().Lang)");
        }*@

    }
    function _clickMenuAction(s, e) {
        if (e.item.name == "_mnApprove") {
            ss = 6;
            GridViewList.GetRowValues(GridViewList.GetFocusedRowIndex(), 'TrainNo;Status', OnGetRowValues);
        }
        if (e.item.name == "_mnRequest") {
            ss = 7;
            GridViewList.GetRowValues(GridViewList.GetFocusedRowIndex(), 'TrainNo;Status', OnGetRowValues);
        }
        if (e.item.name == "_mnCancel") {
            ss = 8;
            GridViewList.GetRowValues(GridViewList.GetFocusedRowIndex(), 'TrainNo;Status', OnGetRowValues);
        }
        if (e.item.name == "_btnReleaseAction") {
            ss = 9;
            GridViewList.GetRowValues(GridViewList.GetFocusedRowIndex(), 'TrainNo;Status', OnGetRowValues);
        }
        if (e.item.name == "_btnClose") {
            ss = 10;
            GridViewList.GetRowValues(GridViewList.GetFocusedRowIndex(), 'TrainNo;Status', OnGetRowValues);
        }
    }
    function _clickConfirm(s, e) {
        if (s.GetText() == "@Humica.EF.Models.SY.SYConstant.OK") {
            if (ss == 41) {
                window.location = "@Humica.EF.Models.SY.SYUrl.getBaseUrl()" + "@ViewData[Humica.EF.Models.SY.SYConstant.CURRENT_URL].ToString()" + "Delete?IDs=" + selectedIDs;
            }
            if (ss == 6) {
                window.location = "@Humica.EF.Models.SY.SYUrl.getBaseUrl()" + "@ViewData[Humica.EF.Models.SY.SYConstant.CURRENT_URL].ToString()" + "Approve?id=" + selectedIDs;
            }
            if (ss == 7) {
                window.location = "@Humica.EF.Models.SY.SYUrl.getBaseUrl()" + "@ViewData[Humica.EF.Models.SY.SYConstant.CURRENT_URL].ToString()" + "RequestForApproval?id=" + selectedIDs;
            }
            if (ss == 8) {
                window.location = "@Humica.EF.Models.SY.SYUrl.getBaseUrl()" + "@ViewData[Humica.EF.Models.SY.SYConstant.CURRENT_URL].ToString()" + "Cancel?id=" + selectedIDs;
            }
            if (ss == 9) {
                window.location = "@Humica.EF.Models.SY.SYUrl.getBaseUrl()" + "@ViewData[Humica.EF.Models.SY.SYConstant.CURRENT_URL].ToString()" + "ReleaseDoc?id=" + selectedIDs;
            }
             if (ss == 10) {
                window.location = "@Humica.EF.Models.SY.SYUrl.getBaseUrl()" + "@ViewData[Humica.EF.Models.SY.SYConstant.CURRENT_URL]" + "Closed?id=" + selectedIDs;
            }
        }
    }
    function Tap_ActiveTabChanged(s, e) {
        var tapName = e.tab.name;
        $('.fitler-doc').show();
        if (tapName == "Tap2") {
            $('.fitler-doc').hide();
        }
    }
    // event grideview checkbox
    function OnSelectionChanged(s, e) {
        s.GetSelectedFieldValues("TrainNo", GetSelectedFieldValuesCallback);
    }
    function GetSelectedFieldValuesCallback(values) {
        selectedIDs_ = values.join(',');
    }

</script>
<script src="~/Content/AdjustSizePage.js"></script>

<div class="fitler-doc">
    @Html.Partial("FTTraining", Model)
</div>
@Html.DevExpress().PageControl(
    settings =>
    {
        settings.Name = "pcScrollingMaterial1";
        settings.Width = Unit.Percentage(100);

        settings.EnableTabScrolling = true;
        settings.TabAlign = TabAlign.Justify;
        settings.ActivateTabPageAction = ActivateTabPageAction.Click;
        settings.Styles.Tab.CssClass = "scrolling_Tab";
        settings.ClientSideEvents.ActiveTabChanged = "Tap_ActiveTabChanged";
        settings.TabPages.Add(Humica.EF.Models.SY.SYSettings.getLabel((List<Humica.EF.MD.CFForm>
        )ViewData[Humica.EF.SYSConstant.LIST_CONF_FORM], "Course"), "Tap1").SetContent(() =>
        {
            Html.RenderPartial("PartialTrainee", Model.ListInvitation);

        });
        if (Model.ListCalender.Count > 0)
        {
            settings.TabPages.Add(Humica.EF.Models.SY.SYSettings.getLabel((List<Humica.EF.MD.CFForm>)ViewData[Humica.EF.SYSConstant.LIST_CONF_FORM], "WaitingList"), "Tap2").SetContent(() =>
            {
                Html.RenderPartial("PartialProcess", Model.ListCalender);

            });
        }
    }).GetHtml()
