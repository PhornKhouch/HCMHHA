@model Humica.Logic.PR.PROverTimeObject
<script type="text/javascript">

    $(document).ready(function () {
        $('#_btnBackAction').click(function () {
            window.location = "@Humica.EF.Models.SY.SYUrl.getBaseUrl()" + "@ViewData[Humica.EF.Models.SY.SYConstant.CURRENT_URL]";
        });
        $('#_btnSaveActionGrid').click(function () {
            $("form").submit();
        });
    });
    function convert(str) {
        var date = new Date(str),
          mnth = ("0" + (date.getMonth() + 1)).slice(-2),
          day = ("0" + date.getDate()).slice(-2),
          Minutes = ("0" + date.getMinutes()).slice(-2);
        return [date.getFullYear(), mnth, day].join("-") + " " + date.getHours() + ":" + date.getMinutes() + ":" + date.getSeconds();
    }
    function SelectChangeCbo(s, e) {

        if (s.GetSelectedItem() != null) {
            txtAllName.SetValue(s.GetSelectedItem().GetColumnText(1));
            txtPosition.SetValue(s.GetSelectedItem().GetColumnText(2));
        }

    }
    function OnClientValueChanged(s,e)
    {
       ShowData();
    }
    function ShowData() {
        var total = 0;
        $.ajax({
            type: 'post',
            url: _baseUrl + '/SelfService/LeaveBalance/HROTRequest/ShowData',
            data: {  'FromDate': convert(txtFromDate.GetDate()), 'ToDate': convert(txtToDate.GetDate()) },
            success: function (data) {
                if (data.MS == "OK") {
                    txtHour.SetValue(data.Hour);
                }
                else {
                    AlertMessage(data.MS);
                }
            },
            error: function (XMLHttpRequest, textStatus, errorThrown) {
                AlertMessage(XMLHttpRequest.responseText);

            }
        });
    }


    function ShowDataEmp() {
        var total = 0;
        $.ajax({
            type: 'post',
            url: _baseUrl + '/PR/PRM/PREmpOTCon/ShowDataEmp',
            data: { 'id': 'TOTAL', 'EmpCode': selectedIDs },
            success: function (data) {
                if (data.MS == "OK") {
                    var StartDate = data.StartDate;
                    nowDate = new Date(parseInt(StartDate.substr(6)));
                    txtAllName.SetValue(data.AllName);
                    txtEmpType.SetValue(data.EmpType);
                    txtDivision.SetValue(data.Division);
                    txtDepartment.SetValue(data.DEPT);
                    txtSection.SetValue(data.SECT);
                    txtLevel.SetValue(data.LevelCode);
                    txtPosition.SetValue(data.Position);
                    txtStartDate.SetValue(nowDate);
                    GridItems.Refresh();
                }
                else {
                    AlertMessage(data.MS);
                }
            },
            error: function (XMLHttpRequest, textStatus, errorThrown) {
                AlertMessage(XMLHttpRequest.responseText);

            }
        });
    }

    function EmpDbRowClick(s, e) {
        s.GetRowValues(s.GetFocusedRowIndex(), 'EmpCode;', OnGetRowValuesEmp);
        cboEmployee.HideDropDown();
    }

    function rowSelected(s, e) {
        EmployeeGridListSelector.GetRowValues(EmployeeGridListSelector.GetFocusedRowIndex(), 'EmpCode;', OnGetRowValuesEmp);
        cboEmployee.HideDropDown();
    }
    function OnGetRowValuesEmp(values) {
        cboEmployee.SetValue(values[0]);
        selectedIDs = values[0];
        ShowDataEmp();
    }
</script>
<style>
</style>

  @{

      Html.DevExpress().FormLayout(settings =>
      {

          settings.Name = "LeaveRequest";
          settings.AlignItemCaptionsInAllGroups = true;

          settings.Items.AddGroupItem(m => Model.HeaderOT, g =>
          {

              g.ColCount = 3;
              g.GroupBoxDecoration = GroupBoxDecoration.None;
              g.SettingsItemCaptions.HorizontalAlign = FormLayoutHorizontalAlign.Left;

              g.Items.Add(m =>
              {
                  m.Caption = Humica.EF.Models.SY.SYSettings.getLabel("EmpCode");
              })
             .SetNestedContent(() =>
             {
                 Html.DevExpress().DropDownEditFor(i => i.HeaderStaff.EmpCode, s =>
                 {
                     s.Properties.ClientInstanceName = "cboEmployee";
                     s.Properties.ValidationSettings.ErrorDisplayMode = ErrorDisplayMode.ImageWithTooltip;
                     s.Properties.ValidationSettings.SetFocusOnError = true;
                     s.Properties.ValidationSettings.ErrorText = "*";
                     s.SetDropDownWindowTemplateContent(c =>
                     {
                         Html.RenderPartial(Humica.Models.SY.SYListFilter.ListFilterViewEmployee);

                         ViewContext.Writer.Write("<div style=\"padding: 6px; height: 24px;\">");

                         @Html.DevExpress().Button(
                           buttonSettings =>
                           {
                               buttonSettings.Name = "buttonSelect";
                               buttonSettings.Text = Humica.EF.Models.SY.SYSettings.getLabel("Ok");
                               buttonSettings.Style.Add("float", "right");
                               buttonSettings.Style.Add("margin", "0px 3px");
                               buttonSettings.ClientSideEvents.Click = "rowSelected";
                               buttonSettings.Height = 25;
                           }
                               ).Render();
                         ViewContext.Writer.Write("</div>");

                     });
                     s.Properties.AnimationType = AnimationType.None;
                 }).Render();
             });
              g.Items.Add(m =>
              {
                  m.Caption = Humica.EF.Models.SY.SYSettings.getLabel("AllName");
              })
       .SetNestedContent(() =>
       {
           Html.DevExpress().TextBoxFor(i => i.HeaderStaff.AllName, s =>
           {
               s.Properties.ClientInstanceName = "txtAllName";
               s.ReadOnly = true;
               s.Properties.ValidationSettings.ErrorDisplayMode = ErrorDisplayMode.ImageWithTooltip;
               s.Properties.ValidationSettings.SetFocusOnError = true;
               s.Properties.ValidationSettings.ErrorText = "*";
           }).Render();
       });
              g.Items.Add(m =>
              {
                  m.Caption = Humica.EF.Models.SY.SYSettings.getLabel("EmployeeType");
              })
              .SetNestedContent(() =>
              {
                  Html.DevExpress().TextBoxFor(i => i.HeaderStaff.EmployeeType, s =>
                  {
                      s.Properties.ClientInstanceName = "txtEmpType";
                      s.ReadOnly = true;
                      s.ShowModelErrors = true;
                      s.Properties.ValidationSettings.ErrorDisplayMode = ErrorDisplayMode.ImageWithTooltip;
                      s.Properties.ValidationSettings.SetFocusOnError = true;
                      s.Properties.ValidationSettings.ErrorText = "*";
                  }).Render();
              });
              g.Items.Add(m =>
              {
                  m.Caption = Humica.EF.Models.SY.SYSettings.getLabel("Division");
              })
              .SetNestedContent(() =>
              {
                  Html.DevExpress().TextBoxFor(i => i.HeaderStaff.Division, s =>
                  {
                      s.Properties.ClientInstanceName = "txtDivision";
                      s.ReadOnly = true;
                      s.ShowModelErrors = true;
                      s.Properties.ValidationSettings.ErrorDisplayMode = ErrorDisplayMode.ImageWithTooltip;
                      s.Properties.ValidationSettings.SetFocusOnError = true;
                      s.Properties.ValidationSettings.ErrorText = "*";
                  }).Render();
              });
              g.Items.Add(m =>
              {
                  m.Caption = Humica.EF.Models.SY.SYSettings.getLabel("Department");
              })
              .SetNestedContent(() =>
              {
                  Html.DevExpress().TextBoxFor(i => i.HeaderStaff.Department, s =>
                  {
                      s.Properties.ClientInstanceName = "txtDepartment";
                      s.ReadOnly = true;
                      s.ShowModelErrors = true;
                      s.Properties.ValidationSettings.ErrorDisplayMode = ErrorDisplayMode.ImageWithTooltip;
                      s.Properties.ValidationSettings.SetFocusOnError = true;
                      s.Properties.ValidationSettings.ErrorText = "*";
                  }).Render();
              });
              g.Items.Add(m =>
              {
                  m.Caption = Humica.EF.Models.SY.SYSettings.getLabel("Section");
              })
              .SetNestedContent(() =>
              {
                  Html.DevExpress().TextBoxFor(i => i.HeaderStaff.Section, s =>
                  {
                      s.Properties.ClientInstanceName = "txtSection";
                      s.ReadOnly = true;
                      s.ShowModelErrors = true;
                      s.Properties.ValidationSettings.ErrorDisplayMode = ErrorDisplayMode.ImageWithTooltip;
                      s.Properties.ValidationSettings.SetFocusOnError = true;
                      s.Properties.ValidationSettings.ErrorText = "*";
                  }).Render();
              });
              g.Items.Add(m =>
              {
                  m.Caption = Humica.EF.Models.SY.SYSettings.getLabel("Level");
              })
              .SetNestedContent(() =>
              {
                  Html.DevExpress().TextBoxFor(i => i.HeaderStaff.Level, s =>
                  {
                      s.Properties.ClientInstanceName = "txtLevel";
                      s.ReadOnly = true;
                      s.ShowModelErrors = true;
                      s.Properties.ValidationSettings.ErrorDisplayMode = ErrorDisplayMode.ImageWithTooltip;
                      s.Properties.ValidationSettings.SetFocusOnError = true;
                      s.Properties.ValidationSettings.ErrorText = "*";
                  }).Render();
              });
              g.Items.Add(m =>
              {
                  m.Caption = Humica.EF.Models.SY.SYSettings.getLabel("Position");
              })
              .SetNestedContent(() =>
              {
                  Html.DevExpress().TextBoxFor(i => i.HeaderStaff.Position, s =>
                  {
                      s.Properties.ClientInstanceName = "txtPosition";
                      s.ReadOnly = true;
                      s.ShowModelErrors = true;
                      s.Properties.ValidationSettings.ErrorDisplayMode = ErrorDisplayMode.ImageWithTooltip;
                      s.Properties.ValidationSettings.SetFocusOnError = true;
                      s.Properties.ValidationSettings.ErrorText = "*";
                  }).Render();
              });
              g.Items.Add(m =>
              {
                  m.Caption = Humica.EF.Models.SY.SYSettings.getLabel("StartDate");
              })
              .SetNestedContent(() =>
              {
                  Html.DevExpress().DateEditFor(i => i.HeaderStaff.StartDate, s =>
                  {
                      s.Properties.ClientInstanceName = "txtStartDate";
                      s.ReadOnly = true;
                      s.ShowModelErrors = true;
                      s.Properties.ValidationSettings.ErrorDisplayMode = ErrorDisplayMode.ImageWithTooltip;
                      s.Properties.ValidationSettings.SetFocusOnError = true;
                      s.Properties.NullText = ViewData[Humica.EF.SYSConstant.DATE_FORMAT].ToString();
                      s.Properties.EditFormatString = ViewData[Humica.EF.SYSConstant.DATE_FORMAT].ToString();
                      s.Properties.DisplayFormatString = ViewData[Humica.EF.SYSConstant.DATE_FORMAT].ToString();
                      s.Properties.ValidationSettings.ErrorText = "*";
                  }).Render();
              });

          g.Items.Add(m =>
          {
              m.Caption = Humica.EF.Models.SY.SYSettings.getLabel("OTDate");
          })
               .SetNestedContent(() =>
               {
                   Html.DevExpress().DateEditFor(i => i.HeaderOTCon.OTDate, s =>
                   {
                       s.ShowModelErrors = true;
                       s.Properties.ValidationSettings.ErrorDisplayMode = ErrorDisplayMode.ImageWithTooltip;
                       s.Properties.ValidationSettings.SetFocusOnError = true;
                       s.Properties.NullText = ViewData[Humica.EF.SYSConstant.DATE_FORMAT].ToString();
                       s.Properties.EditFormatString = ViewData[Humica.EF.SYSConstant.DATE_FORMAT].ToString();
                       s.Properties.DisplayFormatString = ViewData[Humica.EF.SYSConstant.DATE_FORMAT].ToString();
                       s.Properties.ValidationSettings.ErrorText = "*";
                   }).Render();
               });

          g.Items.Add(m =>
          {
              m.Caption = Humica.EF.Models.SY.SYSettings.getLabel("OT Hours");
          })
            .SetNestedContent(() =>
            {
                Html.DevExpress().TextBoxFor(i => i.HeaderOTCon.Hours, s =>
                {
                    s.ShowModelErrors = true;
                    s.Properties.ValidationSettings.ErrorDisplayMode = ErrorDisplayMode.ImageWithTooltip;
                    s.Properties.ValidationSettings.SetFocusOnError = true;
                    s.Properties.ValidationSettings.ErrorText = "*";
                    s.Properties.DisplayFormatString = "N2";
                }).Render();
            });
          g.Items.Add(m =>
          {
              m.Caption = Humica.EF.Models.SY.SYSettings.getLabel("Reason");
              m.ColSpan = 2;
          })
          .SetNestedContent(() =>
          {
              Html.DevExpress().TextBoxFor(i => i.HeaderOT.Reason, s =>
              {
                  s.Width = Unit.Percentage(100);
                  s.ShowModelErrors = true;
                  s.Properties.ValidationSettings.ErrorDisplayMode = ErrorDisplayMode.ImageWithTooltip;
                  s.Properties.ValidationSettings.SetFocusOnError = true;
                  s.Properties.ValidationSettings.ErrorText = "*";
              }).Render();
          });
      });
      }).GetHtml();

}
