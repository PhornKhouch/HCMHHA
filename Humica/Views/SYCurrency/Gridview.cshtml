@{
    var grid = Html.DevExpress().GridView(
       settings =>
       {

           settings.Name = "gridViewItem3";
           settings.KeyFieldName = "ID";

           settings.Width = Unit.Percentage(100);
           settings.SettingsEditing.Mode = GridViewEditingMode.PopupEditForm;

           settings.CallbackRouteValues = new { Controller = "SYCurrency", Action = "Gridview" };

           //settings.SettingsEditing.AddNewRowRouteValues = new { Controller = "HRTelegram", Action = "Create" };
           //settings.SettingsEditing.UpdateRowRouteValues = new { Controller = "HRTelegram", Action = "Edit" };
           //settings.SettingsEditing.DeleteRowRouteValues = new { Controller = "HRTelegram", Action = "Delete" };

           //settings.CommandColumn.Visible = true;
           //settings.CommandColumn.ShowDeleteButton = true;
           //settings.CommandColumn.FixedStyle = GridViewColumnFixedStyle.Left;
           //settings.CommandColumn.ShowNewButtonInHeader = true;
           //settings.CommandColumn.ShowCancelButton = true;
           //settings.CommandColumn.ShowEditButton = true;
           //settings.SettingsBehavior.ConfirmDelete = true;
           //settings.SettingsBehavior.AllowFocusedRow = true;
           settings.Columns.Add(column =>
           {
               column.Caption = Humica.EF.Models.SY.SYSettings.getLabel("ID");
               column.FieldName = "ID";
               column.Visible = false;
           });
           settings.Columns.Add(column =>
           {
               column.Width = 150;
               column.Caption = Humica.EF.Models.SY.SYSettings.getLabel("Date");
               column.FieldName = "Date";
               column.ColumnType = MVCxGridViewColumnType.DateEdit;
               (column.PropertiesEdit as DateEditProperties).DisplayFormatString = ViewData[Humica.EF.SYSConstant.DATE_FORMAT].ToString();
               (column.PropertiesEdit as DateEditProperties).EditFormatString = ViewData[Humica.EF.SYSConstant.DATE_FORMAT].ToString();
               (column.PropertiesEdit as DateEditProperties).DisplayFormatInEditMode = true;
           });

           settings.Columns.Add(column =>
           {
               column.Width = 100;
               column.Caption = Humica.EF.Models.SY.SYSettings.getLabel("BID");
               column.FieldName = "BID";

           });
           settings.Columns.Add(column =>
           {
               column.Width = 100;
               column.Caption = Humica.EF.Models.SY.SYSettings.getLabel("Key");
               column.FieldName = "Key";
           });
           settings.Columns.Add(column =>
           {
               column.Width = 100;
               column.Caption = Humica.EF.Models.SY.SYSettings.getLabel("Unit");
               column.FieldName = "Unit";
           });
           settings.Columns.Add(column =>
           {
               column.Width = 100;
               column.Caption = Humica.EF.Models.SY.SYSettings.getLabel("ASK");
               column.FieldName = "Ask";
           });
           settings.Columns.Add(column =>
           {
               column.Width = 100;
               column.Caption = Humica.EF.Models.SY.SYSettings.getLabel("Average");
               column.FieldName = "Average";
           });

           settings.SettingsEditing.Mode = GridViewEditingMode.PopupEditForm;
           settings.SettingsEditing.EditFormColumnCount = 2;

           settings.SettingsSearchPanel.Visible = true;
           settings.Settings.VerticalScrollBarMode = ScrollBarMode.Hidden;
           settings.Settings.HorizontalScrollBarMode = ScrollBarMode.Auto;
           settings.Settings.ShowHeaderFilterButton = true;

           settings.SettingsPager.PageSize = 15;
           settings.SettingsPager.EnableAdaptivity = true;
           settings.SettingsPager.PageSizeItemSettings.Visible = true;

           settings.SettingsExport.EnableClientSideExportAPI = true;
           settings.SettingsExport.ExportSelectedRowsOnly = true;

           settings.SettingsPopup.EditForm.SettingsAdaptivity.MaxWidth = 800;
           settings.SettingsPopup.EditForm.SettingsAdaptivity.Mode = PopupControlAdaptivityMode.Always;
           settings.SettingsPopup.EditForm.SettingsAdaptivity.VerticalAlign = PopupAdaptiveVerticalAlign.WindowCenter;


           settings.SettingsBehavior.AllowFocusedRow = true;

           settings.CustomJSProperties = (sender, e) =>
           {
               e.Properties["cpVisibleRowCount"] = (sender as MVCxGridView).VisibleRowCount;
           };

           settings.CellEditorInitialize = (s, e) =>
           {
               ASPxEdit editor = (ASPxEdit)e.Editor;
               editor.ValidationSettings.Display = Display.Dynamic;
               if (e.KeyValue != null)
               {
                   if (e.Column.FieldName == "ID")
                   {
                       e.Editor.ReadOnly = true;
                   }
               }
           };


       });

    if (ViewData["EditError"] != null)
    {
        grid.SetEditErrorText((string)ViewData["EditError"]);
    }
}

@grid.Bind(Model).GetHtml()


